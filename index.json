{
  "about/core-beliefs.html": {
    "href": "about/core-beliefs.html",
    "title": "| Composable",
    "keywords": "Core beliefs We believe that if you are considering using our tools you really should read all of this page to determine if it is likely to be a good fit for you and your organization. You may have trouble seeing the relevance at first, but it should all fit together as a whole in the end. We believe that people should always be a vital consideration:: We believe that our level of success of failure in collaborative endeavors hinges more on the humans, relationships and cultures involved than on any other factor. On how well we collaborate, communicate, motivate etc. We believe that this in turn hinges on our understanding of ourselves, on our understanding of human nature, on our understanding of the human mind and its properties, strengths and weaknesses. We believe that this understanding must include our drives, instincts, emotions and feelings. We believe that whenever we lose sight of this as a vital consideration when making choices we are likely to make choices with poor outcomes. This includes software design choices. We believe in the necessity of accepting complexity and letting go of certainty:: We believe we all instinctively prefer simplicity, certainty and absolutes. That this is a trait that was likely adaptive when we lived as hunter gatherers. We believe that this is no longer a primarily adaptive trait. We believe that succumbing to this trait cripples our ability to see the true complexity of the reality we have before us. Rather than clear cut wrong and right ways to do things we believe that we face great complexity and a great amount of possible choices in every situation. We believe that we must accept the weight of the uncertainty of this reality in order to make good choices. We believe in the superiority of motivated belief over dichotomies and absolutes:: We believe that succumbing to the desire to think and debate in terms of simple good versus bad dichotomies or absolutes such as \"best way\" is crippling. That it cripples not only our own understanding, but even more so our ability to collaborate in teams and larger communities. We believe that it is far better to say: \"We believe\" and then motivate that belief, than to state something as a fact without motivation. We believe that we must resist the temptation to talk about good versus bad and wrong versus right. We believe that there is no such thing as a \"best\" way to do anything, rather every option has a complex set of consequences in any specific set of circumstances which we never fully understand. We believe that we should abandon the false simplicity of right versus wrong dichotomies and absolutes such as \"best\". We believe that development should focus on shared mental models designed for humans:: We believe that developing software is first and foremost a process of collaboratively designing and communicating shared mental models. We believe that our focus must be on the quality and clarity of our mental models and the clarity and expressiveness of the code that we use to communicate these mental models to each other and our future selves. That the quality of a design is determined by how easily the totality of the mental models that it contains can be learned, communicated, and modified by human beings. We believe that the primary limiting factor is the mental burden imposed by the totality of our shared mental models:: We believe that in the majority of software development situations a lack of focus on the quality of the mental models is ultimately the primary factor limiting progress. That progress slows and ultimately stalls when the totality of our mental models fall into a state where the humans developing them can no longer effectively learn, understand, modify and communicate them. We believe that if we continually refactor our mental models to fit the human mind it is possible to maintain progress indefinitely without stalling and with limited slowdown even when facing immensely complicated software. We believe that this is the implicit principle underpinning approaches such as Domain Driven Design and principles such as SOLID."
  },
  "about/design-principles.html": {
    "href": "about/design-principles.html",
    "title": "| Composable",
    "keywords": "Design Principles Strive to minimize total mental burden Over minimizing initial learning effort Over minimizing local complexity Over minimizing lines of code Over minimizing component complexity Over maximizing performance Over maximizing scalability"
  },
  "about/faq.html": {
    "href": "about/faq.html",
    "title": "| Composable",
    "keywords": "How stable is Composable? The event store and the document database have been proven in production for a number of years. The current code has only minor changes. The service bus is new, under development, and untried in production. Of course all the components have test suites. No component has known bugs. We normally prioritize bug fixes over all feature development. What type of infrastructure does Composable require? Composable uses a relational database for all storage. Currently, supported databases are Sql Server, PostgreSql and MySql. Other than a Sql instance composable components have no special requirements. Performance & scalability How well does Composable components perform? Very well and it will only get better. We have spent a ton of effort making sure that both performance and scalability is as high as possible without sacrificing reliability, productivity and maintainability. We have automated performance degradation tests that run continuously as we develop. We continuously look for ways to make things even faster and as we do we adjust the tests to require the new level of performance that we have achieved. What if we need extreme querying scalability? Given this requirement we assume that you are willing to sacrifice some level of consistency in query results. These are then possible options: Maintain query models in any storage with sufficient scalablility. Add a layer on top of your querying API that makes use of a distributed cache. What if we need extreme write side scalability? If only a small subset of your data requires this level of write scalability, consider implementing only that part using other tools. If most of your data requires that level of scalability we would not recommend using our tools. Reliability Why do you enforce transactions for all updates? Because it is our opinion that without transactions you have to sacrifice either reliability or simplicity/maintainability and we prioritize those over scalability and performance. Why do you enforce exactly once delivery for domain events? Because it is our opinion that without exactly once delivery you have to sacrifice either reliability or simplicity/maintainability and we prioritize those over scalability and performance. I've heard that exactly once delivery is impossible... All arguments to that effect that we have encountered reason by disallowing transactions and/or message deduplication. Only through imposing this artificial constraint does exactly once delivery become \"impossible\". Exactly once == at least once + deduplication + transactions."
  },
  "about/index.html": {
    "href": "about/index.html",
    "title": "| Composable",
    "keywords": "= About :page-permalink: /about/ :page-toc: :doctype: book :imagesdir: images :source-highlighter: highlightjs :highlightjs-theme: agate include::core-beliefs.adoc[] include::design-principles.adoc[] include::primary-architectural-choices.adoc[]"
  },
  "about/primary-architectural-choices.html": {
    "href": "about/primary-architectural-choices.html",
    "title": "| Composable",
    "keywords": "Primary architectural choices We require you to learn a \"new\" modelling paradigm, semantic events:: We do not believe that we would be able to build highly complicated software using a language that did not support a flexible modelling paradigm, such as object oriented programming, without great loss of productivity, simplicity and safety. We believe that such standardized modelling paradigms enable us to successfully manage far greater levels of complexity than we could without them. This is what we aim to achieve by ubiquitously leveraging the semantic event modeling paradigm throughout our tools. Using the existing interface support in C# we enable you to model a highly complicated domain in terms of which events can occur and how the meanings of these events relate to each other, the aggregate root to which they belong, and to other abstractions in the domain. The same modelling paradigm is utilized at all levels of design. From the smallest component or entity nested in an aggregate to designing and implementing the highest level integrations in an ecosystem of integrated systems. Our experience is that this new modelling paradigm, this new view of your domain and ecosystem of domains, is highly beneficial to managing and scaling complexity of the domains and integrations between them. We also find it highly beneficial in communicating with with domain experts. It has given us an expressive way of viewing a system in terms of what can happen, without getting bogged down in the details of how. On the technical side it enables us to dramatically cut down on manual code and manual configuration. It enables us to build complicated aggregates, read models, and message based integrations with simple, SOLID, expressive code. All with zero manual routing code or configuration to take into consideration. You can use the same powerful mental model to understand how everything will work at all levels instead of having to design and remember countless custom routes within aggregates and within the bus. Our experience is that this as a whole dramatically reduces the total mental burden of understanding a large system or ecosystem of systems. Our experience is that it allows us to scale to far greater complexity of a domain and exposed features without development slowing or virtually stalling due to the runaway mental burden of an implementation that does not leverage a powerful modelling paradigm. We enforce the use of transactions for all domain data updates:: We enforce the use of exactly once delivery for domain events and commands::"
  },
  "api/Composable.ComposableApi.html": {
    "href": "api/Composable.ComposableApi.html",
    "title": "Class ComposableApi | Composable",
    "keywords": "Class ComposableApi Namespace Composable Assembly Composable.CQRS.dll public class ComposableApi Inheritance object ComposableApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties DocumentDb public DocumentDbApi DocumentDb { get; } Property Value DocumentDbApi EventStore public EventStoreApi EventStore { get; } Property Value EventStoreApi"
  },
  "api/Composable.Contracts.Assert.AssertionException.html": {
    "href": "api/Composable.Contracts.Assert.AssertionException.html",
    "title": "Class Assert.AssertionException | Composable",
    "keywords": "Class Assert.AssertionException Namespace Composable.Contracts Assembly Composable.CQRS.dll public class Assert.AssertionException : Exception, ISerializable Inheritance object Exception Assert.AssertionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AssertionException(InspectionType, int) public AssertionException(InspectionType inspectionType, int index) Parameters inspectionType InspectionType index int"
  },
  "api/Composable.Contracts.Assert.BaseAssertion.html": {
    "href": "api/Composable.Contracts.Assert.BaseAssertion.html",
    "title": "Struct Assert.BaseAssertion | Composable",
    "keywords": "Struct Assert.BaseAssertion Namespace Composable.Contracts Assembly Composable.CQRS.dll public readonly struct Assert.BaseAssertion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Methods Assert(bool) [ContractAnnotation(\"c1:false => halt\")] public Assert.ChainedAssertion Assert(bool c1) Parameters c1 bool Returns Assert.ChainedAssertion Assert(bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt\")] public Assert.ChainedAssertion Assert(bool c1, bool c2) Parameters c1 bool c2 bool Returns Assert.ChainedAssertion Assert(bool, bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt; c3:false => halt\")] public Assert.ChainedAssertion Assert(bool c1, bool c2, bool c3) Parameters c1 bool c2 bool c3 bool Returns Assert.ChainedAssertion Assert(bool, bool, bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt; c3:false => halt; c4:false => halt\")] public Assert.ChainedAssertion Assert(bool c1, bool c2, bool c3, bool c4) Parameters c1 bool c2 bool c3 bool c4 bool Returns Assert.ChainedAssertion NotNull(object?, object?) [ContractAnnotation(\"c1:null => halt; c2:null => halt\")] public Assert.ChainedAssertion NotNull(object? c1, object? c2) Parameters c1 object c2 object Returns Assert.ChainedAssertion NotNull(object?, object?, object?) [ContractAnnotation(\"c1:null => halt; c2:null => halt; c3:null => halt\")] public Assert.ChainedAssertion NotNull(object? c1, object? c2, object? c3) Parameters c1 object c2 object c3 object Returns Assert.ChainedAssertion NotNull(object?, object?, object?, object?) [ContractAnnotation(\"c1:null => halt; c2:null => halt; c3:null => halt; c4:null => halt\")] public Assert.ChainedAssertion NotNull(object? c1, object? c2, object? c3, object? c4) Parameters c1 object c2 object c3 object c4 object Returns Assert.ChainedAssertion NotNullOrDefault<TValue>(TValue?) [ContractAnnotation(\"obj:null => halt\")] public TValue NotNullOrDefault<TValue>(TValue? obj) Parameters obj TValue Returns TValue Type Parameters TValue NotNull<TValue>(TValue) [ContractAnnotation(\"obj:null => halt\")] public TValue NotNull<TValue>(TValue obj) Parameters obj TValue Returns TValue Type Parameters TValue"
  },
  "api/Composable.Contracts.Assert.ChainedAssertion.html": {
    "href": "api/Composable.Contracts.Assert.ChainedAssertion.html",
    "title": "Struct Assert.ChainedAssertion | Composable",
    "keywords": "Struct Assert.ChainedAssertion Namespace Composable.Contracts Assembly Composable.CQRS.dll public readonly struct Assert.ChainedAssertion Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Methods And(bool) [ContractAnnotation(\"c1:false => halt\")] public Assert.ChainedAssertion And(bool c1) Parameters c1 bool Returns Assert.ChainedAssertion And(bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt\")] public Assert.ChainedAssertion And(bool c1, bool c2) Parameters c1 bool c2 bool Returns Assert.ChainedAssertion And(bool, bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt; c3:false => halt\")] public Assert.ChainedAssertion And(bool c1, bool c2, bool c3) Parameters c1 bool c2 bool c3 bool Returns Assert.ChainedAssertion And(bool, bool, bool, bool) [ContractAnnotation(\"c1:false => halt; c2:false => halt; c3:false => halt; c4:false => halt\")] public Assert.ChainedAssertion And(bool c1, bool c2, bool c3, bool c4) Parameters c1 bool c2 bool c3 bool c4 bool Returns Assert.ChainedAssertion NotNull(object) [ContractAnnotation(\"c1:null => halt\")] public Assert.ChainedAssertion NotNull(object c1) Parameters c1 object Returns Assert.ChainedAssertion NotNull(object, object) [ContractAnnotation(\"c1:null => halt; c2:null => halt\")] public Assert.ChainedAssertion NotNull(object c1, object c2) Parameters c1 object c2 object Returns Assert.ChainedAssertion NotNull(object, object, object) [ContractAnnotation(\"c1:null => halt; c2:null => halt; c3:null => halt\")] public Assert.ChainedAssertion NotNull(object c1, object c2, object c3) Parameters c1 object c2 object c3 object Returns Assert.ChainedAssertion NotNull(object, object, object, object) [ContractAnnotation(\"c1:null => halt; c2:null => halt; c3:null => halt; c4:null => halt\")] public Assert.ChainedAssertion NotNull(object c1, object c2, object c3, object c4) Parameters c1 object c2 object c3 object c4 object Returns Assert.ChainedAssertion"
  },
  "api/Composable.Contracts.Assert.html": {
    "href": "api/Composable.Contracts.Assert.html",
    "title": "Class Assert | Composable",
    "keywords": "Class Assert Namespace Composable.Contracts Assembly Composable.CQRS.dll public static class Assert Inheritance object Assert Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Argument Assert conditions on arguments to current method. public static Assert.BaseAssertion Argument { get; } Property Value Assert.BaseAssertion Invariant Assert something that must always be true for \"this\". public static Assert.BaseAssertion Invariant { get; } Property Value Assert.BaseAssertion Result Assert conditions on the result of makeing a method call. public static Assert.BaseAssertion Result { get; } Property Value Assert.BaseAssertion State Assert conditions about current state of \"this\". Failures would mean that someone made a call that is illegal given state of \"this\". public static Assert.BaseAssertion State { get; } Property Value Assert.BaseAssertion"
  },
  "api/Composable.Contracts.AssertAndRun.html": {
    "href": "api/Composable.Contracts.AssertAndRun.html",
    "title": "Class AssertAndRun | Composable",
    "keywords": "Class AssertAndRun Namespace Composable.Contracts Assembly Composable.CQRS.dll public class AssertAndRun Inheritance object AssertAndRun Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AssertAndRun(Action) public AssertAndRun(Action assertion) Parameters assertion Action"
  },
  "api/Composable.Contracts.AssertionException.html": {
    "href": "api/Composable.Contracts.AssertionException.html",
    "title": "Class AssertionException | Composable",
    "keywords": "Class AssertionException Namespace Composable.Contracts Assembly Composable.CQRS.dll public class AssertionException : Exception, ISerializable Inheritance object Exception AssertionException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AssertionException(InspectionType, string) public AssertionException(InspectionType inspectionType, string failureMessage) Parameters inspectionType InspectionType failureMessage string"
  },
  "api/Composable.Contracts.Contract.html": {
    "href": "api/Composable.Contracts.Contract.html",
    "title": "Class Contract | Composable",
    "keywords": "Class Contract Namespace Composable.Contracts Assembly Composable.CQRS.dll Ensures that a class's contract is followed. public static class Contract Inheritance object Contract Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Argument(params Expression<Func<object>>[]) Start inspecting one or more arguments for contract compliance. Using an expression removes the need for an extra string to specify the name and ensures that the name is always correct in exceptions. The returned type : Composable.Contracts.Inspected<TValue> can be easily extended with extension methods to support generic inspections. public static Inspected<Guid> NotEmpty(this Inspected<Guid> me) { return me.Inspect(inspected => inspected != Guid.Empty, badValue => new GuidIsEmptyContractViolationException(badValue)); } public static IInspected<object> Argument(params Expression<Func<object>>[] arguments) Parameters arguments Expression<Func<object>>[] Returns IInspected<object> Argument(object?, string) public static IInspected<object> Argument(object? p1, string n1) Parameters p1 object n1 string Returns IInspected<object> Argument(object?, string, object?, string) public static IInspected<object> Argument(object? p1, string n1, object? p2, string n2) Parameters p1 object n1 string p2 object n2 string Returns IInspected<object> Argument(object?, string, object?, string, object?, string) public static IInspected<object> Argument(object? p1, string n1, object? p2, string n2, object? p3, string n3) Parameters p1 object n1 string p2 object n2 string p3 object n3 string Returns IInspected<object> ArgumentNotNull(object?, string) public static void ArgumentNotNull(object? p1, string n1) Parameters p1 object n1 string ArgumentNotNull(object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2) Parameters p1 object n1 string p2 object n2 string ArgumentNotNull(object?, string, object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2, object? p3, string n3) Parameters p1 object n1 string p2 object n2 string p3 object n3 string ArgumentNotNull(object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string ArgumentNotNull(object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string ArgumentNotNull(object?, string, object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5, object? p6, string n6) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string p6 object n6 string ArgumentNotNull(object?, string, object?, string, object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNull(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5, object? p6, string n6, object? p7, string n7) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string p6 object n6 string p7 object n7 string ArgumentNotNullEmptyOrWhitespace(string?, string) public static void ArgumentNotNullEmptyOrWhitespace(string? p1, string n1) Parameters p1 string n1 string ArgumentNotNullEmptyOrWhitespace(string?, string, string?, string) public static void ArgumentNotNullEmptyOrWhitespace(string? p1, string n1, string? p2, string n2) Parameters p1 string n1 string p2 string n2 string ArgumentNotNullOrDefault(object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1) Parameters p1 object n1 string ArgumentNotNullOrDefault(object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2) Parameters p1 object n1 string p2 object n2 string ArgumentNotNullOrDefault(object?, string, object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2, object? p3, string n3) Parameters p1 object n1 string p2 object n2 string p3 object n3 string ArgumentNotNullOrDefault(object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string ArgumentNotNullOrDefault(object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string ArgumentNotNullOrDefault(object?, string, object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5, object? p6, string n6) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string p6 object n6 string ArgumentNotNullOrDefault(object?, string, object?, string, object?, string, object?, string, object?, string, object?, string, object?, string) public static void ArgumentNotNullOrDefault(object? p1, string n1, object? p2, string n2, object? p3, string n3, object? p4, string n4, object? p5, string n5, object? p6, string n6, object? p7, string n7) Parameters p1 object n1 string p2 object n2 string p3 object n3 string p4 object n4 string p5 object n5 string p6 object n6 string p7 object n7 string ArgumentNotNullOrEmpty(string?, string) public static void ArgumentNotNullOrEmpty(string? p1, string n1) Parameters p1 string n1 string ArgumentNotNullOrEmpty(string?, string, string?, string) public static void ArgumentNotNullOrEmpty(string? p1, string n1, string? p2, string n2) Parameters p1 string n1 string p2 string n2 string Argument<TParameter>(params Expression<Func<TParameter>>[]) Start inspecting one or more arguments for contract compliance. Using an expression removes the need for an extra string to specify the name and ensures that the name is always correct in exceptions. public static IInspected<TParameter> Argument<TParameter>(params Expression<Func<TParameter>>[] arguments) Parameters arguments Expression<Func<TParameter>>[] Returns IInspected<TParameter> Type Parameters TParameter Argument<TParameter>(params (TParameter Value, string Name)[]) Start inspecting one or more arguments for contract compliance. public static IInspected<TParameter> Argument<TParameter>(params (TParameter Value, string Name)[] arguments) Parameters arguments (TParameter Value, string Name)[] Returns IInspected<TParameter> Type Parameters TParameter Argument<TInspected>(TInspected, string) public static IInspected<TInspected> Argument<TInspected>(TInspected p1, string n1) Parameters p1 TInspected n1 string Returns IInspected<TInspected> Type Parameters TInspected Argument<TInspected>(TInspected, string, TInspected, string) public static IInspected<TInspected> Argument<TInspected>(TInspected p1, string n1, TInspected p2, string n2) Parameters p1 TInspected n1 string p2 TInspected n2 string Returns IInspected<TInspected> Type Parameters TInspected Argument<TInspected>(TInspected, string, TInspected, string, TInspected, string) public static IInspected<TInspected> Argument<TInspected>(TInspected p1, string n1, TInspected p2, string n2, TInspected p3, string n3) Parameters p1 TInspected n1 string p2 TInspected n2 string p3 TInspected n3 string Returns IInspected<TInspected> Type Parameters TInspected Invariant(params Expression<Func<object>>[]) Start inspecting one or more members for contract compliance. An invariant is something that must always be true for an object. Like email and password never being missing for an account. Using an expression removes the need for an extra string to specify the name and ensures that the name is always correct in exceptions. The returned type : Composable.Contracts.Inspected<TValue> can be easily extended with extension methods to support generic inspections. public static Inspected<Guid> NotEmpty(this Inspected<Guid> me) { return me.Inspect(inspected => inspected != Guid.Empty, badValue => new GuidIsEmptyContractViolationException(badValue)); } public static IInspected<object> Invariant(params Expression<Func<object>>[] arguments) Parameters arguments Expression<Func<object>>[] Returns IInspected<object> Invariant(object?, string) public static IInspected<object> Invariant(object? p1, string n1) Parameters p1 object n1 string Returns IInspected<object> Invariant(object?, string, object?, string) public static IInspected<object> Invariant(object? p1, string n1, object? p2, string n2) Parameters p1 object n1 string p2 object n2 string Returns IInspected<object> Invariant(object?, string, object?, string, object?, string) public static IInspected<object> Invariant(object? p1, string n1, object? p2, string n2, object? p3, string n3) Parameters p1 object n1 string p2 object n2 string p3 object n3 string Returns IInspected<object> Invariant<TInspected>(TInspected, string) public static IInspected<TInspected> Invariant<TInspected>(TInspected p1, string n1) Parameters p1 TInspected n1 string Returns IInspected<TInspected> Type Parameters TInspected Invariant<TInspected>(TInspected, string, TInspected, string) public static IInspected<TInspected> Invariant<TInspected>(TInspected p1, string n1, TInspected p2, string n2) Parameters p1 TInspected n1 string p2 TInspected n2 string Returns IInspected<TInspected> Type Parameters TInspected Invariant<TInspected>(TInspected, string, TInspected, string, TInspected, string) public static IInspected<TInspected> Invariant<TInspected>(TInspected p1, string n1, TInspected p2, string n2, TInspected p3, string n3) Parameters p1 TInspected n1 string p2 TInspected n2 string p3 TInspected n3 string Returns IInspected<TInspected> Type Parameters TInspected Return<TReturnValue>(TReturnValue, Action<IInspected<TReturnValue>>) Inspect a return value by passing in a Lambda that performs the inspections the same way you would for an argument. public static TReturnValue Return<TReturnValue>(TReturnValue returnValue, Action<IInspected<TReturnValue>> assert) Parameters returnValue TReturnValue assert Action<IInspected<TReturnValue>> Returns TReturnValue Type Parameters TReturnValue"
  },
  "api/Composable.Contracts.ContractAssertThatException.html": {
    "href": "api/Composable.Contracts.ContractAssertThatException.html",
    "title": "Class ContractAssertThatException | Composable",
    "keywords": "Class ContractAssertThatException Namespace Composable.Contracts Assembly Composable.CQRS.dll public class ContractAssertThatException : Exception, ISerializable Inheritance object Exception ContractAssertThatException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors ContractAssertThatException(int) public ContractAssertThatException(int condition) Parameters condition int"
  },
  "api/Composable.Contracts.ContractViolationException.html": {
    "href": "api/Composable.Contracts.ContractViolationException.html",
    "title": "Class ContractViolationException | Composable",
    "keywords": "Class ContractViolationException Namespace Composable.Contracts Assembly Composable.CQRS.dll Exceptions raise by the inspectors should inherit this exception type. public class ContractViolationException : Exception, ISerializable Inheritance object Exception ContractViolationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors ContractViolationException(IInspectedValue) Standard constructor that will construct a queuedMessageInformation based on the name and value of the failing member. public ContractViolationException(IInspectedValue badValue) Parameters badValue IInspectedValue Properties BadValue The value that failed inspection. public IInspectedValue BadValue { get; } Property Value IInspectedValue Message Tells which field/property/argument failed inspection and what value it had. public override string Message { get; } Property Value string"
  },
  "api/Composable.Contracts.IInspected-1.html": {
    "href": "api/Composable.Contracts.IInspected-1.html",
    "title": "Interface IInspected<TValue> | Composable",
    "keywords": "Interface IInspected<TValue> Namespace Composable.Contracts Assembly Composable.CQRS.dll public interface IInspected<TValue> Type Parameters TValue Extension Methods ObjectInspector.NotNullOrDefault<TValue>(IInspected<TValue>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Inspect(Func<TValue, bool>, Func<IInspectedValue<TValue>, Exception>?) Performs the supplied inspection against each Composable.Contracts.InspectedValue in the instance. IInspected<TValue> Inspect(Func<TValue, bool> isValueValid, Func<IInspectedValue<TValue>, Exception>? buildException = null) Parameters isValueValid Func<TValue, bool> Expression that should return true if the Composable.Contracts.InspectedValue<TValue> is valid. buildException Func<IInspectedValue<TValue>, Exception> Expression that should return an appropriate exception if the inspection fails. If not supplied a default ContractViolationException will be created. Returns IInspected<TValue> The same instance (this) in order to enable fluent chaining style code. Exceptions Exception The exception created by the buildException argument will be thrown if an Composable.Contracts.InspectedValue<TValue> fails inspection."
  },
  "api/Composable.Contracts.IInspectedValue-1.html": {
    "href": "api/Composable.Contracts.IInspectedValue-1.html",
    "title": "Interface IInspectedValue<TValue> | Composable",
    "keywords": "Interface IInspectedValue<TValue> Namespace Composable.Contracts Assembly Composable.CQRS.dll public interface IInspectedValue<out TValue> : IInspectedValue Type Parameters TValue Inherited Members IInspectedValue.Type IInspectedValue.Name Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Value TValue Value { get; } Property Value TValue"
  },
  "api/Composable.Contracts.IInspectedValue.html": {
    "href": "api/Composable.Contracts.IInspectedValue.html",
    "title": "Interface IInspectedValue | Composable",
    "keywords": "Interface IInspectedValue Namespace Composable.Contracts Assembly Composable.CQRS.dll public interface IInspectedValue Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Name The name of an argument, a field, or a property. \"ReturnValue\" for return value inspections. string Name { get; } Property Value string Type The InspectionType of the inspection: Argument, Invariant or ReturnValue InspectionType Type { get; } Property Value InspectionType"
  },
  "api/Composable.Contracts.InspectionType.html": {
    "href": "api/Composable.Contracts.InspectionType.html",
    "title": "Enum InspectionType | Composable",
    "keywords": "Enum InspectionType Namespace Composable.Contracts Assembly Composable.CQRS.dll Argument, Invariant or ReturnValue public enum InspectionType Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Fields Argument = 0 The inspected value is an argument to a method Assertion = 3 Invariant = 1 The inspected value is an invariant of the class Result = 5 The inspected value is the return value of something the calling code called. ReturnValue = 2 The inspected value is a return value State = 4 The inspected value is part of the current state of the calling code."
  },
  "api/Composable.Contracts.InvalidAccessorLambdaException.html": {
    "href": "api/Composable.Contracts.InvalidAccessorLambdaException.html",
    "title": "Class InvalidAccessorLambdaException | Composable",
    "keywords": "Class InvalidAccessorLambdaException Namespace Composable.Contracts Assembly Composable.CQRS.dll Exception thrown when an unsupported lambda expression is used. public class InvalidAccessorLambdaException : Exception, ISerializable Inheritance object Exception InvalidAccessorLambdaException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors InvalidAccessorLambdaException() Standard constructor public InvalidAccessorLambdaException()"
  },
  "api/Composable.Contracts.ObjectInspector.html": {
    "href": "api/Composable.Contracts.ObjectInspector.html",
    "title": "Class ObjectInspector | Composable",
    "keywords": "Class ObjectInspector Namespace Composable.Contracts Assembly Composable.CQRS.dll Performs inspections on objects public static class ObjectInspector Inheritance object ObjectInspector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NotNullOrDefault<TValue>(IInspected<TValue>) Throws Composable.Contracts.ObjectIsNullContractViolationException if any inspected value is null Throws Composable.Contracts.ObjectIsDefaultContractViolationException if any inspected value is default(TValue). Such as 0 for integer, Guid.Empty for Guid, new SomeStruct(). public static IInspected<TValue> NotNullOrDefault<TValue>(this IInspected<TValue> me) Parameters me IInspected<TValue> Returns IInspected<TValue> Type Parameters TValue NotNull<TValue>(IInspected<TValue>) Throws Composable.Contracts.ObjectIsNullContractViolationException if any inspected value is null Consider using NotNullOrDefault<TValue>(IInspected<TValue>) instead as it works for value types as well and is only marginally slower. public static IInspected<TValue> NotNull<TValue>(this IInspected<TValue> me) where TValue : class Parameters me IInspected<TValue> Returns IInspected<TValue> Type Parameters TValue"
  },
  "api/Composable.Contracts.StringInspector.html": {
    "href": "api/Composable.Contracts.StringInspector.html",
    "title": "Class StringInspector | Composable",
    "keywords": "Class StringInspector Namespace Composable.Contracts Assembly Composable.CQRS.dll Performs inspections on string instances public static class StringInspector Inheritance object StringInspector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NotNullEmptyOrWhiteSpace(IInspected<string>) Throws Composable.Contracts.ObjectIsNullContractViolationException if any expected value is null. Throws Composable.Contracts.StringIsEmptyContractViolationException if any inspected value is an empty string. Throws Composable.Contracts.StringIsWhitespaceContractViolationException if any inspected value is a string containing only whitespace. public static IInspected<string> NotNullEmptyOrWhiteSpace(this IInspected<string> me) Parameters me IInspected<string> Returns IInspected<string>"
  },
  "api/Composable.Contracts.html": {
    "href": "api/Composable.Contracts.html",
    "title": "Namespace Composable.Contracts | Composable",
    "keywords": "Namespace Composable.Contracts Classes Assert Assert.AssertionException AssertAndRun AssertionException Contract Ensures that a class's contract is followed. ContractAssertThatException ContractViolationException Exceptions raise by the inspectors should inherit this exception type. InvalidAccessorLambdaException Exception thrown when an unsupported lambda expression is used. ObjectInspector Performs inspections on objects StringInspector Performs inspections on string instances Structs Assert.BaseAssertion Assert.ChainedAssertion Interfaces IInspectedValue IInspectedValue<TValue> IInspected<TValue> Enums InspectionType Argument, Invariant or ReturnValue"
  },
  "api/Composable.DDD.Entity-1.html": {
    "href": "api/Composable.DDD.Entity-1.html",
    "title": "Class Entity<TEntity> | Composable",
    "keywords": "Class Entity<TEntity> Namespace Composable.DDD Assembly Composable.CQRS.dll Simple base class for Entities that ensures a correct identity based Equals(object), GetHashCode(), and IEquatable<T>. This class uses Guids as Ids because it is the only built in .Net type the developers are aware of which can, in practice, guarantee for a system that an PersistentEntity will have a globally unique immutable identity from the moment of instantiation and through any number of persisting-loading cycles. That in turn is an absolute requirement for a correct implementation of Equals(object), GetHashCode(), and IEquatable<T>. public class Entity<TEntity> : Entity<TEntity, Guid>, IHasPersistentIdentity<Guid>, IEquatable<TEntity> where TEntity : Entity<TEntity> Type Parameters TEntity Inheritance object Entity<TEntity, Guid> Entity<TEntity> Implements IHasPersistentIdentity<Guid> IEquatable<TEntity> Derived VersionedEntity<T> Inherited Members Entity<TEntity, Guid>.Id Entity<TEntity, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<TEntity, Guid>.GetIdBypassContractValidation() Entity<TEntity, Guid>.Equals(TEntity) Entity<TEntity, Guid>.Equals(object) Entity<TEntity, Guid>.GetHashCode() Entity<TEntity, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Entity() Creates a new instance with an automatically generated Id protected Entity() Entity(Guid) Creates an instance using the supplied id as the Id. protected Entity(Guid id) Parameters id Guid Methods Equals(object?) Implements equals using persistent reference semantics. If two instances have the same Id, Equals will return true. public override bool Equals(object? obj) Parameters obj object Returns bool Equals(TEntity?) Indicates whether the current object is equal to another object of the same type. public bool Equals(TEntity? other) Parameters other TEntity An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. Operators operator ==(Entity<TEntity>?, Entity<TEntity>?) True if both instances have the same ID public static bool operator ==(Entity<TEntity>? lhs, Entity<TEntity>? rhs) Parameters lhs Entity<TEntity> rhs Entity<TEntity> Returns bool operator !=(Entity<TEntity>, Entity<TEntity>) True if both instances do not have the same ID public static bool operator !=(Entity<TEntity> lhs, Entity<TEntity> rhs) Parameters lhs Entity<TEntity> rhs Entity<TEntity> Returns bool"
  },
  "api/Composable.DDD.Entity-2.html": {
    "href": "api/Composable.DDD.Entity-2.html",
    "title": "Class Entity<TEntity, TKey> | Composable",
    "keywords": "Class Entity<TEntity, TKey> Namespace Composable.DDD Assembly Composable.CQRS.dll Base class for any class that considers equality to be that the Ids for two instances are the same. It provides implementations of Equals(object), GetHashCode(), and IEquatable<T>. Equals is implemented as: return !ReferenceEquals(null, other) && other.Id.Equals(Id) the operators simply uses Equals. public class Entity<TEntity, TKey> : IEquatable<TEntity>, IHasPersistentIdentity<TKey> where TEntity : Entity<TEntity, TKey> Type Parameters TEntity TKey Inheritance object Entity<TEntity, TKey> Implements IEquatable<TEntity> IHasPersistentIdentity<TKey> Derived Entity<TEntity> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Entity(TKey) Construct an instance with as the Id. protected Entity(TKey id) Parameters id TKey Properties Id The unique identifier for this instance. public virtual TKey Id { get; } Property Value TKey Methods Equals(object?) Implements equals using persistent reference semantics. If two instances have the same Id, Equals will return true. public override bool Equals(object? obj) Parameters obj object Returns bool Equals(TEntity?) Implements equals using persistent reference semantics. If two instances have the same Id, Equals will return true. public virtual bool Equals(TEntity? other) Parameters other TEntity Returns bool GetHashCode() Serves as the default hash function. public override int GetHashCode() Returns int A hash code for the current object. GetIdBypassContractValidation() Gets the id of the instance bypassing contract validation. Should probably never be used except by infrastructure code. [Obsolete(\"Should probably never be used except by infrastructure code.\")] protected TKey GetIdBypassContractValidation() Returns TKey SetIdBeVerySureYouKnowWhatYouAreDoing(TKey) Sets the id of the instance. Should probably never be used except by infrastructure code. [Obsolete(\"Should probably never be used except by infrastructure code.\")] protected void SetIdBeVerySureYouKnowWhatYouAreDoing(TKey id) Parameters id TKey ToString() Returns a string similar to: MyType:MyId public override string ToString() Returns string Operators operator ==(Entity<TEntity, TKey>?, Entity<TEntity, TKey>?) True if both instances have the same ID public static bool operator ==(Entity<TEntity, TKey>? lhs, Entity<TEntity, TKey>? rhs) Parameters lhs Entity<TEntity, TKey> rhs Entity<TEntity, TKey> Returns bool operator !=(Entity<TEntity, TKey>, Entity<TEntity, TKey>) True if both instances do not have the same ID public static bool operator !=(Entity<TEntity, TKey> lhs, Entity<TEntity, TKey> rhs) Parameters lhs Entity<TEntity, TKey> rhs Entity<TEntity, TKey> Returns bool"
  },
  "api/Composable.DDD.IHasPersistentIdentity-1.html": {
    "href": "api/Composable.DDD.IHasPersistentIdentity-1.html",
    "title": "Interface IHasPersistentIdentity<TKeyType> | Composable",
    "keywords": "Interface IHasPersistentIdentity<TKeyType> Namespace Composable.DDD Assembly Composable.CQRS.dll Anything that can be uniquely identified using it's id over any number of persist/load cycles. public interface IHasPersistentIdentity<out TKeyType> Type Parameters TKeyType Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Id The unique identifier for this instance. TKeyType Id { get; } Property Value TKeyType"
  },
  "api/Composable.DDD.ValueObject-1.html": {
    "href": "api/Composable.DDD.ValueObject-1.html",
    "title": "Class ValueObject<T> | Composable",
    "keywords": "Class ValueObject<T> Namespace Composable.DDD Assembly Composable.CQRS.dll Base class for value objects that implements value equality based on instance fields. Properties are ignored when comparing. Only fields are used. public abstract class ValueObject<T> : IEquatable<T> where T : ValueObject<T> Type Parameters T Inheritance object ValueObject<T> Implements IEquatable<T> Derived EndpointId EndPointAddress MessageTypes.Remotable.ExactlyOnce.Command AggregateEvent Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Equals(object?) public override bool Equals(object? obj) Parameters obj object Returns bool Equals(T?) public virtual bool Equals(T? other) Parameters other T Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string A JSON serialized version of the instance. Operators operator ==(ValueObject<T>?, ValueObject<T>?) Compares the objects for equality using value semantics public static bool operator ==(ValueObject<T>? lhs, ValueObject<T>? rhs) Parameters lhs ValueObject<T> rhs ValueObject<T> Returns bool operator !=(ValueObject<T>, ValueObject<T>) Compares the objects for inequality using value semantics public static bool operator !=(ValueObject<T> lhs, ValueObject<T> rhs) Parameters lhs ValueObject<T> rhs ValueObject<T> Returns bool"
  },
  "api/Composable.DDD.VersionedEntity-1.html": {
    "href": "api/Composable.DDD.VersionedEntity-1.html",
    "title": "Class VersionedEntity<T> | Composable",
    "keywords": "Class VersionedEntity<T> Namespace Composable.DDD Assembly Composable.CQRS.dll Base class for persistent entities with versioning information public class VersionedEntity<T> : Entity<T>, IHasPersistentIdentity<Guid>, IEquatable<T> where T : VersionedEntity<T> Type Parameters T Inheritance object Entity<T, Guid> Entity<T> VersionedEntity<T> Implements IHasPersistentIdentity<Guid> IEquatable<T> Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> Inherited Members Entity<T>.Equals(T) Entity<T>.Equals(object) Entity<T>.GetHashCode() Entity<T, Guid>.Id Entity<T, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<T, Guid>.GetIdBypassContractValidation() Entity<T, Guid>.Equals(T) Entity<T, Guid>.Equals(object) Entity<T, Guid>.GetHashCode() Entity<T, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors VersionedEntity(Guid) Creates an instance using the supplied id as the Id. protected VersionedEntity(Guid id) Parameters id Guid Properties Version Contains the current version of the entity public virtual int Version { get; protected set; } Property Value int"
  },
  "api/Composable.DDD.html": {
    "href": "api/Composable.DDD.html",
    "title": "Namespace Composable.DDD | Composable",
    "keywords": "Namespace Composable.DDD Classes Entity<TEntity> Simple base class for Entities that ensures a correct identity based Equals(object), GetHashCode(), and IEquatable<T>. This class uses Guids as Ids because it is the only built in .Net type the developers are aware of which can, in practice, guarantee for a system that an PersistentEntity will have a globally unique immutable identity from the moment of instantiation and through any number of persisting-loading cycles. That in turn is an absolute requirement for a correct implementation of Equals(object), GetHashCode(), and IEquatable<T>. Entity<TEntity, TKey> Base class for any class that considers equality to be that the Ids for two instances are the same. It provides implementations of Equals(object), GetHashCode(), and IEquatable<T>. Equals is implemented as: return !ReferenceEquals(null, other) && other.Id.Equals(Id) the operators simply uses Equals. ValueObject<T> Base class for value objects that implements value equality based on instance fields. Properties are ignored when comparing. Only fields are used. VersionedEntity<T> Base class for persistent entities with versioning information Interfaces IHasPersistentIdentity<TKeyType> Anything that can be uniquely identified using it's id over any number of persist/load cycles."
  },
  "api/Composable.DependencyInjection.ComponentRegistration-1.html": {
    "href": "api/Composable.DependencyInjection.ComponentRegistration-1.html",
    "title": "Class ComponentRegistration<TService> | Composable",
    "keywords": "Class ComponentRegistration<TService> Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public class ComponentRegistration<TService> : ComponentRegistration where TService : class Type Parameters TService Inheritance object ComponentRegistration ComponentRegistration<TService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.DependencyInjection.ComponentRegistration.html": {
    "href": "api/Composable.DependencyInjection.ComponentRegistration.html",
    "title": "Class ComponentRegistration | Composable",
    "keywords": "Class ComponentRegistration Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public abstract class ComponentRegistration Inheritance object ComponentRegistration Derived ComponentRegistration<TService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.DependencyInjection.ComponentRegistrationExtensions.html": {
    "href": "api/Composable.DependencyInjection.ComponentRegistrationExtensions.html",
    "title": "Class ComponentRegistrationExtensions | Composable",
    "keywords": "Class ComponentRegistrationExtensions Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public static class ComponentRegistrationExtensions Inheritance object ComponentRegistrationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class where TDependency9 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TDependency9 CreatedBy<TService, TImplementation>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TImplementation> factoryMethod) where TService : class where TImplementation : TService Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation CreatedBy<TService, TImplementation, TDependency1>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 CreatedBy<TService, TImplementation, TDependency1, TDependency2>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TImplementation>) public static ComponentRegistration<TService> CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(this ComponentRegistrationWithoutInstantiationSpec<TService> @this, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TImplementation> factoryMethod) where TService : class where TImplementation : TService where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class Parameters this ComponentRegistrationWithoutInstantiationSpec<TService> factoryMethod Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TImplementation> Returns ComponentRegistration<TService> Type Parameters TService TImplementation TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7"
  },
  "api/Composable.DependencyInjection.ComponentRegistrationWithoutInstantiationSpec-1.html": {
    "href": "api/Composable.DependencyInjection.ComponentRegistrationWithoutInstantiationSpec-1.html",
    "title": "Class ComponentRegistrationWithoutInstantiationSpec<TService> | Composable",
    "keywords": "Class ComponentRegistrationWithoutInstantiationSpec<TService> Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public class ComponentRegistrationWithoutInstantiationSpec<TService> where TService : class Type Parameters TService Inheritance object ComponentRegistrationWithoutInstantiationSpec<TService> Derived SingletonRegistrationWithoutInstantiationSpec<TService> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TImplementation>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties ServiceTypes protected IReadOnlyList<Type> ServiceTypes { get; } Property Value IReadOnlyList<Type> Methods AssertImplementsAllServices(Type) protected void AssertImplementsAllServices(Type implementationType) Parameters implementationType Type"
  },
  "api/Composable.DependencyInjection.DIContainer.html": {
    "href": "api/Composable.DependencyInjection.DIContainer.html",
    "title": "Enum DIContainer | Composable",
    "keywords": "Enum DIContainer Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public enum DIContainer Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Fields Composable = 0 Microsoft = 2 SimpleInjector = 1"
  },
  "api/Composable.DependencyInjection.DependencyInjectionContainer.html": {
    "href": "api/Composable.DependencyInjection.DependencyInjectionContainer.html",
    "title": "Class DependencyInjectionContainer | Composable",
    "keywords": "Class DependencyInjectionContainer Namespace Composable.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class DependencyInjectionContainer Inheritance object DependencyInjectionContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create(IRunMode) public static IDependencyInjectionContainer Create(IRunMode runMode) Parameters runMode IRunMode Returns IDependencyInjectionContainer CreateServiceLocatorForTesting(Action<IEndpointBuilder>) public static IServiceLocator CreateServiceLocatorForTesting(Action<IEndpointBuilder> setup) Parameters setup Action<IEndpointBuilder> Returns IServiceLocator"
  },
  "api/Composable.DependencyInjection.IDependencyInjectionContainer.html": {
    "href": "api/Composable.DependencyInjection.IDependencyInjectionContainer.html",
    "title": "Interface IDependencyInjectionContainer | Composable",
    "keywords": "Interface IDependencyInjectionContainer Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public interface IDependencyInjectionContainer : IDisposable, IAsyncDisposable Inherited Members IDisposable.Dispose() IAsyncDisposable.DisposeAsync() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Properties RunMode IRunMode RunMode { get; } Property Value IRunMode ServiceLocator IServiceLocator ServiceLocator { get; } Property Value IServiceLocator Methods Register(params ComponentRegistration[]) void Register(params ComponentRegistration[] registrations) Parameters registrations ComponentRegistration[] RegisterToHandleServiceResolutionFor(IServiceCollection) void RegisterToHandleServiceResolutionFor(IServiceCollection services) Parameters services IServiceCollection RegisteredComponents() IEnumerable<ComponentRegistration> RegisteredComponents() Returns IEnumerable<ComponentRegistration>"
  },
  "api/Composable.DependencyInjection.IRunMode.html": {
    "href": "api/Composable.DependencyInjection.IRunMode.html",
    "title": "Interface IRunMode | Composable",
    "keywords": "Interface IRunMode Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public interface IRunMode Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties IsTesting bool IsTesting { get; } Property Value bool"
  },
  "api/Composable.DependencyInjection.IServiceLocator.html": {
    "href": "api/Composable.DependencyInjection.IServiceLocator.html",
    "title": "Interface IServiceLocator | Composable",
    "keywords": "Interface IServiceLocator Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public interface IServiceLocator : IDisposable, IAsyncDisposable Inherited Members IDisposable.Dispose() IAsyncDisposable.DisposeAsync() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Methods BeginScope() IDisposable BeginScope() Returns IDisposable ResolveAll<TComponent>() TComponent[] ResolveAll<TComponent>() where TComponent : class Returns TComponent[] Type Parameters TComponent Resolve<TComponent>() TComponent Resolve<TComponent>() where TComponent : class Returns TComponent Type Parameters TComponent"
  },
  "api/Composable.DependencyInjection.Microsoft.MicrosoftDependencyInjectionContainer.html": {
    "href": "api/Composable.DependencyInjection.Microsoft.MicrosoftDependencyInjectionContainer.html",
    "title": "Class MicrosoftDependencyInjectionContainer | Composable",
    "keywords": "Class MicrosoftDependencyInjectionContainer Namespace Composable.DependencyInjection.Microsoft Assembly Composable.CQRS.ExternalDependencies.dll public sealed class MicrosoftDependencyInjectionContainer : IDependencyInjectionContainer, IServiceLocator, IDisposable, IAsyncDisposable Inheritance object MicrosoftDependencyInjectionContainer Implements IDependencyInjectionContainer IServiceLocator IDisposable IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods DocumentDbRegistrar.RegisterDocumentDb(IDependencyInjectionContainer, string) EventStoreRegistrar.RegisterEventStore(IDependencyInjectionContainer, string) EventStoreRegistrar.RegisterEventStore(IDependencyInjectionContainer, string, IReadOnlyList<IEventMigration>) TestingPersistenceLayerRegistrar.RegisterCurrentTestsConfiguredPersistenceLayer(IDependencyInjectionContainer, string) MsSqlPersistenceLayerRegistrar.RegisterMsSqlPersistenceLayer(IDependencyInjectionContainer, string) MySqlPersistenceLayerRegistrar.RegisterMySqlPersistenceLayer(IDependencyInjectionContainer, string) PgSqlPersistenceLayerRegistrar.RegisterPgSqlPersistenceLayer(IDependencyInjectionContainer, string) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Properties RunMode public IRunMode RunMode { get; } Property Value IRunMode Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. Register(params ComponentRegistration[]) public void Register(params ComponentRegistration[] registrations) Parameters registrations ComponentRegistration[] RegisteredComponents() public IEnumerable<ComponentRegistration> RegisteredComponents() Returns IEnumerable<ComponentRegistration> ResolveAll<TComponent>() public TComponent[] ResolveAll<TComponent>() where TComponent : class Returns TComponent[] Type Parameters TComponent Resolve<TComponent>() public TComponent Resolve<TComponent>() where TComponent : class Returns TComponent Type Parameters TComponent"
  },
  "api/Composable.DependencyInjection.Microsoft.html": {
    "href": "api/Composable.DependencyInjection.Microsoft.html",
    "title": "Namespace Composable.DependencyInjection.Microsoft | Composable",
    "keywords": "Namespace Composable.DependencyInjection.Microsoft Classes MicrosoftDependencyInjectionContainer"
  },
  "api/Composable.DependencyInjection.PersistenceLayer.html": {
    "href": "api/Composable.DependencyInjection.PersistenceLayer.html",
    "title": "Enum PersistenceLayer | Composable",
    "keywords": "Enum PersistenceLayer Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public enum PersistenceLayer Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Fields MicrosoftSQLServer = 0 MySql = 1 PostgreSql = 2"
  },
  "api/Composable.DependencyInjection.Scoped.html": {
    "href": "api/Composable.DependencyInjection.Scoped.html",
    "title": "Class Scoped | Composable",
    "keywords": "Class Scoped Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public static class Scoped Inheritance object Scoped Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods For<TService>() public static ComponentRegistrationWithoutInstantiationSpec<TService> For<TService>() where TService : class Returns ComponentRegistrationWithoutInstantiationSpec<TService> Type Parameters TService For<TService1, TService2>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 For<TService1, TService2, TService3>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 For<TService1, TService2, TService3, TService4>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 For<TService1, TService2, TService3, TService4, TService5>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 For<TService1, TService2, TService3, TService4, TService5, TService6>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 TService8 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8, TService9>() public static ComponentRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8, TService9>() where TService1 : class Returns ComponentRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 TService8 TService9"
  },
  "api/Composable.DependencyInjection.SimpleInjector.SimpleInjectorDependencyInjectionContainer.html": {
    "href": "api/Composable.DependencyInjection.SimpleInjector.SimpleInjectorDependencyInjectionContainer.html",
    "title": "Class SimpleInjectorDependencyInjectionContainer | Composable",
    "keywords": "Class SimpleInjectorDependencyInjectionContainer Namespace Composable.DependencyInjection.SimpleInjector Assembly Composable.CQRS.ExternalDependencies.dll public sealed class SimpleInjectorDependencyInjectionContainer : IDependencyInjectionContainer, IServiceLocator, IDisposable, IAsyncDisposable Inheritance object SimpleInjectorDependencyInjectionContainer Implements IDependencyInjectionContainer IServiceLocator IDisposable IAsyncDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods DocumentDbRegistrar.RegisterDocumentDb(IDependencyInjectionContainer, string) EventStoreRegistrar.RegisterEventStore(IDependencyInjectionContainer, string) EventStoreRegistrar.RegisterEventStore(IDependencyInjectionContainer, string, IReadOnlyList<IEventMigration>) TestingPersistenceLayerRegistrar.RegisterCurrentTestsConfiguredPersistenceLayer(IDependencyInjectionContainer, string) MsSqlPersistenceLayerRegistrar.RegisterMsSqlPersistenceLayer(IDependencyInjectionContainer, string) MySqlPersistenceLayerRegistrar.RegisterMySqlPersistenceLayer(IDependencyInjectionContainer, string) PgSqlPersistenceLayerRegistrar.RegisterPgSqlPersistenceLayer(IDependencyInjectionContainer, string) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Properties RunMode public IRunMode RunMode { get; } Property Value IRunMode Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. Register(params ComponentRegistration[]) public void Register(params ComponentRegistration[] registrations) Parameters registrations ComponentRegistration[] RegisteredComponents() public IEnumerable<ComponentRegistration> RegisteredComponents() Returns IEnumerable<ComponentRegistration> ResolveAll<TComponent>() public TComponent[] ResolveAll<TComponent>() where TComponent : class Returns TComponent[] Type Parameters TComponent Resolve<TComponent>() public TComponent Resolve<TComponent>() where TComponent : class Returns TComponent Type Parameters TComponent"
  },
  "api/Composable.DependencyInjection.SimpleInjector.html": {
    "href": "api/Composable.DependencyInjection.SimpleInjector.html",
    "title": "Namespace Composable.DependencyInjection.SimpleInjector | Composable",
    "keywords": "Namespace Composable.DependencyInjection.SimpleInjector Classes SimpleInjectorDependencyInjectionContainer"
  },
  "api/Composable.DependencyInjection.Singleton.html": {
    "href": "api/Composable.DependencyInjection.Singleton.html",
    "title": "Class Singleton | Composable",
    "keywords": "Class Singleton Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public static class Singleton Inheritance object Singleton Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods For<TService>() public static SingletonRegistrationWithoutInstantiationSpec<TService> For<TService>() where TService : class Returns SingletonRegistrationWithoutInstantiationSpec<TService> Type Parameters TService For<TService1, TService2>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 For<TService1, TService2, TService3>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 For<TService1, TService2, TService3, TService4>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 For<TService1, TService2, TService3, TService4, TService5>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 For<TService1, TService2, TService3, TService4, TService5, TService6>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 TService8 For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8, TService9>() public static SingletonRegistrationWithoutInstantiationSpec<TService1> For<TService1, TService2, TService3, TService4, TService5, TService6, TService7, TService8, TService9>() where TService1 : class Returns SingletonRegistrationWithoutInstantiationSpec<TService1> Type Parameters TService1 TService2 TService3 TService4 TService5 TService6 TService7 TService8 TService9"
  },
  "api/Composable.DependencyInjection.SingletonRegistrationWithoutInstantiationSpec-1.html": {
    "href": "api/Composable.DependencyInjection.SingletonRegistrationWithoutInstantiationSpec-1.html",
    "title": "Class SingletonRegistrationWithoutInstantiationSpec<TService> | Composable",
    "keywords": "Class SingletonRegistrationWithoutInstantiationSpec<TService> Namespace Composable.DependencyInjection Assembly Composable.CQRS.dll public class SingletonRegistrationWithoutInstantiationSpec<TService> : ComponentRegistrationWithoutInstantiationSpec<TService> where TService : class Type Parameters TService Inheritance object ComponentRegistrationWithoutInstantiationSpec<TService> SingletonRegistrationWithoutInstantiationSpec<TService> Inherited Members ComponentRegistrationWithoutInstantiationSpec<TService>.ServiceTypes ComponentRegistrationWithoutInstantiationSpec<TService>.AssertImplementsAllServices(Type) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TImplementation>) ComponentRegistrationExtensions.CreatedBy<TService, TImplementation, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(ComponentRegistrationWithoutInstantiationSpec<TService>, Func<TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TImplementation>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.DependencyInjection.html": {
    "href": "api/Composable.DependencyInjection.html",
    "title": "Namespace Composable.DependencyInjection | Composable",
    "keywords": "Namespace Composable.DependencyInjection Namespaces Composable.DependencyInjection.Microsoft Composable.DependencyInjection.SimpleInjector Classes ComponentRegistration ComponentRegistrationExtensions ComponentRegistrationWithoutInstantiationSpec<TService> ComponentRegistration<TService> DependencyInjectionContainer Scoped Singleton SingletonRegistrationWithoutInstantiationSpec<TService> Interfaces IDependencyInjectionContainer IRunMode IServiceLocator Enums DIContainer PersistenceLayer"
  },
  "api/Composable.Functional.DiscriminatedUnion-3.html": {
    "href": "api/Composable.Functional.DiscriminatedUnion-3.html",
    "title": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2> | Composable",
    "keywords": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class DiscriminatedUnion<TInheritor, TOption1, TOption2> where TInheritor : DiscriminatedUnion<TInheritor, TOption1, TOption2> where TOption1 : TInheritor where TOption2 : TInheritor Type Parameters TInheritor TOption1 TOption2 Inheritance object DiscriminatedUnion<TInheritor, TOption1, TOption2> Derived Option<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DiscriminatedUnion() protected DiscriminatedUnion()"
  },
  "api/Composable.Functional.DiscriminatedUnion-4.html": {
    "href": "api/Composable.Functional.DiscriminatedUnion-4.html",
    "title": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> | Composable",
    "keywords": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> where TInheritor : DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> where TOption1 : TInheritor where TOption2 : TInheritor where TOption3 : TInheritor Type Parameters TInheritor TOption1 TOption2 TOption3 Inheritance object DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DiscriminatedUnion() protected DiscriminatedUnion()"
  },
  "api/Composable.Functional.DiscriminatedUnion-5.html": {
    "href": "api/Composable.Functional.DiscriminatedUnion-5.html",
    "title": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> | Composable",
    "keywords": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> where TInheritor : DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> where TOption1 : TInheritor where TOption2 : TInheritor where TOption3 : TInheritor where TOption4 : TInheritor Type Parameters TInheritor TOption1 TOption2 TOption3 TOption4 Inheritance object DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DiscriminatedUnion() protected DiscriminatedUnion()"
  },
  "api/Composable.Functional.DiscriminatedUnion-6.html": {
    "href": "api/Composable.Functional.DiscriminatedUnion-6.html",
    "title": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> | Composable",
    "keywords": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> where TInheritor : DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> where TOption1 : TInheritor where TOption2 : TInheritor where TOption3 : TInheritor where TOption4 : TInheritor where TOption5 : TInheritor Type Parameters TInheritor TOption1 TOption2 TOption3 TOption4 TOption5 Inheritance object DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DiscriminatedUnion() protected DiscriminatedUnion()"
  },
  "api/Composable.Functional.DiscriminatedUnion-7.html": {
    "href": "api/Composable.Functional.DiscriminatedUnion-7.html",
    "title": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> | Composable",
    "keywords": "Class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> where TInheritor : DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> where TOption1 : TInheritor where TOption2 : TInheritor where TOption3 : TInheritor where TOption4 : TInheritor where TOption5 : TInheritor where TOption6 : TInheritor Type Parameters TInheritor TOption1 TOption2 TOption3 TOption4 TOption5 TOption6 Inheritance object DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DiscriminatedUnion() protected DiscriminatedUnion()"
  },
  "api/Composable.Functional.None-1.html": {
    "href": "api/Composable.Functional.None-1.html",
    "title": "Class None<T> | Composable",
    "keywords": "Class None<T> Namespace Composable.Functional Assembly Composable.CQRS.dll public sealed class None<T> : Option<T>, IStaticInstancePropertySingleton Type Parameters T Inheritance object DiscriminatedUnion<Option<T>, Some<T>, None<T>> Option<T> None<T> Implements IStaticInstancePropertySingleton Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties HasValue public override bool HasValue { get; } Property Value bool"
  },
  "api/Composable.Functional.ObjectCE.html": {
    "href": "api/Composable.Functional.ObjectCE.html",
    "title": "Class ObjectCE | Composable",
    "keywords": "Class ObjectCE Namespace Composable.Functional Assembly Composable.CQRS.dll Methods useful for any type when used in a Linq context public static class ObjectCE Inheritance object ObjectCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToStringNotNull(object) public static string ToStringNotNull(this object @this) Parameters this object Returns string"
  },
  "api/Composable.Functional.Option-1.html": {
    "href": "api/Composable.Functional.Option-1.html",
    "title": "Class Option<T> | Composable",
    "keywords": "Class Option<T> Namespace Composable.Functional Assembly Composable.CQRS.dll public abstract class Option<T> : DiscriminatedUnion<Option<T>, Some<T>, None<T>> Type Parameters T Inheritance object DiscriminatedUnion<Option<T>, Some<T>, None<T>> Option<T> Derived None<T> Some<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties HasValue public abstract bool HasValue { get; } Property Value bool"
  },
  "api/Composable.Functional.Option.html": {
    "href": "api/Composable.Functional.Option.html",
    "title": "Class Option | Composable",
    "keywords": "Class Option Namespace Composable.Functional Assembly Composable.CQRS.dll public static class Option Inheritance object Option Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsSome<T>(Option<T>) public static bool IsSome<T>(Option<T> option) Parameters option Option<T> Returns bool Type Parameters T NoneIfDefault<T>(T) public static Option<T> NoneIfDefault<T>(T value) where T : struct Parameters value T Returns Option<T> Type Parameters T NoneIfNull<T>(T?) public static Option<T> NoneIfNull<T>(T? value) where T : class Parameters value T Returns Option<T> Type Parameters T None<T>() public static Option<T> None<T>() Returns Option<T> Type Parameters T Some<T>(T) public static Option<T> Some<T>(T value) Parameters value T Returns Option<T> Type Parameters T"
  },
  "api/Composable.Functional.Pipe.html": {
    "href": "api/Composable.Functional.Pipe.html",
    "title": "Class Pipe | Composable",
    "keywords": "Class Pipe Namespace Composable.Functional Assembly Composable.CQRS.dll Provides the ability to chain method calls rather than having to use separate lines and temporary variables. public static class Pipe Inheritance object Pipe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods mutateAsync<T>(T, Func<T, Task>) Mutates it using mutate and returns it public static Task<T> mutateAsync<T>(this T it, Func<T, Task> mutate) Parameters it T mutate Func<T, Task> Returns Task<T> Type Parameters T mutate<T>(T, Action<T>) Mutates it using mutate and returns it public static T mutate<T>(this T it, Action<T> mutate) Parameters it T mutate Action<T> Returns T Type Parameters T select<TValue, TResult>(TValue, Func<TValue, TResult>) Takes the first value, applies transform and return the resulting value. public static TResult select<TValue, TResult>(this TValue it, Func<TValue, TResult> transform) Parameters it TValue transform Func<TValue, TResult> Returns TResult Type Parameters TValue TResult then<TValue, TResult>(TValue, Func<TResult>) Invokes func, ignoring the previous value. Useful for chaining calls where the previous result is irrelevant. public static TResult then<TValue, TResult>(this TValue _, Func<TResult> func) Parameters _ TValue func Func<TResult> Returns TResult Type Parameters TValue TResult then<TValue, TResult>(TValue, TResult) Returns value, ignoring the previous value. Useful for chaining calls where a constant value is needed. public static TResult then<TValue, TResult>(this TValue _, TResult value) Parameters _ TValue value TResult Returns TResult Type Parameters TValue TResult"
  },
  "api/Composable.Functional.Some-1.html": {
    "href": "api/Composable.Functional.Some-1.html",
    "title": "Class Some<T> | Composable",
    "keywords": "Class Some<T> Namespace Composable.Functional Assembly Composable.CQRS.dll public sealed class Some<T> : Option<T> Type Parameters T Inheritance object DiscriminatedUnion<Option<T>, Some<T>, None<T>> Option<T> Some<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties HasValue public override bool HasValue { get; } Property Value bool Value public T Value { get; } Property Value T"
  },
  "api/Composable.Functional.Unit.html": {
    "href": "api/Composable.Functional.Unit.html",
    "title": "Struct Unit | Composable",
    "keywords": "Struct Unit Namespace Composable.Functional Assembly Composable.CQRS.dll The functional programming unit concept. Unifies Func<TResult> and Action. Simply return Unit instead of void from methods with no return value. public struct Unit : IEquatable<Unit>, IStaticInstancePropertySingleton Implements IEquatable<Unit> IStaticInstancePropertySingleton Inherited Members object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Fields Instance public static readonly Unit Instance Field Value Unit InstanceTask public static readonly Task<Unit> InstanceTask Field Value Task<Unit> Methods Equals(Unit) Indicates whether the current object is equal to another object of the same type. public readonly bool Equals(Unit _) Parameters _ Unit Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override readonly bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. From(Action) public static Unit From(Action action) Parameters action Action Returns Unit GetHashCode() Returns the hash code for this instance. public override readonly int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. ToString() Returns the fully qualified type name of this instance. public override readonly string ToString() Returns string The fully qualified type name. Operators operator ==(Unit, Unit) public static bool operator ==(Unit _, Unit __) Parameters _ Unit __ Unit Returns bool operator !=(Unit, Unit) public static bool operator !=(Unit _, Unit __) Parameters _ Unit __ Unit Returns bool"
  },
  "api/Composable.Functional.html": {
    "href": "api/Composable.Functional.html",
    "title": "Namespace Composable.Functional | Composable",
    "keywords": "Namespace Composable.Functional Classes DiscriminatedUnion<TInheritor, TOption1, TOption2> DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3> DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4> DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5> DiscriminatedUnion<TInheritor, TOption1, TOption2, TOption3, TOption4, TOption5, TOption6> None<T> ObjectCE Methods useful for any type when used in a Linq context Option Option<T> Pipe Provides the ability to chain method calls rather than having to use separate lines and temporary variables. Some<T> Structs Unit The functional programming unit concept. Unifies Func<TResult> and Action. Simply return Unit instead of void from methods with no return value."
  },
  "api/Composable.GenericAbstractions.OptimizedInitializer.html": {
    "href": "api/Composable.GenericAbstractions.OptimizedInitializer.html",
    "title": "Class OptimizedInitializer | Composable",
    "keywords": "Class OptimizedInitializer Namespace Composable.GenericAbstractions Assembly Composable.CQRS.dll public class OptimizedInitializer Inheritance object OptimizedInitializer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties IsInitialized public bool IsInitialized { get; } Property Value bool"
  },
  "api/Composable.GenericAbstractions.Time.DateTimeNowTimeSource.html": {
    "href": "api/Composable.GenericAbstractions.Time.DateTimeNowTimeSource.html",
    "title": "Class DateTimeNowTimeSource | Composable",
    "keywords": "Class DateTimeNowTimeSource Namespace Composable.GenericAbstractions.Time Assembly Composable.CQRS.dll Simply returns DateTime.Now or DateTime.UtcNow public class DateTimeNowTimeSource : IUtcTimeTimeSource Inheritance object DateTimeNowTimeSource Implements IUtcTimeTimeSource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties UtcNow Returns DateTime.UtcNow public DateTime UtcNow { get; } Property Value DateTime"
  },
  "api/Composable.GenericAbstractions.Time.IUtcTimeTimeSource.html": {
    "href": "api/Composable.GenericAbstractions.Time.IUtcTimeTimeSource.html",
    "title": "Interface IUtcTimeTimeSource | Composable",
    "keywords": "Interface IUtcTimeTimeSource Namespace Composable.GenericAbstractions.Time Assembly Composable.CQRS.dll Provides the service of telling what the current UTC time is. In order to make things testable calling DateTime.Now or DateTime.UtcNow directly is discouraged. public interface IUtcTimeTimeSource Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties UtcNow Returns the current time as UTC time. DateTime UtcNow { get; } Property Value DateTime"
  },
  "api/Composable.GenericAbstractions.Time.html": {
    "href": "api/Composable.GenericAbstractions.Time.html",
    "title": "Namespace Composable.GenericAbstractions.Time | Composable",
    "keywords": "Namespace Composable.GenericAbstractions.Time Classes DateTimeNowTimeSource Simply returns DateTime.Now or DateTime.UtcNow Interfaces IUtcTimeTimeSource Provides the service of telling what the current UTC time is. In order to make things testable calling DateTime.Now or DateTime.UtcNow directly is discouraged."
  },
  "api/Composable.GenericAbstractions.html": {
    "href": "api/Composable.GenericAbstractions.html",
    "title": "Namespace Composable.GenericAbstractions | Composable",
    "keywords": "Namespace Composable.GenericAbstractions Namespaces Composable.GenericAbstractions.Time Classes OptimizedInitializer"
  },
  "api/Composable.Messaging.Buses.EndpointHost.Production.html": {
    "href": "api/Composable.Messaging.Buses.EndpointHost.Production.html",
    "title": "Class EndpointHost.Production | Composable",
    "keywords": "Class EndpointHost.Production Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public static class EndpointHost.Production Inheritance object EndpointHost.Production Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Create(Func<IRunMode, IDependencyInjectionContainer>) public static IEndpointHost Create(Func<IRunMode, IDependencyInjectionContainer> containerFactory) Parameters containerFactory Func<IRunMode, IDependencyInjectionContainer> Returns IEndpointHost"
  },
  "api/Composable.Messaging.Buses.EndpointHost.html": {
    "href": "api/Composable.Messaging.Buses.EndpointHost.html",
    "title": "Class EndpointHost | Composable",
    "keywords": "Class EndpointHost Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public class EndpointHost : IEndpointHost, IAsyncDisposable Inheritance object EndpointHost Implements IEndpointHost IAsyncDisposable Derived TestingEndpointHostBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Constructors EndpointHost(IRunMode, Func<IRunMode, IDependencyInjectionContainer>) protected EndpointHost(IRunMode mode, Func<IRunMode, IDependencyInjectionContainer> containerFactory) Parameters mode IRunMode containerFactory Func<IRunMode, IDependencyInjectionContainer> Properties Endpoints protected IList<IEndpoint> Endpoints { get; } Property Value IList<IEndpoint> Methods DisposeAsync() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources asynchronously. public ValueTask DisposeAsync() Returns ValueTask A task that represents the asynchronous dispose operation. DisposeAsync(bool) protected virtual ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask RegisterClientEndpoint(Action<IEndpointBuilder>) Registers a default client endpoint with a host. Can be called only once per host instance. public IEndpoint RegisterClientEndpoint(Action<IEndpointBuilder> setup) Parameters setup Action<IEndpointBuilder> Returns IEndpoint RegisterEndpoint(string, EndpointId, Action<IEndpointBuilder>) public IEndpoint RegisterEndpoint(string name, EndpointId id, Action<IEndpointBuilder> setup) Parameters name string id EndpointId setup Action<IEndpointBuilder> Returns IEndpoint Start() public void Start() StartAsync() public Task StartAsync() Returns Task"
  },
  "api/Composable.Messaging.Buses.EndpointId.html": {
    "href": "api/Composable.Messaging.Buses.EndpointId.html",
    "title": "Class EndpointId | Composable",
    "keywords": "Class EndpointId Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public class EndpointId : ValueObject<EndpointId>, IEquatable<EndpointId> Inheritance object ValueObject<EndpointId> EndpointId Implements IEquatable<EndpointId> Inherited Members ValueObject<EndpointId>.Equals(object) ValueObject<EndpointId>.GetHashCode() ValueObject<EndpointId>.Equals(EndpointId) ValueObject<EndpointId>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EndpointId(Guid) [JsonConstructor] public EndpointId(Guid guidValue) Parameters guidValue Guid Properties GuidValue public Guid GuidValue { get; } Property Value Guid"
  },
  "api/Composable.Messaging.Buses.EndpointRequestExecutor.html": {
    "href": "api/Composable.Messaging.Buses.EndpointRequestExecutor.html",
    "title": "Class EndpointRequestExecutor | Composable",
    "keywords": "Class EndpointRequestExecutor Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public static class EndpointRequestExecutor Inheritance object EndpointRequestExecutor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ExecuteAsClientRequestOn(NavigationSpecification, IEndpoint) public static void ExecuteAsClientRequestOn(this NavigationSpecification navigationSpecification, IEndpoint endpoint) Parameters navigationSpecification NavigationSpecification endpoint IEndpoint ExecuteAsClientRequestOnAsync(NavigationSpecification, IEndpoint) public static Task ExecuteAsClientRequestOnAsync(this NavigationSpecification navigationSpecification, IEndpoint endpoint) Parameters navigationSpecification NavigationSpecification endpoint IEndpoint Returns Task ExecuteAsClientRequestOnAsync<TResult>(NavigationSpecification<TResult>, IEndpoint) public static Task<TResult> ExecuteAsClientRequestOnAsync<TResult>(this NavigationSpecification<TResult> navigationSpecification, IEndpoint endpoint) Parameters navigationSpecification NavigationSpecification<TResult> endpoint IEndpoint Returns Task<TResult> Type Parameters TResult ExecuteAsClientRequestOn<TResult>(NavigationSpecification<TResult>, IEndpoint) public static TResult ExecuteAsClientRequestOn<TResult>(this NavigationSpecification<TResult> navigationSpecification, IEndpoint endpoint) Parameters navigationSpecification NavigationSpecification<TResult> endpoint IEndpoint Returns TResult Type Parameters TResult ExecuteClientRequest(IEndpoint, NavigationSpecification) public static void ExecuteClientRequest(this IEndpoint @this, NavigationSpecification navigation) Parameters this IEndpoint navigation NavigationSpecification ExecuteClientRequest(IEndpoint, Action<IRemoteHypermediaNavigator>) public static void ExecuteClientRequest(this IEndpoint @this, Action<IRemoteHypermediaNavigator> request) Parameters this IEndpoint request Action<IRemoteHypermediaNavigator> ExecuteClientRequestAsync(IEndpoint, NavigationSpecification) public static Task ExecuteClientRequestAsync(this IEndpoint endpoint, NavigationSpecification navigation) Parameters endpoint IEndpoint navigation NavigationSpecification Returns Task ExecuteClientRequestAsync(IEndpoint, Func<IRemoteHypermediaNavigator, Task>) public static Task ExecuteClientRequestAsync(this IEndpoint endpoint, Func<IRemoteHypermediaNavigator, Task> request) Parameters endpoint IEndpoint request Func<IRemoteHypermediaNavigator, Task> Returns Task ExecuteClientRequestAsync(IEndpoint, Func<Task>) public static Task ExecuteClientRequestAsync(this IEndpoint endpoint, Func<Task> request) Parameters endpoint IEndpoint request Func<Task> Returns Task ExecuteClientRequestAsync<TResult>(IEndpoint, Func<IRemoteHypermediaNavigator, Task<TResult>>) public static Task<TResult> ExecuteClientRequestAsync<TResult>(this IEndpoint @this, Func<IRemoteHypermediaNavigator, Task<TResult>> request) Parameters this IEndpoint request Func<IRemoteHypermediaNavigator, Task<TResult>> Returns Task<TResult> Type Parameters TResult ExecuteClientRequest<TResult>(IEndpoint, NavigationSpecification<TResult>) public static TResult ExecuteClientRequest<TResult>(this IEndpoint @this, NavigationSpecification<TResult> navigation) Parameters this IEndpoint navigation NavigationSpecification<TResult> Returns TResult Type Parameters TResult ExecuteClientRequest<TResult>(IEndpoint, Func<IRemoteHypermediaNavigator, TResult>) public static TResult ExecuteClientRequest<TResult>(this IEndpoint @this, Func<IRemoteHypermediaNavigator, TResult> request) Parameters this IEndpoint request Func<IRemoteHypermediaNavigator, TResult> Returns TResult Type Parameters TResult ExecuteRequestAsync<TResult>(IEndpoint, NavigationSpecification<TResult>) public static Task<TResult> ExecuteRequestAsync<TResult>(this IEndpoint endpoint, NavigationSpecification<TResult> navigation) Parameters endpoint IEndpoint navigation NavigationSpecification<TResult> Returns Task<TResult> Type Parameters TResult ExecuteServerRequest(IEndpoint, Action<IServiceBusSession>) public static void ExecuteServerRequest(this IEndpoint @this, Action<IServiceBusSession> request) Parameters this IEndpoint request Action<IServiceBusSession> ExecuteServerRequestInTransaction(IEndpoint, Action<IServiceBusSession>) public static void ExecuteServerRequestInTransaction(this IEndpoint @this, Action<IServiceBusSession> request) Parameters this IEndpoint request Action<IServiceBusSession>"
  },
  "api/Composable.Messaging.Buses.IEndpoint.html": {
    "href": "api/Composable.Messaging.Buses.IEndpoint.html",
    "title": "Interface IEndpoint | Composable",
    "keywords": "Interface IEndpoint Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public interface IEndpoint : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) EndpointRequestExecutor.ExecuteClientRequest(IEndpoint, NavigationSpecification) EndpointRequestExecutor.ExecuteClientRequest(IEndpoint, Action<IRemoteHypermediaNavigator>) EndpointRequestExecutor.ExecuteClientRequestAsync(IEndpoint, NavigationSpecification) EndpointRequestExecutor.ExecuteClientRequestAsync(IEndpoint, Func<IRemoteHypermediaNavigator, Task>) EndpointRequestExecutor.ExecuteClientRequestAsync(IEndpoint, Func<Task>) EndpointRequestExecutor.ExecuteClientRequestAsync<TResult>(IEndpoint, Func<IRemoteHypermediaNavigator, Task<TResult>>) EndpointRequestExecutor.ExecuteClientRequest<TResult>(IEndpoint, NavigationSpecification<TResult>) EndpointRequestExecutor.ExecuteClientRequest<TResult>(IEndpoint, Func<IRemoteHypermediaNavigator, TResult>) EndpointRequestExecutor.ExecuteRequestAsync<TResult>(IEndpoint, NavigationSpecification<TResult>) EndpointRequestExecutor.ExecuteServerRequest(IEndpoint, Action<IServiceBusSession>) EndpointRequestExecutor.ExecuteServerRequestInTransaction(IEndpoint, Action<IServiceBusSession>) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Properties Address EndPointAddress? Address { get; } Property Value EndPointAddress Id EndpointId Id { get; } Property Value EndpointId IsRunning bool IsRunning { get; } Property Value bool ServiceLocator IServiceLocator ServiceLocator { get; } Property Value IServiceLocator Methods AwaitNoMessagesInFlight(TimeSpan?) void AwaitNoMessagesInFlight(TimeSpan? timeoutOverride) Parameters timeoutOverride TimeSpan? ConnectAsync() Task ConnectAsync() Returns Task InitAsync() Task InitAsync() Returns Task StopAsync() Task StopAsync() Returns Task"
  },
  "api/Composable.Messaging.Buses.IEndpointBuilder.html": {
    "href": "api/Composable.Messaging.Buses.IEndpointBuilder.html",
    "title": "Interface IEndpointBuilder | Composable",
    "keywords": "Interface IEndpointBuilder Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public interface IEndpointBuilder : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Configuration EndpointConfiguration Configuration { get; } Property Value EndpointConfiguration Container IDependencyInjectionContainer Container { get; } Property Value IDependencyInjectionContainer RegisterHandlers MessageHandlerRegistrarWithDependencyInjectionSupport RegisterHandlers { get; } Property Value MessageHandlerRegistrarWithDependencyInjectionSupport TypeMapper ITypeMappingRegistar TypeMapper { get; } Property Value ITypeMappingRegistar"
  },
  "api/Composable.Messaging.Buses.IEndpointHost.html": {
    "href": "api/Composable.Messaging.Buses.IEndpointHost.html",
    "title": "Interface IEndpointHost | Composable",
    "keywords": "Interface IEndpointHost Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public interface IEndpointHost : IAsyncDisposable Inherited Members IAsyncDisposable.DisposeAsync() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Methods RegisterClientEndpoint(Action<IEndpointBuilder>) Registers a default client endpoint with a host. Can be called only once per host instance. IEndpoint RegisterClientEndpoint(Action<IEndpointBuilder> setup) Parameters setup Action<IEndpointBuilder> Returns IEndpoint RegisterEndpoint(string, EndpointId, Action<IEndpointBuilder>) IEndpoint RegisterEndpoint(string name, EndpointId id, Action<IEndpointBuilder> setup) Parameters name string id EndpointId setup Action<IEndpointBuilder> Returns IEndpoint Start() void Start() StartAsync() Task StartAsync() Returns Task"
  },
  "api/Composable.Messaging.Buses.IMessageHandlerRegistrar.html": {
    "href": "api/Composable.Messaging.Buses.IMessageHandlerRegistrar.html",
    "title": "Interface IMessageHandlerRegistrar | Composable",
    "keywords": "Interface IMessageHandlerRegistrar Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public interface IMessageHandlerRegistrar Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ForCommand<TCommand>(Action<TCommand>) IMessageHandlerRegistrar ForCommand<TCommand>(Action<TCommand> handler) where TCommand : ICommand Parameters handler Action<TCommand> Returns IMessageHandlerRegistrar Type Parameters TCommand ForCommand<TCommand, TResult>(Func<TCommand, TResult>) IMessageHandlerRegistrar ForCommand<TCommand, TResult>(Func<TCommand, TResult> handler) where TCommand : ICommand<TResult> Parameters handler Func<TCommand, TResult> Returns IMessageHandlerRegistrar Type Parameters TCommand TResult ForEvent<TEvent>(Action<TEvent>) IMessageHandlerRegistrar ForEvent<TEvent>(Action<TEvent> handler) where TEvent : IEvent Parameters handler Action<TEvent> Returns IMessageHandlerRegistrar Type Parameters TEvent ForQuery<TQuery, TResult>(Func<TQuery, TResult>) IMessageHandlerRegistrar ForQuery<TQuery, TResult>(Func<TQuery, TResult> handler) where TQuery : IQuery<TResult> Parameters handler Func<TQuery, TResult> Returns IMessageHandlerRegistrar Type Parameters TQuery TResult"
  },
  "api/Composable.Messaging.Buses.IServiceBusSession.html": {
    "href": "api/Composable.Messaging.Buses.IServiceBusSession.html",
    "title": "Interface IServiceBusSession | Composable",
    "keywords": "Interface IServiceBusSession Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll Dispatches messages between processes. public interface IServiceBusSession Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ScheduleSend(DateTime, IExactlyOnceCommand) Schedules a command to be sent later if the current transaction succeeds. The execution of the handler runs is a separate transaction at the receiver. void ScheduleSend(DateTime sendAt, IExactlyOnceCommand command) Parameters sendAt DateTime command IExactlyOnceCommand Send(IExactlyOnceCommand) Sends a command if the current transaction succeeds. The execution of the handler runs is a separate transaction at the receiver. void Send(IExactlyOnceCommand command) Parameters command IExactlyOnceCommand"
  },
  "api/Composable.Messaging.Buses.ITestingEndpointHost.html": {
    "href": "api/Composable.Messaging.Buses.ITestingEndpointHost.html",
    "title": "Interface ITestingEndpointHost | Composable",
    "keywords": "Interface ITestingEndpointHost Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public interface ITestingEndpointHost : IEndpointHost, IAsyncDisposable Inherited Members IEndpointHost.RegisterEndpoint(string, EndpointId, Action<IEndpointBuilder>) IEndpointHost.RegisterClientEndpoint(Action<IEndpointBuilder>) IEndpointHost.StartAsync() IEndpointHost.Start() IAsyncDisposable.DisposeAsync() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) TestingHostExtensions.AssertThatRunningScenarioThrowsBackendAndClientException<TException>(ITestingEndpointHost, Action) TestingHostExtensions.AssertThatRunningScenarioThrowsBackendException<TException>(ITestingEndpointHost, Action) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Methods AssertThrown<TException>() TException AssertThrown<TException>() where TException : Exception Returns TException Type Parameters TException RegisterClientEndpointForRegisteredEndpoints() IEndpoint RegisterClientEndpointForRegisteredEndpoints() Returns IEndpoint RegisterTestingEndpoint(string?, EndpointId?, Action<IEndpointBuilder>?) IEndpoint RegisterTestingEndpoint(string? name = null, EndpointId? id = null, Action<IEndpointBuilder>? setup = null) Parameters name string id EndpointId setup Action<IEndpointBuilder> Returns IEndpoint"
  },
  "api/Composable.Messaging.Buses.Implementation.CommandValidationFailureException.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.CommandValidationFailureException.html",
    "title": "Class CommandValidationFailureException | Composable",
    "keywords": "Class CommandValidationFailureException Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class CommandValidationFailureException : Exception, ISerializable Inheritance object Exception CommandValidationFailureException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors CommandValidationFailureException(IEnumerable<ValidationResult>) public CommandValidationFailureException(IEnumerable<ValidationResult> failures) Parameters failures IEnumerable<ValidationResult> Properties Failures public IEnumerable<ValidationResult> Failures { get; } Property Value IEnumerable<ValidationResult>"
  },
  "api/Composable.Messaging.Buses.Implementation.EndPointAddress.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.EndPointAddress.html",
    "title": "Class EndPointAddress | Composable",
    "keywords": "Class EndPointAddress Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class EndPointAddress : ValueObject<EndPointAddress>, IEquatable<EndPointAddress> Inheritance object ValueObject<EndPointAddress> EndPointAddress Implements IEquatable<EndPointAddress> Inherited Members ValueObject<EndPointAddress>.Equals(object) ValueObject<EndPointAddress>.GetHashCode() ValueObject<EndPointAddress>.Equals(EndPointAddress) ValueObject<EndPointAddress>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties AspNetAddress public string AspNetAddress { get; } Property Value string"
  },
  "api/Composable.Messaging.Buses.Implementation.EndpointConfiguration.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.EndpointConfiguration.html",
    "title": "Class EndpointConfiguration | Composable",
    "keywords": "Class EndpointConfiguration Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class EndpointConfiguration Inheritance object EndpointConfiguration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.Buses.Implementation.InvalidControllerRegistrationException.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.InvalidControllerRegistrationException.html",
    "title": "Class InvalidControllerRegistrationException | Composable",
    "keywords": "Class InvalidControllerRegistrationException Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class InvalidControllerRegistrationException : Exception, ISerializable Inheritance object Exception InvalidControllerRegistrationException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors InvalidControllerRegistrationException(string, Exception) public InvalidControllerRegistrationException(string message, Exception ex) Parameters message string ex Exception"
  },
  "api/Composable.Messaging.Buses.Implementation.MessageDispatchingFailedException.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.MessageDispatchingFailedException.html",
    "title": "Class MessageDispatchingFailedException | Composable",
    "keywords": "Class MessageDispatchingFailedException Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class MessageDispatchingFailedException : Exception, ISerializable Inheritance object Exception MessageDispatchingFailedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors MessageDispatchingFailedException(string) public MessageDispatchingFailedException(string remoteExceptionAsString) Parameters remoteExceptionAsString string"
  },
  "api/Composable.Messaging.Buses.Implementation.NoHandlerException.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.NoHandlerException.html",
    "title": "Class NoHandlerException | Composable",
    "keywords": "Class NoHandlerException Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class NoHandlerException : Exception, ISerializable Inheritance object Exception NoHandlerException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NoHandlerException(Type) public NoHandlerException(Type messageType) Parameters messageType Type"
  },
  "api/Composable.Messaging.Buses.Implementation.NoHandlerForMessageTypeException.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.NoHandlerForMessageTypeException.html",
    "title": "Class NoHandlerForMessageTypeException | Composable",
    "keywords": "Class NoHandlerForMessageTypeException Namespace Composable.Messaging.Buses.Implementation Assembly Composable.CQRS.dll public class NoHandlerForMessageTypeException : Exception, ISerializable Inheritance object Exception NoHandlerForMessageTypeException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NoHandlerForMessageTypeException(Type) public NoHandlerForMessageTypeException(Type commandType) Parameters commandType Type"
  },
  "api/Composable.Messaging.Buses.Implementation.html": {
    "href": "api/Composable.Messaging.Buses.Implementation.html",
    "title": "Namespace Composable.Messaging.Buses.Implementation | Composable",
    "keywords": "Namespace Composable.Messaging.Buses.Implementation Classes CommandValidationFailureException EndPointAddress EndpointConfiguration InvalidControllerRegistrationException MessageDispatchingFailedException NoHandlerException NoHandlerForMessageTypeException"
  },
  "api/Composable.Messaging.Buses.MessageHandlerRegistrarWithDependencyInjectionSupport.html": {
    "href": "api/Composable.Messaging.Buses.MessageHandlerRegistrarWithDependencyInjectionSupport.html",
    "title": "Class MessageHandlerRegistrarWithDependencyInjectionSupport | Composable",
    "keywords": "Class MessageHandlerRegistrarWithDependencyInjectionSupport Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public class MessageHandlerRegistrarWithDependencyInjectionSupport Inheritance object MessageHandlerRegistrarWithDependencyInjectionSupport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>) MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.Buses.MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.html": {
    "href": "api/Composable.Messaging.Buses.MessageHandlerRegistrarWithDependencyInjectionSupportExtensions.html",
    "title": "Class MessageHandlerRegistrarWithDependencyInjectionSupportExtensions | Composable",
    "keywords": "Class MessageHandlerRegistrarWithDependencyInjectionSupportExtensions Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public static class MessageHandlerRegistrarWithDependencyInjectionSupportExtensions Inheritance object MessageHandlerRegistrarWithDependencyInjectionSupportExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class where TDependency9 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TDependency9 TResult ForCommandWithResult<TCommand, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TResult> handler) where TCommand : ICommand<TResult> Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TResult ForCommandWithResult<TCommand, TDependency1, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TResult ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommandWithResult<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult> handler) where TCommand : ICommand<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TResult ForCommand<TCommand>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand> handler) where TCommand : ICommand Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class where TDependency9 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TDependency9 ForCommand<TCommand, TDependency1>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1> handler) where TCommand : ICommand where TDependency1 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 ForCommand<TCommand, TDependency1, TDependency2>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 ForCommand<TCommand, TDependency1, TDependency2, TDependency3>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForCommand<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8> handler) where TCommand : ICommand where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TCommand, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TCommand TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 ForEvent<TEvent>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent> handler) where TEvent : IEvent Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class where TDependency9 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TDependency9 ForEvent<TEvent, TDependency1>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1> handler) where TEvent : IEvent where TDependency1 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 ForEvent<TEvent, TDependency1, TDependency2>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 ForEvent<TEvent, TDependency1, TDependency2, TDependency3>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(MessageHandlerRegistrarWithDependencyInjectionSupport, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForEvent<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8> handler) where TEvent : IEvent where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Action<TEvent, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TEvent TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class where TDependency8 : class where TDependency9 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TDependency8, TDependency9, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TDependency8 TDependency9 TResult ForQuery<TQuery, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TResult> handler) where TQuery : IQuery<TResult> Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TResult ForQuery<TQuery, TDependency1, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TResult ForQuery<TQuery, TDependency1, TDependency2, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TResult ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(MessageHandlerRegistrarWithDependencyInjectionSupport, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>) public static MessageHandlerRegistrarWithDependencyInjectionSupport ForQuery<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult>(this MessageHandlerRegistrarWithDependencyInjectionSupport @this, Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult> handler) where TQuery : IQuery<TResult> where TDependency1 : class where TDependency2 : class where TDependency3 : class where TDependency4 : class where TDependency5 : class where TDependency6 : class where TDependency7 : class Parameters this MessageHandlerRegistrarWithDependencyInjectionSupport handler Func<TQuery, TDependency1, TDependency2, TDependency3, TDependency4, TDependency5, TDependency6, TDependency7, TResult> Returns MessageHandlerRegistrarWithDependencyInjectionSupport Type Parameters TQuery TDependency1 TDependency2 TDependency3 TDependency4 TDependency5 TDependency6 TDependency7 TResult"
  },
  "api/Composable.Messaging.Buses.TestingEndpointHost.html": {
    "href": "api/Composable.Messaging.Buses.TestingEndpointHost.html",
    "title": "Class TestingEndpointHost | Composable",
    "keywords": "Class TestingEndpointHost Namespace Composable.Messaging.Buses Assembly Composable.CQRS.ExternalDependencies.dll public class TestingEndpointHost : TestingEndpointHostBase, ITestingEndpointHost, IEndpointHost, IAsyncDisposable Inheritance object EndpointHost TestingEndpointHostBase TestingEndpointHost Implements ITestingEndpointHost IEndpointHost IAsyncDisposable Inherited Members TestingEndpointHostBase.ServerEndpoints TestingEndpointHostBase.RegisterTestingEndpoint(string, EndpointId, Action<IEndpointBuilder>) TestingEndpointHostBase.RegisterClientEndpointForRegisteredEndpoints() TestingEndpointHostBase.AssertThrown<TException>() TestingEndpointHostBase.DisposeAsync(bool) EndpointHost.Endpoints EndpointHost.RegisterEndpoint(string, EndpointId, Action<IEndpointBuilder>) EndpointHost.RegisterClientEndpoint(Action<IEndpointBuilder>) EndpointHost.StartAsync() EndpointHost.Start() EndpointHost.DisposeAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Constructors TestingEndpointHost(IRunMode, Func<IRunMode, IDependencyInjectionContainer>) public TestingEndpointHost(IRunMode mode, Func<IRunMode, IDependencyInjectionContainer> containerFactory) Parameters mode IRunMode containerFactory Func<IRunMode, IDependencyInjectionContainer> Methods Create(Func<IRunMode, IDependencyInjectionContainer>) public static ITestingEndpointHost Create(Func<IRunMode, IDependencyInjectionContainer> containerFactory) Parameters containerFactory Func<IRunMode, IDependencyInjectionContainer> Returns ITestingEndpointHost"
  },
  "api/Composable.Messaging.Buses.TestingEndpointHostBase.html": {
    "href": "api/Composable.Messaging.Buses.TestingEndpointHostBase.html",
    "title": "Class TestingEndpointHostBase | Composable",
    "keywords": "Class TestingEndpointHostBase Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public class TestingEndpointHostBase : EndpointHost, ITestingEndpointHost, IEndpointHost, IAsyncDisposable Inheritance object EndpointHost TestingEndpointHostBase Implements ITestingEndpointHost IEndpointHost IAsyncDisposable Derived TestingEndpointHost Inherited Members EndpointHost.Endpoints EndpointHost.RegisterEndpoint(string, EndpointId, Action<IEndpointBuilder>) EndpointHost.RegisterClientEndpoint(Action<IEndpointBuilder>) EndpointHost.StartAsync() EndpointHost.Start() EndpointHost.DisposeAsync() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods TestingHostExtensions.AssertThatRunningScenarioThrowsBackendAndClientException<TException>(ITestingEndpointHost, Action) TestingHostExtensions.AssertThatRunningScenarioThrowsBackendException<TException>(ITestingEndpointHost, Action) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) TaskCE.CaF(IAsyncDisposable) ObjectCE.ToStringNotNull(object) Constructors TestingEndpointHostBase(IRunMode, Func<IRunMode, IDependencyInjectionContainer>) public TestingEndpointHostBase(IRunMode mode, Func<IRunMode, IDependencyInjectionContainer> containerFactory) Parameters mode IRunMode containerFactory Func<IRunMode, IDependencyInjectionContainer> Properties ServerEndpoints public IEnumerable<EndPointAddress> ServerEndpoints { get; } Property Value IEnumerable<EndPointAddress> Methods AssertThrown<TException>() public TException AssertThrown<TException>() where TException : Exception Returns TException Type Parameters TException DisposeAsync(bool) protected override ValueTask DisposeAsync(bool disposing) Parameters disposing bool Returns ValueTask RegisterClientEndpointForRegisteredEndpoints() public IEndpoint RegisterClientEndpointForRegisteredEndpoints() Returns IEndpoint RegisterTestingEndpoint(string?, EndpointId?, Action<IEndpointBuilder>?) public IEndpoint RegisterTestingEndpoint(string? name = null, EndpointId? id = null, Action<IEndpointBuilder>? setup = null) Parameters name string id EndpointId setup Action<IEndpointBuilder> Returns IEndpoint"
  },
  "api/Composable.Messaging.Buses.TestingHostExtensions.html": {
    "href": "api/Composable.Messaging.Buses.TestingHostExtensions.html",
    "title": "Class TestingHostExtensions | Composable",
    "keywords": "Class TestingHostExtensions Namespace Composable.Messaging.Buses Assembly Composable.CQRS.dll public static class TestingHostExtensions Inheritance object TestingHostExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AssertThatRunningScenarioThrowsBackendAndClientException<TException>(ITestingEndpointHost, Action) public static (TException BackendException, MessageDispatchingFailedException FrontEndException) AssertThatRunningScenarioThrowsBackendAndClientException<TException>(this ITestingEndpointHost @this, Action action) where TException : Exception Parameters this ITestingEndpointHost action Action Returns (TException BackendException, MessageDispatchingFailedException FrontEndException) Type Parameters TException AssertThatRunningScenarioThrowsBackendException<TException>(ITestingEndpointHost, Action) public static TException AssertThatRunningScenarioThrowsBackendException<TException>(this ITestingEndpointHost @this, Action action) where TException : Exception Parameters this ITestingEndpointHost action Action Returns TException Type Parameters TException"
  },
  "api/Composable.Messaging.Buses.html": {
    "href": "api/Composable.Messaging.Buses.html",
    "title": "Namespace Composable.Messaging.Buses | Composable",
    "keywords": "Namespace Composable.Messaging.Buses Namespaces Composable.Messaging.Buses.Implementation Classes EndpointHost EndpointHost.Production EndpointId EndpointRequestExecutor MessageHandlerRegistrarWithDependencyInjectionSupport MessageHandlerRegistrarWithDependencyInjectionSupportExtensions TestingEndpointHost TestingEndpointHostBase TestingHostExtensions Interfaces IEndpoint IEndpointBuilder IEndpointHost IMessageHandlerRegistrar IServiceBusSession Dispatches messages between processes. ITestingEndpointHost"
  },
  "api/Composable.Messaging.Events.CallMatchingHandlersInRegistrationOrderEventDispatcher-1.html": {
    "href": "api/Composable.Messaging.Events.CallMatchingHandlersInRegistrationOrderEventDispatcher-1.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher<TEvent> | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher<TEvent> Namespace Composable.Messaging.Events Assembly Composable.CQRS.dll Calls all matching handlers in the order they were registered when an event is Dispatched. Handlers should be registered using the RegisterHandlers method in the constructor of the inheritor. public class CallMatchingHandlersInRegistrationOrderEventDispatcher<TEvent> where TEvent : class, IEvent Type Parameters TEvent Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcher<TEvent> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Dispatch(TEvent) public void Dispatch(TEvent evt) Parameters evt TEvent Handles(IAggregateEvent) public bool Handles(IAggregateEvent @event) Parameters event IAggregateEvent Returns bool HandlesEvent<THandled>() public bool HandlesEvent<THandled>() Returns bool Type Parameters THandled Register() public IEventHandlerRegistrar<TEvent> Register() Returns IEventHandlerRegistrar<TEvent>"
  },
  "api/Composable.Messaging.Events.EventUnhandledException.html": {
    "href": "api/Composable.Messaging.Events.EventUnhandledException.html",
    "title": "Class EventUnhandledException | Composable",
    "keywords": "Class EventUnhandledException Namespace Composable.Messaging.Events Assembly Composable.CQRS.dll public class EventUnhandledException : Exception, ISerializable Inheritance object Exception EventUnhandledException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventUnhandledException(Type, Type) public EventUnhandledException(Type handlerType, Type eventType) Parameters handlerType Type eventType Type"
  },
  "api/Composable.Messaging.Events.IEventHandlerRegistrar-1.html": {
    "href": "api/Composable.Messaging.Events.IEventHandlerRegistrar-1.html",
    "title": "Interface IEventHandlerRegistrar<TEvent> | Composable",
    "keywords": "Interface IEventHandlerRegistrar<TEvent> Namespace Composable.Messaging.Events Assembly Composable.CQRS.dll public interface IEventHandlerRegistrar<in TEvent> where TEvent : class, IEvent Type Parameters TEvent Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods AfterHandlers<THandledEvent>(Action<THandledEvent>) IEventHandlerRegistrar<in TEvent> AfterHandlers<THandledEvent>(Action<THandledEvent> runAfterHandlers) where THandledEvent : TEvent Parameters runAfterHandlers Action<THandledEvent> Returns IEventHandlerRegistrar<TEvent> Type Parameters THandledEvent BeforeHandlers<THandledEvent>(Action<THandledEvent>) IEventHandlerRegistrar<in TEvent> BeforeHandlers<THandledEvent>(Action<THandledEvent> runBeforeHandlers) where THandledEvent : TEvent Parameters runBeforeHandlers Action<THandledEvent> Returns IEventHandlerRegistrar<TEvent> Type Parameters THandledEvent ForGenericEvent<THandledEvent>(Action<THandledEvent>) Lets you register handlers for event interfaces that may be defined outside of the event hierarchy you specify with TEvent. Useful for listening to generic events such as IAggregateCreatedEvent or IAggregateDeletedEvent Be aware that the concrete event received MUST still actually inherit TEvent or there will be an InvalidCastException IEventHandlerRegistrar<in TEvent> ForGenericEvent<THandledEvent>(Action<THandledEvent> handler) where THandledEvent : IEvent Parameters handler Action<THandledEvent> Returns IEventHandlerRegistrar<TEvent> Type Parameters THandledEvent ForWrapped<TWrapperEvent>(Action<TWrapperEvent>) IEventHandlerRegistrar<in TEvent> ForWrapped<TWrapperEvent>(Action<TWrapperEvent> handler) where TWrapperEvent : IWrapperEvent<in TEvent> Parameters handler Action<TWrapperEvent> Returns IEventHandlerRegistrar<TEvent> Type Parameters TWrapperEvent For<THandledEvent>(Action<THandledEvent>) Registers a handler for any event that implements THandledEvent. All matching handlers will be called in the order they were registered. IEventHandlerRegistrar<in TEvent> For<THandledEvent>(Action<THandledEvent> handler) where THandledEvent : TEvent Parameters handler Action<THandledEvent> Returns IEventHandlerRegistrar<TEvent> Type Parameters THandledEvent IgnoreAllUnhandled() IEventHandlerRegistrar<in TEvent> IgnoreAllUnhandled() Returns IEventHandlerRegistrar<TEvent> IgnoreUnhandled<TIgnored>() IEventHandlerRegistrar<in TEvent> IgnoreUnhandled<TIgnored>() where TIgnored : TEvent Returns IEventHandlerRegistrar<TEvent> Type Parameters TIgnored"
  },
  "api/Composable.Messaging.Events.ISingleAggregateQueryModel.html": {
    "href": "api/Composable.Messaging.Events.ISingleAggregateQueryModel.html",
    "title": "Interface ISingleAggregateQueryModel | Composable",
    "keywords": "Interface ISingleAggregateQueryModel Namespace Composable.Messaging.Events Assembly Composable.CQRS.dll public interface ISingleAggregateQueryModel : IHasPersistentIdentity<Guid> Inherited Members IHasPersistentIdentity<Guid>.Id Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods SetId(Guid) void SetId(Guid id) Parameters id Guid"
  },
  "api/Composable.Messaging.Events.html": {
    "href": "api/Composable.Messaging.Events.html",
    "title": "Namespace Composable.Messaging.Events | Composable",
    "keywords": "Namespace Composable.Messaging.Events Classes CallMatchingHandlersInRegistrationOrderEventDispatcher<TEvent> Calls all matching handlers in the order they were registered when an event is Dispatched. Handlers should be registered using the RegisterHandlers method in the constructor of the inheritor. EventUnhandledException Interfaces IEventHandlerRegistrar<TEvent> ISingleAggregateQueryModel"
  },
  "api/Composable.Messaging.Hypermedia.ILocalHypermediaNavigator.html": {
    "href": "api/Composable.Messaging.Hypermedia.ILocalHypermediaNavigator.html",
    "title": "Interface ILocalHypermediaNavigator | Composable",
    "keywords": "Interface ILocalHypermediaNavigator Namespace Composable.Messaging.Hypermedia Assembly Composable.CQRS.dll Dispatches messages within a process. public interface ILocalHypermediaNavigator Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Execute(IStrictlyLocalCommand) Synchronously executes local handler for command. The handler takes part in the active transaction and guarantees consistent results within a transaction. void Execute(IStrictlyLocalCommand command) Parameters command IStrictlyLocalCommand Execute<TResult>(IStrictlyLocalCommand<TResult>) Synchronously executes local handler for command. The handler takes part in the active transaction and guarantees consistent results within a transaction. TResult Execute<TResult>(IStrictlyLocalCommand<TResult> command) Parameters command IStrictlyLocalCommand<TResult> Returns TResult Type Parameters TResult Execute<TQuery, TResult>(IStrictlyLocalQuery<TQuery, TResult>) Synchronously executes local handler for query. The handler takes part in the active transaction and guarantees consistent results within a transaction. TResult Execute<TQuery, TResult>(IStrictlyLocalQuery<TQuery, TResult> query) where TQuery : IStrictlyLocalQuery<TQuery, TResult> Parameters query IStrictlyLocalQuery<TQuery, TResult> Returns TResult Type Parameters TQuery TResult"
  },
  "api/Composable.Messaging.Hypermedia.IRemoteHypermediaNavigator.html": {
    "href": "api/Composable.Messaging.Hypermedia.IRemoteHypermediaNavigator.html",
    "title": "Interface IRemoteHypermediaNavigator | Composable",
    "keywords": "Interface IRemoteHypermediaNavigator Namespace Composable.Messaging.Hypermedia Assembly Composable.CQRS.dll public interface IRemoteHypermediaNavigator Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NavigationSpecificationMessageExtensions.NavigateAsync<TResult>(IRemoteHypermediaNavigator, NavigationSpecification<TResult>) NavigationSpecificationMessageExtensions.Navigate<TResult>(IRemoteHypermediaNavigator, NavigationSpecification<TResult>) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetAsync<TResult>(IRemotableQuery<TResult>) Gets the result of a handler somewhere on the bus handling the query Task<TResult> GetAsync<TResult>(IRemotableQuery<TResult> query) Parameters query IRemotableQuery<TResult> Returns Task<TResult> Type Parameters TResult Get<TResult>(IRemotableQuery<TResult>) Synchronous wrapper for: GetAsync<TResult>(IRemotableQuery<TResult>). TResult Get<TResult>(IRemotableQuery<TResult> query) Parameters query IRemotableQuery<TResult> Returns TResult Type Parameters TResult Post(IAtMostOnceHypermediaCommand) void Post(IAtMostOnceHypermediaCommand command) Parameters command IAtMostOnceHypermediaCommand PostAsync(IAtMostOnceHypermediaCommand) Task PostAsync(IAtMostOnceHypermediaCommand command) Parameters command IAtMostOnceHypermediaCommand Returns Task PostAsync<TResult>(IAtMostOnceCommand<TResult>) Task<TResult> PostAsync<TResult>(IAtMostOnceCommand<TResult> command) Parameters command IAtMostOnceCommand<TResult> Returns Task<TResult> Type Parameters TResult Post<TResult>(IAtMostOnceCommand<TResult>) TResult Post<TResult>(IAtMostOnceCommand<TResult> command) Parameters command IAtMostOnceCommand<TResult> Returns TResult Type Parameters TResult"
  },
  "api/Composable.Messaging.Hypermedia.NavigationSpecification-1.html": {
    "href": "api/Composable.Messaging.Hypermedia.NavigationSpecification-1.html",
    "title": "Class NavigationSpecification<TResult> | Composable",
    "keywords": "Class NavigationSpecification<TResult> Namespace Composable.Messaging.Hypermedia Assembly Composable.CQRS.dll public abstract class NavigationSpecification<TResult> Type Parameters TResult Inheritance object NavigationSpecification<TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) EndpointRequestExecutor.ExecuteAsClientRequestOnAsync<TResult>(NavigationSpecification<TResult>, IEndpoint) EndpointRequestExecutor.ExecuteAsClientRequestOn<TResult>(NavigationSpecification<TResult>, IEndpoint) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Get<TNext>(Func<TResult, IRemotableQuery<TNext>>) public NavigationSpecification<TNext> Get<TNext>(Func<TResult, IRemotableQuery<TNext>> next) Parameters next Func<TResult, IRemotableQuery<TNext>> Returns NavigationSpecification<TNext> Type Parameters TNext NavigateOn(IRemoteHypermediaNavigator) public TResult NavigateOn(IRemoteHypermediaNavigator busSession) Parameters busSession IRemoteHypermediaNavigator Returns TResult NavigateOnAsync(IRemoteHypermediaNavigator) public abstract Task<TResult> NavigateOnAsync(IRemoteHypermediaNavigator busSession) Parameters busSession IRemoteHypermediaNavigator Returns Task<TResult> Post(Func<TResult, IAtMostOnceHypermediaCommand>) public NavigationSpecification Post(Func<TResult, IAtMostOnceHypermediaCommand> next) Parameters next Func<TResult, IAtMostOnceHypermediaCommand> Returns NavigationSpecification Post<TNext>(Func<TResult, IAtMostOnceCommand<TNext>>) public NavigationSpecification<TNext> Post<TNext>(Func<TResult, IAtMostOnceCommand<TNext>> next) Parameters next Func<TResult, IAtMostOnceCommand<TNext>> Returns NavigationSpecification<TNext> Type Parameters TNext Select<TNext>(Func<TResult, TNext>) public NavigationSpecification<TNext> Select<TNext>(Func<TResult, TNext> select) Parameters select Func<TResult, TNext> Returns NavigationSpecification<TNext> Type Parameters TNext"
  },
  "api/Composable.Messaging.Hypermedia.NavigationSpecification.html": {
    "href": "api/Composable.Messaging.Hypermedia.NavigationSpecification.html",
    "title": "Class NavigationSpecification | Composable",
    "keywords": "Class NavigationSpecification Namespace Composable.Messaging.Hypermedia Assembly Composable.CQRS.dll public abstract class NavigationSpecification Inheritance object NavigationSpecification Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) EndpointRequestExecutor.ExecuteAsClientRequestOn(NavigationSpecification, IEndpoint) EndpointRequestExecutor.ExecuteAsClientRequestOnAsync(NavigationSpecification, IEndpoint) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Get<TResult>(IRemotableQuery<TResult>) public static NavigationSpecification<TResult> Get<TResult>(IRemotableQuery<TResult> query) Parameters query IRemotableQuery<TResult> Returns NavigationSpecification<TResult> Type Parameters TResult NavigateOn(IRemoteHypermediaNavigator) public void NavigateOn(IRemoteHypermediaNavigator busSession) Parameters busSession IRemoteHypermediaNavigator NavigateOnAsync(IRemoteHypermediaNavigator) public abstract Task NavigateOnAsync(IRemoteHypermediaNavigator busSession) Parameters busSession IRemoteHypermediaNavigator Returns Task Post(IAtMostOnceHypermediaCommand) public static NavigationSpecification Post(IAtMostOnceHypermediaCommand command) Parameters command IAtMostOnceHypermediaCommand Returns NavigationSpecification Post<TResult>(IAtMostOnceCommand<TResult>) public static NavigationSpecification<TResult> Post<TResult>(IAtMostOnceCommand<TResult> command) Parameters command IAtMostOnceCommand<TResult> Returns NavigationSpecification<TResult> Type Parameters TResult"
  },
  "api/Composable.Messaging.Hypermedia.NavigationSpecificationMessageExtensions.html": {
    "href": "api/Composable.Messaging.Hypermedia.NavigationSpecificationMessageExtensions.html",
    "title": "Class NavigationSpecificationMessageExtensions | Composable",
    "keywords": "Class NavigationSpecificationMessageExtensions Namespace Composable.Messaging.Hypermedia Assembly Composable.CQRS.dll public static class NavigationSpecificationMessageExtensions Inheritance object NavigationSpecificationMessageExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) public static TResult GetOn<TResult>(this IRemotableQuery<TResult> query, IRemoteHypermediaNavigator bus) Parameters query IRemotableQuery<TResult> bus IRemoteHypermediaNavigator Returns TResult Type Parameters TResult Get<TResult>(IRemotableQuery<TResult>) public static NavigationSpecification<TResult> Get<TResult>(this IRemotableQuery<TResult> query) Parameters query IRemotableQuery<TResult> Returns NavigationSpecification<TResult> Type Parameters TResult NavigateAsync<TResult>(IRemoteHypermediaNavigator, NavigationSpecification<TResult>) public static Task<TResult> NavigateAsync<TResult>(this IRemoteHypermediaNavigator navigator, NavigationSpecification<TResult> navigationSpecification) Parameters navigator IRemoteHypermediaNavigator navigationSpecification NavigationSpecification<TResult> Returns Task<TResult> Type Parameters TResult Navigate<TResult>(IRemoteHypermediaNavigator, NavigationSpecification<TResult>) public static TResult Navigate<TResult>(this IRemoteHypermediaNavigator navigator, NavigationSpecification<TResult> navigationSpecification) Parameters navigator IRemoteHypermediaNavigator navigationSpecification NavigationSpecification<TResult> Returns TResult Type Parameters TResult Post(IAtMostOnceHypermediaCommand) public static NavigationSpecification Post(this IAtMostOnceHypermediaCommand command) Parameters command IAtMostOnceHypermediaCommand Returns NavigationSpecification PostOn<TResult>(IAtMostOnceCommand<TResult>, IRemoteHypermediaNavigator) public static TResult PostOn<TResult>(this IAtMostOnceCommand<TResult> command, IRemoteHypermediaNavigator bus) Parameters command IAtMostOnceCommand<TResult> bus IRemoteHypermediaNavigator Returns TResult Type Parameters TResult Post<TResult>(IAtMostOnceCommand<TResult>) public static NavigationSpecification<TResult> Post<TResult>(this IAtMostOnceCommand<TResult> command) Parameters command IAtMostOnceCommand<TResult> Returns NavigationSpecification<TResult> Type Parameters TResult"
  },
  "api/Composable.Messaging.Hypermedia.html": {
    "href": "api/Composable.Messaging.Hypermedia.html",
    "title": "Namespace Composable.Messaging.Hypermedia | Composable",
    "keywords": "Namespace Composable.Messaging.Hypermedia Classes NavigationSpecification NavigationSpecificationMessageExtensions NavigationSpecification<TResult> Interfaces ILocalHypermediaNavigator Dispatches messages within a process. IRemoteHypermediaNavigator"
  },
  "api/Composable.Messaging.IAtMostOnceCommand-1.html": {
    "href": "api/Composable.Messaging.IAtMostOnceCommand-1.html",
    "title": "Interface IAtMostOnceCommand<TResult> | Composable",
    "keywords": "Interface IAtMostOnceCommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IAtMostOnceCommand<out TResult> : IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<TResult>, IRemotableCommand, IRemotableMessage, ICommand<TResult>, ICommand, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NavigationSpecificationMessageExtensions.PostOn<TResult>(IAtMostOnceCommand<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Post<TResult>(IAtMostOnceCommand<TResult>) NullableCE.NotNull<T>(T?) NavigationSpecificationMessageExtensions.Post(IAtMostOnceHypermediaCommand) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IAtMostOnceHypermediaCommand.html": {
    "href": "api/Composable.Messaging.IAtMostOnceHypermediaCommand.html",
    "title": "Interface IAtMostOnceHypermediaCommand | Composable",
    "keywords": "Interface IAtMostOnceHypermediaCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IAtMostOnceHypermediaCommand : IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand, ICommand, IRemotableMessage, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NavigationSpecificationMessageExtensions.Post(IAtMostOnceHypermediaCommand) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IAtMostOnceMessage.html": {
    "href": "api/Composable.Messaging.IAtMostOnceMessage.html",
    "title": "Interface IAtMostOnceMessage | Composable",
    "keywords": "Interface IAtMostOnceMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll A message that is guaranteed not to be delivered more than once. The MessageId is used by infrastructure to maintain this guarantee. The MessageId must be maintained when binding a command to a UI or the guarantee will be lost. public interface IAtMostOnceMessage : IRemotableMessage, IMustBeHandledTransactionally, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties MessageId Used by the infrastructure to guarantee that the same message is never delivered more than once. Must be generated when the message is created and then NEVER modified. Must be maintained when binding a command in a UI etc. Guid MessageId { get; } Property Value Guid"
  },
  "api/Composable.Messaging.ICannotBeSentRemotelyFromWithinTransaction.html": {
    "href": "api/Composable.Messaging.ICannotBeSentRemotelyFromWithinTransaction.html",
    "title": "Interface ICannotBeSentRemotelyFromWithinTransaction | Composable",
    "keywords": "Interface ICannotBeSentRemotelyFromWithinTransaction Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface ICannotBeSentRemotelyFromWithinTransaction : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.ICommand-1.html": {
    "href": "api/Composable.Messaging.ICommand-1.html",
    "title": "Interface ICommand<TResult> | Composable",
    "keywords": "Interface ICommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface ICommand<out TResult> : ICommand, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.ICommand.html": {
    "href": "api/Composable.Messaging.ICommand.html",
    "title": "Interface ICommand | Composable",
    "keywords": "Interface ICommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface ICommand : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.ICreateMyOwnResultQuery-1.html": {
    "href": "api/Composable.Messaging.ICreateMyOwnResultQuery-1.html",
    "title": "Interface ICreateMyOwnResultQuery<TResult> | Composable",
    "keywords": "Interface ICreateMyOwnResultQuery<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll Many resources in a hypermedia API do not actually need access to backend data. The data in the query is sufficient to create the result. For such queries implement this interface. That way no network roundtrip etc is required to perform the query. Greatly enhancing performance public interface ICreateMyOwnResultQuery<out TResult> : IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CreateResult() TResult CreateResult() Returns TResult"
  },
  "api/Composable.Messaging.IEvent.html": {
    "href": "api/Composable.Messaging.IEvent.html",
    "title": "Interface IEvent | Composable",
    "keywords": "Interface IEvent Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IEvent : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IExactlyOnceCommand.html": {
    "href": "api/Composable.Messaging.IExactlyOnceCommand.html",
    "title": "Interface IExactlyOnceCommand | Composable",
    "keywords": "Interface IExactlyOnceCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IExactlyOnceCommand : IRemotableCommand, ICommand, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IExactlyOnceEvent.html": {
    "href": "api/Composable.Messaging.IExactlyOnceEvent.html",
    "title": "Interface IExactlyOnceEvent | Composable",
    "keywords": "Interface IExactlyOnceEvent Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IExactlyOnceEvent : IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IExactlyOnceMessage.html": {
    "href": "api/Composable.Messaging.IExactlyOnceMessage.html",
    "title": "Interface IExactlyOnceMessage | Composable",
    "keywords": "Interface IExactlyOnceMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IExactlyOnceMessage : IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IExactlyOnceWrapperEvent-1.html": {
    "href": "api/Composable.Messaging.IExactlyOnceWrapperEvent-1.html",
    "title": "Interface IExactlyOnceWrapperEvent<TEventInterface> | Composable",
    "keywords": "Interface IExactlyOnceWrapperEvent<TEventInterface> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IExactlyOnceWrapperEvent<out TEventInterface> : IWrapperEvent<TEventInterface>, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage where TEventInterface : IExactlyOnceEvent Type Parameters TEventInterface Inherited Members IWrapperEvent<TEventInterface>.Event IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IHasReturnValue-1.html": {
    "href": "api/Composable.Messaging.IHasReturnValue-1.html",
    "title": "Interface IHasReturnValue<TResult> | Composable",
    "keywords": "Interface IHasReturnValue<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IHasReturnValue<out TResult> : IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IHypermediaMessage.html": {
    "href": "api/Composable.Messaging.IHypermediaMessage.html",
    "title": "Interface IHypermediaMessage | Composable",
    "keywords": "Interface IHypermediaMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IHypermediaMessage : IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IMessage.html": {
    "href": "api/Composable.Messaging.IMessage.html",
    "title": "Interface IMessage | Composable",
    "keywords": "Interface IMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IMustBeHandledTransactionally.html": {
    "href": "api/Composable.Messaging.IMustBeHandledTransactionally.html",
    "title": "Interface IMustBeHandledTransactionally | Composable",
    "keywords": "Interface IMustBeHandledTransactionally Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IMustBeHandledTransactionally : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IMustBeSentAndHandledTransactionally.html": {
    "href": "api/Composable.Messaging.IMustBeSentAndHandledTransactionally.html",
    "title": "Interface IMustBeSentAndHandledTransactionally | Composable",
    "keywords": "Interface IMustBeSentAndHandledTransactionally Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IMustBeSentAndHandledTransactionally : IMustBeSentTransactionally, IMustBeHandledTransactionally, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IMustBeSentTransactionally.html": {
    "href": "api/Composable.Messaging.IMustBeSentTransactionally.html",
    "title": "Interface IMustBeSentTransactionally | Composable",
    "keywords": "Interface IMustBeSentTransactionally Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IMustBeSentTransactionally : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IQuery-1.html": {
    "href": "api/Composable.Messaging.IQuery-1.html",
    "title": "Interface IQuery<TResult> | Composable",
    "keywords": "Interface IQuery<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll An instructs the receiver to return a result based upon the data in the query. public interface IQuery<out TResult> : IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableCommand-1.html": {
    "href": "api/Composable.Messaging.IRemotableCommand-1.html",
    "title": "Interface IRemotableCommand<TResult> | Composable",
    "keywords": "Interface IRemotableCommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableCommand<out TResult> : IRemotableCommand, IRemotableMessage, ICommand<TResult>, ICommand, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableCommand.html": {
    "href": "api/Composable.Messaging.IRemotableCommand.html",
    "title": "Interface IRemotableCommand | Composable",
    "keywords": "Interface IRemotableCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableCommand : ICommand, IRemotableMessage, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableCreateMyOwnResultQuery-1.html": {
    "href": "api/Composable.Messaging.IRemotableCreateMyOwnResultQuery-1.html",
    "title": "Interface IRemotableCreateMyOwnResultQuery<TResult> | Composable",
    "keywords": "Interface IRemotableCreateMyOwnResultQuery<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableCreateMyOwnResultQuery<out TResult> : IRemotableQuery<TResult>, IRemotableMessage, ICreateMyOwnResultQuery<TResult>, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inherited Members ICreateMyOwnResultQuery<TResult>.CreateResult() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableEvent.html": {
    "href": "api/Composable.Messaging.IRemotableEvent.html",
    "title": "Interface IRemotableEvent | Composable",
    "keywords": "Interface IRemotableEvent Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableEvent : IRemotableMessage, IEvent, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableMessage.html": {
    "href": "api/Composable.Messaging.IRemotableMessage.html",
    "title": "Interface IRemotableMessage | Composable",
    "keywords": "Interface IRemotableMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableMessage : IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRemotableQuery-1.html": {
    "href": "api/Composable.Messaging.IRemotableQuery-1.html",
    "title": "Interface IRemotableQuery<TResult> | Composable",
    "keywords": "Interface IRemotableQuery<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRemotableQuery<out TResult> : IRemotableMessage, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IRequireAResponse.html": {
    "href": "api/Composable.Messaging.IRequireAResponse.html",
    "title": "Interface IRequireAResponse | Composable",
    "keywords": "Interface IRequireAResponse Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IRequireAResponse : ICannotBeSentRemotelyFromWithinTransaction, IMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IStrictlyLocalCommand-1.html": {
    "href": "api/Composable.Messaging.IStrictlyLocalCommand-1.html",
    "title": "Interface IStrictlyLocalCommand<TResult> | Composable",
    "keywords": "Interface IStrictlyLocalCommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IStrictlyLocalCommand<out TResult> : ICommand<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Type Parameters TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IStrictlyLocalCommand.html": {
    "href": "api/Composable.Messaging.IStrictlyLocalCommand.html",
    "title": "Interface IStrictlyLocalCommand | Composable",
    "keywords": "Interface IStrictlyLocalCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IStrictlyLocalCommand : ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IStrictlyLocalEvent.html": {
    "href": "api/Composable.Messaging.IStrictlyLocalEvent.html",
    "title": "Interface IStrictlyLocalEvent | Composable",
    "keywords": "Interface IStrictlyLocalEvent Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IStrictlyLocalEvent : IEvent, IMessage, IStrictlyLocalMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IStrictlyLocalMessage.html": {
    "href": "api/Composable.Messaging.IStrictlyLocalMessage.html",
    "title": "Interface IStrictlyLocalMessage | Composable",
    "keywords": "Interface IStrictlyLocalMessage Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IStrictlyLocalMessage Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IStrictlyLocalQuery-2.html": {
    "href": "api/Composable.Messaging.IStrictlyLocalQuery-2.html",
    "title": "Interface IStrictlyLocalQuery<TQuery, TResult> | Composable",
    "keywords": "Interface IStrictlyLocalQuery<TQuery, TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IStrictlyLocalQuery<TQuery, out TResult> : IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TQuery : IStrictlyLocalQuery<TQuery, out TResult> Type Parameters TQuery TResult Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.IWrapperEvent-1.html": {
    "href": "api/Composable.Messaging.IWrapperEvent-1.html",
    "title": "Interface IWrapperEvent<TEvent> | Composable",
    "keywords": "Interface IWrapperEvent<TEvent> Namespace Composable.Messaging Assembly Composable.CQRS.dll public interface IWrapperEvent<out TEvent> : IEvent, IMessage where TEvent : IEvent Type Parameters TEvent Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Event TEvent Event { get; } Property Value TEvent"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand-1.html",
    "title": "Class MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> | Composable",
    "keywords": "Class MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public class MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> : MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand, IAtMostOnceCommand<TResult>, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<TResult>, IRemotableCommand, IRemotableMessage, ICommand<TResult>, ICommand, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> Implements IAtMostOnceCommand<TResult> IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand<TResult> IRemotableCommand IRemotableMessage ICommand<TResult> ICommand IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.PostOn<TResult>(IAtMostOnceCommand<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Post<TResult>(IAtMostOnceCommand<TResult>) NavigationSpecificationMessageExtensions.Post(IAtMostOnceHypermediaCommand) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AtMostOnceCommand(DeduplicationIdHandling) It is important not to set a default value if we are binding values in a UI. That would make it very easy to accidentally break the At most once guarantee. That is why you must pass the enum value here so that we can know what is happening. protected AtMostOnceCommand(MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling scenario) Parameters scenario MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling.html",
    "title": "Enum MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling | Composable",
    "keywords": "Enum MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling Namespace Composable.Messaging Assembly Composable.CQRS.dll How and when a MessageId is generated is vital to correctly maintain the At most once delivery guarantee. When creating the command in the backend service we must generate a new MessageId. When binding the command in a UI we must reuse the MessageId generated by the backend. This enum helps make that important distinction explicit in your code. protected enum MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) ObjectCE.ToStringNotNull(object) Fields Create = 0 When creating the command within the owning handler endpoint a new MessageId must be generated. Reuse = 1 When binding the command in a UI or when deserializing it is very important to NOT create a new MessageId as this would break the At most once delivery guarantee."
  },
  "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.html",
    "title": "Class MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand | Composable",
    "keywords": "Class MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public class MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand : IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand, ICommand, IRemotableMessage, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand Implements IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand ICommand IRemotableMessage IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Derived MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.Post(IAtMostOnceHypermediaCommand) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AtMostOnceHypermediaCommand(DeduplicationIdHandling) How and when a MessageId is generated is vital to correctly maintain the At most once delivery guarantee. When creating the command in the backend service we must generate a new MessageId. When binding the command in a UI we must reuse the MessageId generated by the backend. protected AtMostOnceHypermediaCommand(MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling scenario) Parameters scenario MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling Properties MessageId Used by the infrastructure to guarantee that the same message is never delivered more than once. Must be generated when the message is created and then NEVER modified. Must be maintained when binding a command in a UI etc. public Guid MessageId { get; set; } Property Value Guid Methods ReplaceDeduplicationId() Allows for replacing the MessageId in the rare cases when that is actually helpful. One example is when a command failed to execute due to backend business logic rules and you wish to reuse the entered values in the UI that the command is bound to. If you do not change the MessageId when doing that the bus will keep returning the response from the first time you sent the command. public void ReplaceDeduplicationId()"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.AtMostOnce.html",
    "title": "Class MessageTypes.Remotable.AtMostOnce | Composable",
    "keywords": "Class MessageTypes.Remotable.AtMostOnce Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.Remotable.AtMostOnce Inheritance object MessageTypes.Remotable.AtMostOnce Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.ExactlyOnce.Command.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.ExactlyOnce.Command.html",
    "title": "Class MessageTypes.Remotable.ExactlyOnce.Command | Composable",
    "keywords": "Class MessageTypes.Remotable.ExactlyOnce.Command Namespace Composable.Messaging Assembly Composable.CQRS.dll public class MessageTypes.Remotable.ExactlyOnce.Command : ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>, IEquatable<MessageTypes.Remotable.ExactlyOnce.Command>, IExactlyOnceCommand, IRemotableCommand, ICommand, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<MessageTypes.Remotable.ExactlyOnce.Command> MessageTypes.Remotable.ExactlyOnce.Command Implements IEquatable<MessageTypes.Remotable.ExactlyOnce.Command> IExactlyOnceCommand IRemotableCommand ICommand IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.Equals(object) ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.GetHashCode() ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.Equals(MessageTypes.Remotable.ExactlyOnce.Command) ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Command() protected Command() Properties MessageId Used by the infrastructure to guarantee that the same message is never delivered more than once. Must be generated when the message is created and then NEVER modified. Must be maintained when binding a command in a UI etc. public Guid MessageId { get; } Property Value Guid"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.ExactlyOnce.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.ExactlyOnce.html",
    "title": "Class MessageTypes.Remotable.ExactlyOnce | Composable",
    "keywords": "Class MessageTypes.Remotable.ExactlyOnce Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.Remotable.ExactlyOnce Inheritance object MessageTypes.Remotable.ExactlyOnce Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.EntityLink-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.EntityLink-1.html",
    "title": "Class MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public class MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> : MessageTypes.Remotable.NonTransactional.Queries.Query<TResult>, IRemotableQuery<TResult>, IRemotableMessage, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage where TResult : IHasPersistentIdentity<Guid> Type Parameters TResult Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> Implements IRemotableQuery<TResult> IRemotableMessage IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EntityLink() public EntityLink() EntityLink(Guid) public EntityLink(Guid entityId) Parameters entityId Guid Properties EntityId public Guid EntityId { get; } Property Value Guid Methods WithId(Guid) public MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> WithId(Guid id) Parameters id Guid Returns MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult>"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery-1.html",
    "title": "Class MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll Implement IRemotableCreateMyOwnResultQuery<TResult> by passing a func to this base class. public abstract class MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> : MessageTypes.Remotable.NonTransactional.Queries.Query<TResult>, IRemotableCreateMyOwnResultQuery<TResult>, IRemotableQuery<TResult>, IRemotableMessage, ICreateMyOwnResultQuery<TResult>, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> Implements IRemotableCreateMyOwnResultQuery<TResult> IRemotableQuery<TResult> IRemotableMessage ICreateMyOwnResultQuery<TResult> IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors FuncResultQuery(Func<TResult>) Implement IRemotableCreateMyOwnResultQuery<TResult> by passing a func to this base class. protected FuncResultQuery(Func<TResult> factory) Parameters factory Func<TResult> Methods CreateResult() public TResult CreateResult() Returns TResult"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink-1.html",
    "title": "Class MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll Implements IRemotableCreateMyOwnResultQuery<TResult> by calling the default constructor on TResult public class MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> : MessageTypes.Remotable.NonTransactional.Queries.Query<TResult>, IRemotableCreateMyOwnResultQuery<TResult>, IRemotableQuery<TResult>, IRemotableMessage, ICreateMyOwnResultQuery<TResult>, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> Implements IRemotableCreateMyOwnResultQuery<TResult> IRemotableQuery<TResult> IRemotableMessage ICreateMyOwnResultQuery<TResult> IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CreateResult() public TResult CreateResult() Returns TResult"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.Query-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.Query-1.html",
    "title": "Class MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public abstract class MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> : IRemotableQuery<TResult>, IRemotableMessage, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Type Parameters TResult Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> Implements IRemotableQuery<TResult> IRemotableMessage IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Derived MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods NavigationSpecificationMessageExtensions.GetOn<TResult>(IRemotableQuery<TResult>, IRemoteHypermediaNavigator) NavigationSpecificationMessageExtensions.Get<TResult>(IRemotableQuery<TResult>) Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.Queries.html",
    "title": "Class MessageTypes.Remotable.NonTransactional.Queries | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional.Queries Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.Remotable.NonTransactional.Queries Inheritance object MessageTypes.Remotable.NonTransactional.Queries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.NonTransactional.html",
    "title": "Class MessageTypes.Remotable.NonTransactional | Composable",
    "keywords": "Class MessageTypes.Remotable.NonTransactional Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.Remotable.NonTransactional Inheritance object MessageTypes.Remotable.NonTransactional Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.Remotable.html": {
    "href": "api/Composable.Messaging.MessageTypes.Remotable.html",
    "title": "Class MessageTypes.Remotable | Composable",
    "keywords": "Class MessageTypes.Remotable Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.Remotable Inheritance object MessageTypes.Remotable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand-1.html",
    "title": "Class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand<TResult> | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public abstract class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand<TResult> : IStrictlyLocalCommand<TResult>, ICommand<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Type Parameters TResult Inheritance object MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand<TResult> Implements IStrictlyLocalCommand<TResult> ICommand<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IStrictlyLocalCommand ICommand IMustBeSentTransactionally IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand.html",
    "title": "Class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand Namespace Composable.Messaging Assembly Composable.CQRS.dll public abstract class MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand : IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Inheritance object MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand Implements IStrictlyLocalCommand ICommand IMustBeSentTransactionally IMessage IStrictlyLocalMessage Derived DocumentDbApi.Command.DeleteDocument<TDocument> DocumentDbApi.Command.SaveDocument<TDocument> EventStoreApi.Command.SaveAggregate<TAggregate> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Commands.html",
    "title": "Class MessageTypes.StrictlyLocal.Commands | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Commands Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.StrictlyLocal.Commands Inheritance object MessageTypes.StrictlyLocal.Commands Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.EntityLink-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.EntityLink-1.html",
    "title": "Class MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public sealed class MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<MessageTypes.StrictlyLocal.Queries.EntityLink<TResult>, TResult>, IStrictlyLocalQuery<MessageTypes.StrictlyLocal.Queries.EntityLink<TResult>, TResult>, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TResult : IHasPersistentIdentity<Guid> Type Parameters TResult Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<MessageTypes.StrictlyLocal.Queries.EntityLink<TResult>, TResult> MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> Implements IStrictlyLocalQuery<MessageTypes.StrictlyLocal.Queries.EntityLink<TResult>, TResult> IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EntityLink(Guid) [JsonConstructor] public EntityLink(Guid entityId) Parameters entityId Guid Properties EntityId public Guid EntityId { get; } Property Value Guid"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery-2.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery-2.html",
    "title": "Class MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> Namespace Composable.Messaging Assembly Composable.CQRS.dll public abstract class MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> : IStrictlyLocalQuery<TQuery, TResult>, IQuery<TResult>, IHasReturnValue<TResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TQuery : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> Type Parameters TQuery TResult Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> Implements IStrictlyLocalQuery<TQuery, TResult> IQuery<TResult> IHasReturnValue<TResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Derived MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> DocumentDbApi.QueryApi.TryGetDocument<TDocument> EventStoreApi.QueryApi.AggregateLink<TAggregate> EventStoreApi.QueryApi.GetAggregateHistory<TEvent> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.Queries.html",
    "title": "Class MessageTypes.StrictlyLocal.Queries | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal.Queries Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.StrictlyLocal.Queries Inheritance object MessageTypes.StrictlyLocal.Queries Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.StrictlyLocal.html": {
    "href": "api/Composable.Messaging.MessageTypes.StrictlyLocal.html",
    "title": "Class MessageTypes.StrictlyLocal | Composable",
    "keywords": "Class MessageTypes.StrictlyLocal Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.StrictlyLocal Inheritance object MessageTypes.StrictlyLocal Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.MessageTypes.WrapperEvent-1.html": {
    "href": "api/Composable.Messaging.MessageTypes.WrapperEvent-1.html",
    "title": "Class MessageTypes.WrapperEvent<TEventInterface> | Composable",
    "keywords": "Class MessageTypes.WrapperEvent<TEventInterface> Namespace Composable.Messaging Assembly Composable.CQRS.dll public class MessageTypes.WrapperEvent<TEventInterface> : IWrapperEvent<TEventInterface>, IEvent, IMessage where TEventInterface : IEvent Type Parameters TEventInterface Inheritance object MessageTypes.WrapperEvent<TEventInterface> Implements IWrapperEvent<TEventInterface> IEvent IMessage Derived AggregateEvent<TBaseEventInterface> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors WrapperEvent(TEventInterface) public WrapperEvent(TEventInterface @event) Parameters event TEventInterface Properties Event public TEventInterface Event { get; } Property Value TEventInterface"
  },
  "api/Composable.Messaging.MessageTypes.WrapperEvent.html": {
    "href": "api/Composable.Messaging.MessageTypes.WrapperEvent.html",
    "title": "Class MessageTypes.WrapperEvent | Composable",
    "keywords": "Class MessageTypes.WrapperEvent Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes.WrapperEvent Inheritance object MessageTypes.WrapperEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods WrapEvent(IEvent) public static IWrapperEvent<IEvent> WrapEvent(IEvent theEvent) Parameters theEvent IEvent Returns IWrapperEvent<IEvent> WrapEvent<TWrappedEvent>(TWrappedEvent) public static IWrapperEvent<TWrappedEvent> WrapEvent<TWrappedEvent>(TWrappedEvent theEvent) where TWrappedEvent : IEvent Parameters theEvent TWrappedEvent Returns IWrapperEvent<TWrappedEvent> Type Parameters TWrappedEvent WrapEvent<TWrapperEvent, TWrappedEvent>(TWrappedEvent) public static TWrapperEvent WrapEvent<TWrapperEvent, TWrappedEvent>(TWrappedEvent theEvent) where TWrapperEvent : IWrapperEvent<TWrappedEvent> where TWrappedEvent : IEvent Parameters theEvent TWrappedEvent Returns TWrapperEvent Type Parameters TWrapperEvent TWrappedEvent WrapperConstructorFor(Type) public static Func<IEvent, IWrapperEvent<IEvent>> WrapperConstructorFor(Type wrappedEventType) Parameters wrappedEventType Type Returns Func<IEvent, IWrapperEvent<IEvent>>"
  },
  "api/Composable.Messaging.MessageTypes.html": {
    "href": "api/Composable.Messaging.MessageTypes.html",
    "title": "Class MessageTypes | Composable",
    "keywords": "Class MessageTypes Namespace Composable.Messaging Assembly Composable.CQRS.dll public static class MessageTypes Inheritance object MessageTypes Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Messaging.html": {
    "href": "api/Composable.Messaging.html",
    "title": "Namespace Composable.Messaging | Composable",
    "keywords": "Namespace Composable.Messaging Namespaces Composable.Messaging.Buses Composable.Messaging.Events Composable.Messaging.Hypermedia Classes MessageTypes MessageTypes.Remotable MessageTypes.Remotable.AtMostOnce MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<TResult> MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.ExactlyOnce MessageTypes.Remotable.ExactlyOnce.Command MessageTypes.Remotable.NonTransactional MessageTypes.Remotable.NonTransactional.Queries MessageTypes.Remotable.NonTransactional.Queries.EntityLink<TResult> MessageTypes.Remotable.NonTransactional.Queries.FuncResultQuery<TResult> Implement IRemotableCreateMyOwnResultQuery<TResult> by passing a func to this base class. MessageTypes.Remotable.NonTransactional.Queries.NewableResultLink<TResult> Implements IRemotableCreateMyOwnResultQuery<TResult> by calling the default constructor on TResult MessageTypes.Remotable.NonTransactional.Queries.Query<TResult> MessageTypes.StrictlyLocal MessageTypes.StrictlyLocal.Commands MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand<TResult> MessageTypes.StrictlyLocal.Queries MessageTypes.StrictlyLocal.Queries.EntityLink<TResult> MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<TQuery, TResult> MessageTypes.WrapperEvent MessageTypes.WrapperEvent<TEventInterface> Interfaces IAtMostOnceCommand<TResult> IAtMostOnceHypermediaCommand IAtMostOnceMessage A message that is guaranteed not to be delivered more than once. The MessageId is used by infrastructure to maintain this guarantee. The MessageId must be maintained when binding a command to a UI or the guarantee will be lost. ICannotBeSentRemotelyFromWithinTransaction ICommand ICommand<TResult> ICreateMyOwnResultQuery<TResult> Many resources in a hypermedia API do not actually need access to backend data. The data in the query is sufficient to create the result. For such queries implement this interface. That way no network roundtrip etc is required to perform the query. Greatly enhancing performance IEvent IExactlyOnceCommand IExactlyOnceEvent IExactlyOnceMessage IExactlyOnceWrapperEvent<TEventInterface> IHasReturnValue<TResult> IHypermediaMessage IMessage IMustBeHandledTransactionally IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IQuery<TResult> An instructs the receiver to return a result based upon the data in the query. IRemotableCommand IRemotableCommand<TResult> IRemotableCreateMyOwnResultQuery<TResult> IRemotableEvent IRemotableMessage IRemotableQuery<TResult> IRequireAResponse IStrictlyLocalCommand IStrictlyLocalCommand<TResult> IStrictlyLocalEvent IStrictlyLocalMessage IStrictlyLocalQuery<TQuery, TResult> IWrapperEvent<TEvent> Enums MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.DeduplicationIdHandling How and when a MessageId is generated is vital to correctly maintain the At most once delivery guarantee. When creating the command in the backend service we must generate a new MessageId. When binding the command in a UI we must reuse the MessageId generated by the backend. This enum helps make that important distinction explicit in your code."
  },
  "api/Composable.Persistence.Common.DependencyInjection.DocumentDbRegistrar.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.DocumentDbRegistrar.html",
    "title": "Class DocumentDbRegistrar | Composable",
    "keywords": "Class DocumentDbRegistrar Namespace Composable.Persistence.Common.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class DocumentDbRegistrar Inheritance object DocumentDbRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterDocumentDb(IDependencyInjectionContainer, string) public static DocumentDbRegistrationBuilder RegisterDocumentDb(this IDependencyInjectionContainer @this, string connectionName) Parameters this IDependencyInjectionContainer connectionName string Returns DocumentDbRegistrationBuilder RegisterDocumentDb(IEndpointBuilder) public static DocumentDbRegistrationBuilder RegisterDocumentDb(this IEndpointBuilder @this) Parameters this IEndpointBuilder Returns DocumentDbRegistrationBuilder"
  },
  "api/Composable.Persistence.Common.DependencyInjection.DocumentDbRegistrationBuilder.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.DocumentDbRegistrationBuilder.html",
    "title": "Class DocumentDbRegistrationBuilder | Composable",
    "keywords": "Class DocumentDbRegistrationBuilder Namespace Composable.Persistence.Common.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public class DocumentDbRegistrationBuilder Inheritance object DocumentDbRegistrationBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods HandleDocumentType<TDocument>(MessageHandlerRegistrarWithDependencyInjectionSupport) public DocumentDbRegistrationBuilder HandleDocumentType<TDocument>(MessageHandlerRegistrarWithDependencyInjectionSupport registrar) Parameters registrar MessageHandlerRegistrarWithDependencyInjectionSupport Returns DocumentDbRegistrationBuilder Type Parameters TDocument"
  },
  "api/Composable.Persistence.Common.DependencyInjection.EventStoreRegistrar.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.EventStoreRegistrar.html",
    "title": "Class EventStoreRegistrar | Composable",
    "keywords": "Class EventStoreRegistrar Namespace Composable.Persistence.Common.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class EventStoreRegistrar Inheritance object EventStoreRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterEventStore(IDependencyInjectionContainer, string) public static void RegisterEventStore(this IDependencyInjectionContainer @this, string connectionName) Parameters this IDependencyInjectionContainer connectionName string RegisterEventStore(IDependencyInjectionContainer, string, IReadOnlyList<IEventMigration>) public static void RegisterEventStore(this IDependencyInjectionContainer @this, string connectionName, IReadOnlyList<IEventMigration> migrations) Parameters this IDependencyInjectionContainer connectionName string migrations IReadOnlyList<IEventMigration> RegisterEventStore(IEndpointBuilder) public static EventStoreRegistrationBuilder RegisterEventStore(this IEndpointBuilder @this) Parameters this IEndpointBuilder Returns EventStoreRegistrationBuilder RegisterEventStore(IEndpointBuilder, IReadOnlyList<IEventMigration>) public static EventStoreRegistrationBuilder RegisterEventStore(this IEndpointBuilder @this, IReadOnlyList<IEventMigration> migrations) Parameters this IEndpointBuilder migrations IReadOnlyList<IEventMigration> Returns EventStoreRegistrationBuilder"
  },
  "api/Composable.Persistence.Common.DependencyInjection.EventStoreRegistrationBuilder.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.EventStoreRegistrationBuilder.html",
    "title": "Class EventStoreRegistrationBuilder | Composable",
    "keywords": "Class EventStoreRegistrationBuilder Namespace Composable.Persistence.Common.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public class EventStoreRegistrationBuilder Inheritance object EventStoreRegistrationBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods HandleAggregate<TAggregate, TEvent>() public EventStoreRegistrationBuilder HandleAggregate<TAggregate, TEvent>() where TAggregate : class, IEventStored<TEvent> where TEvent : IAggregateEvent Returns EventStoreRegistrationBuilder Type Parameters TAggregate TEvent"
  },
  "api/Composable.Persistence.Common.DependencyInjection.TestingPersistenceLayerRegistrar.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.TestingPersistenceLayerRegistrar.html",
    "title": "Class TestingPersistenceLayerRegistrar | Composable",
    "keywords": "Class TestingPersistenceLayerRegistrar Namespace Composable.Persistence.Common.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class TestingPersistenceLayerRegistrar Inheritance object TestingPersistenceLayerRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterCurrentTestsConfiguredPersistenceLayer(IDependencyInjectionContainer, string) public static void RegisterCurrentTestsConfiguredPersistenceLayer(this IDependencyInjectionContainer container, string connectionStringName) Parameters container IDependencyInjectionContainer connectionStringName string RegisterCurrentTestsConfiguredPersistenceLayer(IEndpointBuilder) public static void RegisterCurrentTestsConfiguredPersistenceLayer(this IEndpointBuilder @this) Parameters this IEndpointBuilder"
  },
  "api/Composable.Persistence.Common.DependencyInjection.html": {
    "href": "api/Composable.Persistence.Common.DependencyInjection.html",
    "title": "Namespace Composable.Persistence.Common.DependencyInjection | Composable",
    "keywords": "Namespace Composable.Persistence.Common.DependencyInjection Classes DocumentDbRegistrar DocumentDbRegistrationBuilder EventStoreRegistrar EventStoreRegistrationBuilder TestingPersistenceLayerRegistrar"
  },
  "api/Composable.Persistence.Common.EventStore.EventDuplicateKeyException.html": {
    "href": "api/Composable.Persistence.Common.EventStore.EventDuplicateKeyException.html",
    "title": "Class EventDuplicateKeyException | Composable",
    "keywords": "Class EventDuplicateKeyException Namespace Composable.Persistence.Common.EventStore Assembly Composable.CQRS.ExternalDependencies.dll public class EventDuplicateKeyException : Exception, ISerializable Inheritance object Exception EventDuplicateKeyException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventDuplicateKeyException(Exception) public EventDuplicateKeyException(Exception sqlException) Parameters sqlException Exception"
  },
  "api/Composable.Persistence.Common.EventStore.html": {
    "href": "api/Composable.Persistence.Common.EventStore.html",
    "title": "Namespace Composable.Persistence.Common.EventStore | Composable",
    "keywords": "Namespace Composable.Persistence.Common.EventStore Classes EventDuplicateKeyException"
  },
  "api/Composable.Persistence.Common.html": {
    "href": "api/Composable.Persistence.Common.html",
    "title": "Namespace Composable.Persistence.Common | Composable",
    "keywords": "Namespace Composable.Persistence.Common Namespaces Composable.Persistence.Common.DependencyInjection Composable.Persistence.Common.EventStore"
  },
  "api/Composable.Persistence.DocumentDb.AttemptToSaveAlreadyPersistedValueException.html": {
    "href": "api/Composable.Persistence.DocumentDb.AttemptToSaveAlreadyPersistedValueException.html",
    "title": "Class AttemptToSaveAlreadyPersistedValueException | Composable",
    "keywords": "Class AttemptToSaveAlreadyPersistedValueException Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class AttemptToSaveAlreadyPersistedValueException : Exception, ISerializable Inheritance object Exception AttemptToSaveAlreadyPersistedValueException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AttemptToSaveAlreadyPersistedValueException(object, object) public AttemptToSaveAlreadyPersistedValueException(object key, object value) Parameters key object value object"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.DeleteDocument-1.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.DeleteDocument-1.html",
    "title": "Class DocumentDbApi.Command.DeleteDocument<TDocument> | Composable",
    "keywords": "Class DocumentDbApi.Command.DeleteDocument<TDocument> Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.Command.DeleteDocument<TDocument> : MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand, IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Type Parameters TDocument Inheritance object MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand DocumentDbApi.Command.DeleteDocument<TDocument> Implements IStrictlyLocalCommand ICommand IMustBeSentTransactionally IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.SaveDocument-1.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.SaveDocument-1.html",
    "title": "Class DocumentDbApi.Command.SaveDocument<TDocument> | Composable",
    "keywords": "Class DocumentDbApi.Command.SaveDocument<TDocument> Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.Command.SaveDocument<TDocument> : MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand, IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage Type Parameters TDocument Inheritance object MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand DocumentDbApi.Command.SaveDocument<TDocument> Implements IStrictlyLocalCommand ICommand IMustBeSentTransactionally IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.Command.html",
    "title": "Class DocumentDbApi.Command | Composable",
    "keywords": "Class DocumentDbApi.Command Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.Command Inheritance object DocumentDbApi.Command Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Delete<TDocument>(string) public DocumentDbApi.Command.DeleteDocument<TDocument> Delete<TDocument>(string key) Parameters key string Returns DocumentDbApi.Command.DeleteDocument<TDocument> Type Parameters TDocument Save<TDocument>(string, TDocument) public DocumentDbApi.Command.SaveDocument<TDocument> Save<TDocument>(string key, TDocument account) Parameters key string account TDocument Returns DocumentDbApi.Command.SaveDocument<TDocument> Type Parameters TDocument Save<TDocument>(TDocument) public DocumentDbApi.Command.SaveDocument<TDocument> Save<TDocument>(TDocument account) where TDocument : IHasPersistentIdentity<Guid> Parameters account TDocument Returns DocumentDbApi.Command.SaveDocument<TDocument> Type Parameters TDocument"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.GetDocumentForUpdate-1.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.GetDocumentForUpdate-1.html",
    "title": "Class DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> | Composable",
    "keywords": "Class DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument>, TDocument>, IStrictlyLocalQuery<DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument>, TDocument>, IQuery<TDocument>, IHasReturnValue<TDocument>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage Type Parameters TDocument Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument>, TDocument> DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> Implements IStrictlyLocalQuery<DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument>, TDocument> IQuery<TDocument> IHasReturnValue<TDocument> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument-1.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument-1.html",
    "title": "Class DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> | Composable",
    "keywords": "Class DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument>, TDocument>, IStrictlyLocalQuery<DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument>, TDocument>, IQuery<TDocument>, IHasReturnValue<TDocument>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage Type Parameters TDocument Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument>, TDocument> DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> Implements IStrictlyLocalQuery<DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument>, TDocument> IQuery<TDocument> IHasReturnValue<TDocument> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.TryGetDocument-1.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.TryGetDocument-1.html",
    "title": "Class DocumentDbApi.QueryApi.TryGetDocument<TDocument> | Composable",
    "keywords": "Class DocumentDbApi.QueryApi.TryGetDocument<TDocument> Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.QueryApi.TryGetDocument<TDocument> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.TryGetDocument<TDocument>, Option<TDocument>>, IStrictlyLocalQuery<DocumentDbApi.QueryApi.TryGetDocument<TDocument>, Option<TDocument>>, IQuery<Option<TDocument>>, IHasReturnValue<Option<TDocument>>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage Type Parameters TDocument Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<DocumentDbApi.QueryApi.TryGetDocument<TDocument>, Option<TDocument>> DocumentDbApi.QueryApi.TryGetDocument<TDocument> Implements IStrictlyLocalQuery<DocumentDbApi.QueryApi.TryGetDocument<TDocument>, Option<TDocument>> IQuery<Option<TDocument>> IHasReturnValue<Option<TDocument>> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.QueryApi.html",
    "title": "Class DocumentDbApi.QueryApi | Composable",
    "keywords": "Class DocumentDbApi.QueryApi Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi.QueryApi Inheritance object DocumentDbApi.QueryApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetForUpdate<TDocument>(Guid) public DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> GetForUpdate<TDocument>(Guid id) Parameters id Guid Returns DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> Type Parameters TDocument GetReadOnlyCopy<TDocument>(Guid) public DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> GetReadOnlyCopy<TDocument>(Guid id) Parameters id Guid Returns DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> Type Parameters TDocument TryGet<TDocument>(Guid) public DocumentDbApi.QueryApi.TryGetDocument<TDocument> TryGet<TDocument>(Guid id) where TDocument : IHasPersistentIdentity<Guid> Parameters id Guid Returns DocumentDbApi.QueryApi.TryGetDocument<TDocument> Type Parameters TDocument TryGet<TDocument>(string) public DocumentDbApi.QueryApi.TryGetDocument<TDocument> TryGet<TDocument>(string id) Parameters id string Returns DocumentDbApi.QueryApi.TryGetDocument<TDocument> Type Parameters TDocument"
  },
  "api/Composable.Persistence.DocumentDb.DocumentDbApi.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentDbApi.html",
    "title": "Class DocumentDbApi | Composable",
    "keywords": "Class DocumentDbApi Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentDbApi Inheritance object DocumentDbApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Commands public DocumentDbApi.Command Commands { get; } Property Value DocumentDbApi.Command Queries public DocumentDbApi.QueryApi Queries { get; } Property Value DocumentDbApi.QueryApi"
  },
  "api/Composable.Persistence.DocumentDb.DocumentIdIsEmptyGuidException.html": {
    "href": "api/Composable.Persistence.DocumentDb.DocumentIdIsEmptyGuidException.html",
    "title": "Class DocumentIdIsEmptyGuidException | Composable",
    "keywords": "Class DocumentIdIsEmptyGuidException Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class DocumentIdIsEmptyGuidException : Exception, ISerializable Inheritance object Exception DocumentIdIsEmptyGuidException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DocumentIdIsEmptyGuidException() public DocumentIdIsEmptyGuidException()"
  },
  "api/Composable.Persistence.DocumentDb.IDocumentDbBulkReader.html": {
    "href": "api/Composable.Persistence.DocumentDb.IDocumentDbBulkReader.html",
    "title": "Interface IDocumentDbBulkReader | Composable",
    "keywords": "Interface IDocumentDbBulkReader Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public interface IDocumentDbBulkReader : IDocumentDbReader, IDisposable Inherited Members IDocumentDbReader.Get<TValue>(object) IDocumentDbReader.TryGet<TValue>(object, out TValue) IDocumentDbReader.GetAll<T>(IEnumerable<Guid>) IDisposable.Dispose() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetAllIds<T>() IEnumerable<Guid> GetAllIds<T>() where T : IHasPersistentIdentity<Guid> Returns IEnumerable<Guid> Type Parameters T GetAll<T>() IEnumerable<T> GetAll<T>() where T : IHasPersistentIdentity<Guid> Returns IEnumerable<T> Type Parameters T"
  },
  "api/Composable.Persistence.DocumentDb.IDocumentDbReader.html": {
    "href": "api/Composable.Persistence.DocumentDb.IDocumentDbReader.html",
    "title": "Interface IDocumentDbReader | Composable",
    "keywords": "Interface IDocumentDbReader Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public interface IDocumentDbReader : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetAll<T>(IEnumerable<Guid>) IEnumerable<T> GetAll<T>(IEnumerable<Guid> ids) where T : IHasPersistentIdentity<Guid> Parameters ids IEnumerable<Guid> Returns IEnumerable<T> Type Parameters T Get<TValue>(object) TValue Get<TValue>(object key) Parameters key object Returns TValue Type Parameters TValue TryGet<TValue>(object, out TValue) bool TryGet<TValue>(object key, out TValue document) Parameters key object document TValue Returns bool Type Parameters TValue"
  },
  "api/Composable.Persistence.DocumentDb.IDocumentDbUpdater.html": {
    "href": "api/Composable.Persistence.DocumentDb.IDocumentDbUpdater.html",
    "title": "Interface IDocumentDbUpdater | Composable",
    "keywords": "Interface IDocumentDbUpdater Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public interface IDocumentDbUpdater Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Delete<TEntity>(object) void Delete<TEntity>(object id) Parameters id object Type Parameters TEntity Delete<TEntity>(TEntity) void Delete<TEntity>(TEntity entity) where TEntity : IHasPersistentIdentity<Guid> Parameters entity TEntity Type Parameters TEntity GetForUpdate<TValue>(object) Like Get but, if supported by implementing class, eagerly locks the instance in the database. TValue GetForUpdate<TValue>(object key) Parameters key object Returns TValue Type Parameters TValue Save<TValue>(object, TValue) void Save<TValue>(object id, TValue value) Parameters id object value TValue Type Parameters TValue Save<TEntity>(TEntity) void Save<TEntity>(TEntity entity) where TEntity : IHasPersistentIdentity<Guid> Parameters entity TEntity Type Parameters TEntity"
  },
  "api/Composable.Persistence.DocumentDb.NoSuchDocumentException.html": {
    "href": "api/Composable.Persistence.DocumentDb.NoSuchDocumentException.html",
    "title": "Class NoSuchDocumentException | Composable",
    "keywords": "Class NoSuchDocumentException Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class NoSuchDocumentException : Exception, ISerializable Inheritance object Exception NoSuchDocumentException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NoSuchDocumentException(object, Guid) public NoSuchDocumentException(object key, Guid type) Parameters key object type Guid NoSuchDocumentException(object, Type) public NoSuchDocumentException(object key, Type type) Parameters key object type Type"
  },
  "api/Composable.Persistence.DocumentDb.TooManyItemsDeletedException.html": {
    "href": "api/Composable.Persistence.DocumentDb.TooManyItemsDeletedException.html",
    "title": "Class TooManyItemsDeletedException | Composable",
    "keywords": "Class TooManyItemsDeletedException Namespace Composable.Persistence.DocumentDb Assembly Composable.CQRS.dll public class TooManyItemsDeletedException : Exception, ISerializable Inheritance object Exception TooManyItemsDeletedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.DocumentDb.html": {
    "href": "api/Composable.Persistence.DocumentDb.html",
    "title": "Namespace Composable.Persistence.DocumentDb | Composable",
    "keywords": "Namespace Composable.Persistence.DocumentDb Classes AttemptToSaveAlreadyPersistedValueException DocumentDbApi DocumentDbApi.Command DocumentDbApi.Command.DeleteDocument<TDocument> DocumentDbApi.Command.SaveDocument<TDocument> DocumentDbApi.QueryApi DocumentDbApi.QueryApi.GetDocumentForUpdate<TDocument> DocumentDbApi.QueryApi.GetReadonlyCopyOfDocument<TDocument> DocumentDbApi.QueryApi.TryGetDocument<TDocument> DocumentIdIsEmptyGuidException NoSuchDocumentException TooManyItemsDeletedException Interfaces IDocumentDbBulkReader IDocumentDbReader IDocumentDbUpdater"
  },
  "api/Composable.Persistence.EventStore.AggregateEvent-1.html": {
    "href": "api/Composable.Persistence.EventStore.AggregateEvent-1.html",
    "title": "Class AggregateEvent<TBaseEventInterface> | Composable",
    "keywords": "Class AggregateEvent<TBaseEventInterface> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public abstract class AggregateEvent<TBaseEventInterface> : MessageTypes.WrapperEvent<TBaseEventInterface>, IAggregateEvent<TBaseEventInterface>, IExactlyOnceWrapperEvent<TBaseEventInterface>, IWrapperEvent<TBaseEventInterface>, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage where TBaseEventInterface : IAggregateEvent Type Parameters TBaseEventInterface Inheritance object MessageTypes.WrapperEvent<TBaseEventInterface> AggregateEvent<TBaseEventInterface> Implements IAggregateEvent<TBaseEventInterface> IExactlyOnceWrapperEvent<TBaseEventInterface> IWrapperEvent<TBaseEventInterface> IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members MessageTypes.WrapperEvent<TBaseEventInterface>.Event object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AggregateEvent(TBaseEventInterface) protected AggregateEvent(TBaseEventInterface @event) Parameters event TBaseEventInterface"
  },
  "api/Composable.Persistence.EventStore.AggregateEvent.html": {
    "href": "api/Composable.Persistence.EventStore.AggregateEvent.html",
    "title": "Class AggregateEvent | Composable",
    "keywords": "Class AggregateEvent Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public abstract class AggregateEvent : ValueObject<AggregateEvent>, IEquatable<AggregateEvent>, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Implements IEquatable<AggregateEvent> IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AggregateEvent() protected AggregateEvent() AggregateEvent(Guid) protected AggregateEvent(Guid aggregateId) Parameters aggregateId Guid Properties AggregateId public Guid AggregateId { get; } Property Value Guid AggregateVersion public int AggregateVersion { get; } Property Value int MessageId Used by the infrastructure to guarantee that the same message is never delivered more than once. Must be generated when the message is created and then NEVER modified. Must be maintained when binding a command in a UI etc. public Guid MessageId { get; } Property Value Guid UtcTimeStamp public DateTime UtcTimeStamp { get; } Property Value DateTime"
  },
  "api/Composable.Persistence.EventStore.AggregateNotFoundException.html": {
    "href": "api/Composable.Persistence.EventStore.AggregateNotFoundException.html",
    "title": "Class AggregateNotFoundException | Composable",
    "keywords": "Class AggregateNotFoundException Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class AggregateNotFoundException : Exception, ISerializable Inheritance object Exception AggregateNotFoundException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AggregateNotFoundException(Guid) public AggregateNotFoundException(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-3.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-3.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>, IHasPersistentIdentity<Guid>, IEquatable<TAggregate>, IEventStored<TAggregateEvent>, IEventStored where TAggregate : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> where TAggregateEventImplementation : AggregateEvent, TAggregateEvent where TAggregateEvent : class, IAggregateEvent Type Parameters TAggregate TAggregateEventImplementation TAggregateEvent Inheritance object Entity<TAggregate, Guid> Entity<TAggregate> VersionedEntity<TAggregate> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> Implements IHasPersistentIdentity<Guid> IEquatable<TAggregate> IEventStored<TAggregateEvent> IEventStored Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.TimeSource Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.Publish<TEvent>(TEvent) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.RegisterEventHandlers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.AssertInvariantsAreMet() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, AggregateEvent<TAggregateEvent>, IAggregateEvent<TAggregateEvent>>.Commit(Action<IReadOnlyList<IAggregateEvent>>) VersionedEntity<TAggregate>.Version Entity<TAggregate>.Equals(TAggregate) Entity<TAggregate>.Equals(object) Entity<TAggregate>.GetHashCode() Entity<TAggregate, Guid>.Id Entity<TAggregate, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<TAggregate, Guid>.GetIdBypassContractValidation() Entity<TAggregate, Guid>.Equals(TAggregate) Entity<TAggregate, Guid>.Equals(object) Entity<TAggregate, Guid>.GetHashCode() Entity<TAggregate, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Aggregate() [Obsolete(\"Only for infrastructure\", true)] protected Aggregate() Aggregate(IUtcTimeTimeSource) protected Aggregate(IUtcTimeTimeSource timeSource) Parameters timeSource IUtcTimeTimeSource"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.EntityCollectionManager-7.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.EntityCollectionManager-7.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.EntityCollectionManager<TParent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.EntityCollectionManager<TParent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.EntityCollectionManager<TParent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> where TEntity : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> where TEntityId : notnull where TEntityEventImplementation : TEntityEvent, TAggregateEventImplementation where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEntityEventIdGetterSetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TParent TEntity TEntityId TEntityEventImplementation TEntityEvent TEntityCreatedEvent TEntityEventIdGetterSetter Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.EntityCollectionManager<TParent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EntityCollectionManager(TParent, Action<TEntityEventImplementation>, IEventHandlerRegistrar<TEntityEvent>) protected EntityCollectionManager(TParent parent, Action<TEntityEventImplementation> raiseEventThroughParent, IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters parent TParent raiseEventThroughParent Action<TEntityEventImplementation> appliersRegistrar IEventHandlerRegistrar<TEntityEvent> Fields IdGetter protected static readonly TEntityEventIdGetterSetter IdGetter Field Value TEntityEventIdGetterSetter Properties Entities public IReadOnlyEntityCollection<TEntity, TEntityId> Entities { get; } Property Value IReadOnlyEntityCollection<TEntity, TEntityId> ManagedEntities protected EntityCollection<TEntity, TEntityId> ManagedEntities { get; } Property Value EntityCollection<TEntity, TEntityId> Methods AddByPublishing<TCreationEvent>(TCreationEvent) public TEntity AddByPublishing<TCreationEvent>(TCreationEvent creationEvent) where TCreationEvent : TEntityEventImplementation, TEntityCreatedEvent Parameters creationEvent TCreationEvent Returns TEntity Type Parameters TCreationEvent"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedComponent-3.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedComponent-3.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll [UsedImplicitly(ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature)] public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> where TNestedComponent : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> where TNestedComponentEventImplementation : TComponentEventImplementation, TNestedComponentEvent where TNestedComponentEvent : class, TComponentEvent Type Parameters TNestedComponent TNestedComponentEventImplementation TNestedComponentEvent Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent>.Publish(TNestedComponentEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent>.RegisterEventHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NestedComponent(IUtcTimeTimeSource, Action<TNestedComponentEventImplementation>, IEventHandlerRegistrar<TNestedComponentEvent>, bool) protected NestedComponent(IUtcTimeTimeSource timeSource, Action<TNestedComponentEventImplementation> raiseEventThroughParent, IEventHandlerRegistrar<TNestedComponentEvent> appliersRegistrar, bool registerEventAppliers) Parameters timeSource IUtcTimeTimeSource raiseEventThroughParent Action<TNestedComponentEventImplementation> appliersRegistrar IEventHandlerRegistrar<TNestedComponentEvent> registerEventAppliers bool NestedComponent(TComponent) protected NestedComponent(TComponent parent) Parameters parent TComponent"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedEntity-6.CollectionManager.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedEntity-6.CollectionManager.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.IdGetter Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.ManagedEntities Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.Entities Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.AddByPublishing<TCreationEvent>(TCreationEvent) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedEntity-6.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.NestedEntity-6.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TEntity, TEntityEventImplementation, TEntityEvent> where TEntity : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> where TEntityId : notnull where TEntityEventImplementation : TComponentEventImplementation, TEntityEvent where TEntityEvent : class, TComponentEvent where TEntityCreatedEvent : TEntityEvent where TEntityEventIdGetterSetter : IGetSetAggregateEntityEventEntityId<TEntityId, TEntityEventImplementation, TEntityEvent> Type Parameters TEntity TEntityId TEntityEventImplementation TEntityEvent TEntityCreatedEvent TEntityEventIdGetterSetter Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.Publish(TEntityEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NestedEntity(IUtcTimeTimeSource, Action<TEntityEventImplementation>, IEventHandlerRegistrar<TEntityEvent>) protected NestedEntity(IUtcTimeTimeSource timeSource, Action<TEntityEventImplementation> raiseEventThroughParent, IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters timeSource IUtcTimeTimeSource raiseEventThroughParent Action<TEntityEventImplementation> appliersRegistrar IEventHandlerRegistrar<TEntityEvent> NestedEntity(TComponent) protected NestedEntity(TComponent parent) Parameters parent TComponent Methods CreateSelfManagingCollection(TComponent) public static Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager CreateSelfManagingCollection(TComponent parent) Parameters parent TComponent Returns Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Publish(TEntityEventImplementation) protected override void Publish(TEntityEventImplementation @event) Parameters event TEntityEventImplementation"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.SlavedNestedEntity-5.EntityCollectionManagerBase.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.SlavedNestedEntity-5.EntityCollectionManagerBase.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EntityCollectionManagerBase(IEventHandlerRegistrar<TEntityEvent>) protected EntityCollectionManagerBase(IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters appliersRegistrar IEventHandlerRegistrar<TEntityEvent> Properties Entities public IReadOnlyEntityCollection<TEntity, TEntityId> Entities { get; } Property Value IReadOnlyEntityCollection<TEntity, TEntityId>"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.SlavedNestedEntity-5.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.SlavedNestedEntity-5.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll An entity that is not created and removed through raising events. Instead it is automatically created and/or removed when another entity in the Aggregate object graph is added or removed. Inheritors must implement the add/remove behavior. Inheritors must ensure that the Id property is initialized correctly before any calls to RaiseEvent. Usually this is implemented within a nested class that inherits from Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TEntity, TEntityEventImplementation, TEntityEvent> where TEntity : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> where TEntityId : notnull where TEntityEventImplementation : TComponentEventImplementation, TEntityEvent where TEntityEvent : class, TComponentEvent where TEntityEventIdGetterSetter : IGetSetAggregateEntityEventEntityId<TEntityId, TEntityEventImplementation, TEntityEvent> Type Parameters TEntity TEntityId TEntityEventImplementation TEntityEvent TEntityEventIdGetterSetter Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.Publish(TEntityEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors SlavedNestedEntity(IUtcTimeTimeSource, Action<TEntityEventImplementation>, IEventHandlerRegistrar<TEntityEvent>) protected SlavedNestedEntity(IUtcTimeTimeSource timeSource, Action<TEntityEventImplementation> raiseEventThroughParent, IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters timeSource IUtcTimeTimeSource raiseEventThroughParent Action<TEntityEventImplementation> appliersRegistrar IEventHandlerRegistrar<TEntityEvent> SlavedNestedEntity(TComponent) protected SlavedNestedEntity(TComponent parent) Parameters parent TComponent Properties Id protected TEntityId Id { get; set; } Property Value TEntityId Methods Publish(TEntityEventImplementation) protected override void Publish(TEntityEventImplementation @event) Parameters event TEntityEventImplementation"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Component-3.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> where TComponent : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> where TComponentEventImplementation : TAggregateEventImplementation, TComponentEvent where TComponentEvent : class, TAggregateEvent Type Parameters TComponent TComponentEventImplementation TComponentEvent Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Component(TAggregate) protected Component(TAggregate aggregate) Parameters aggregate TAggregate Methods Publish(TComponentEventImplementation) protected virtual void Publish(TComponentEventImplementation @event) Parameters event TComponentEventImplementation RegisterEventAppliers() protected IEventHandlerRegistrar<TComponentEvent> RegisterEventAppliers() Returns IEventHandlerRegistrar<TComponentEvent> RegisterEventHandlers() protected IEventHandlerRegistrar<TComponentEvent> RegisterEventHandlers() Returns IEventHandlerRegistrar<TComponentEvent>"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Entity-6.CollectionManager.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Entity-6.CollectionManager.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.IdGetter Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.ManagedEntities Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.Entities Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.EntityCollectionManager<TAggregate, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.AddByPublishing<TCreationEvent>(TCreationEvent) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Entity-6.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.Entity-6.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll [UsedImplicitly(ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature)] public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> where TEntity : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> where TEntityId : notnull where TEntityEventImplementation : TAggregateEventImplementation, TEntityEvent where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEntityEventIdGetterSetter : IGetSetAggregateEntityEventEntityId<TEntityId, TEntityEventImplementation, TEntityEvent> Type Parameters TEntity TEntityId TEntityEventImplementation TEntityEvent TEntityCreatedEvent TEntityEventIdGetterSetter Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.Publish(TEntityEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Entity(TAggregate) protected Entity(TAggregate aggregate) Parameters aggregate TAggregate Properties Id public TEntityId Id { get; } Property Value TEntityId Methods CreateSelfManagingCollection(TAggregate) public static Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager CreateSelfManagingCollection(TAggregate parent) Parameters parent TAggregate Returns Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Publish(TEntityEventImplementation) protected override void Publish(TEntityEventImplementation @event) Parameters event TEntityEventImplementation"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.RemovableEntity-7.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.RemovableEntity-7.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public abstract class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> where TEntity : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> where TEntityId : notnull where TEntityEventImplementation : TAggregateEventImplementation, TEntityEvent where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEntityRemovedEvent : TEntityEvent where TEntityEventIdGetterSetter : IGetSetAggregateEntityEventEntityId<TEntityId, TEntityEventImplementation, TEntityEvent> Type Parameters TEntity TEntityId TEntityEventImplementation TEntityEvent TEntityCreatedEvent TEntityRemovedEvent TEntityEventIdGetterSetter Inheritance object Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> Inherited Members Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.Id Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.Publish(TEntityEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CreateSelfManagingCollection(TAggregate) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.Publish(TEntityEventImplementation) Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventAppliers() Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TEntity, TEntityEventImplementation, TEntityEvent>.RegisterEventHandlers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors RemovableEntity(TAggregate) protected RemovableEntity(TAggregate aggregate) Parameters aggregate TAggregate"
  },
  "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.Aggregate-5.html",
    "title": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> | Composable",
    "keywords": "Class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> : VersionedEntity<TAggregate>, IHasPersistentIdentity<Guid>, IEquatable<TAggregate>, IEventStored<TAggregateEvent>, IEventStored where TAggregate : Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> where TAggregateEventImplementation : AggregateEvent, TAggregateEvent where TAggregateEvent : class, IAggregateEvent where TWrapperEventImplementation : TWrapperEventInterface where TWrapperEventInterface : IAggregateEvent<TAggregateEvent> Type Parameters TAggregate TAggregateEventImplementation TAggregateEvent TWrapperEventImplementation TWrapperEventInterface Inheritance object Entity<TAggregate, Guid> Entity<TAggregate> VersionedEntity<TAggregate> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> Implements IHasPersistentIdentity<Guid> IEquatable<TAggregate> IEventStored<TAggregateEvent> IEventStored Derived Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> Inherited Members VersionedEntity<TAggregate>.Version Entity<TAggregate>.Equals(TAggregate) Entity<TAggregate>.Equals(object) Entity<TAggregate>.GetHashCode() Entity<TAggregate, Guid>.Id Entity<TAggregate, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<TAggregate, Guid>.GetIdBypassContractValidation() Entity<TAggregate, Guid>.Equals(TAggregate) Entity<TAggregate, Guid>.Equals(object) Entity<TAggregate, Guid>.GetHashCode() Entity<TAggregate, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Aggregate() [Obsolete(\"Only for infrastructure\", true)] protected Aggregate() Aggregate(IUtcTimeTimeSource) protected Aggregate(IUtcTimeTimeSource timeSource) Parameters timeSource IUtcTimeTimeSource Properties TimeSource protected IUtcTimeTimeSource TimeSource { get; } Property Value IUtcTimeTimeSource Methods AssertInvariantsAreMet() protected virtual void AssertInvariantsAreMet() Commit(Action<IReadOnlyList<IAggregateEvent>>) public void Commit(Action<IReadOnlyList<IAggregateEvent>> commitEvents) Parameters commitEvents Action<IReadOnlyList<IAggregateEvent>> Publish<TEvent>(TEvent) protected TEvent Publish<TEvent>(TEvent theEvent) where TEvent : TAggregateEventImplementation Parameters theEvent TEvent Returns TEvent Type Parameters TEvent RegisterEventAppliers() protected IEventHandlerRegistrar<TAggregateEvent> RegisterEventAppliers() Returns IEventHandlerRegistrar<TAggregateEvent> RegisterEventHandlers() protected IEventHandlerRegistrar<TAggregateEvent> RegisterEventHandlers() Returns IEventHandlerRegistrar<TAggregateEvent>"
  },
  "api/Composable.Persistence.EventStore.Aggregates.AllowPublicSettersAttribute.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.AllowPublicSettersAttribute.html",
    "title": "Class AllowPublicSettersAttribute | Composable",
    "keywords": "Class AllowPublicSettersAttribute Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Interface)] public sealed class AllowPublicSettersAttribute : Attribute Inheritance object Attribute AllowPublicSettersAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Aggregates.EntityCollection-2.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.EntityCollection-2.html",
    "title": "Class EntityCollection<TEntity, TEntityId> | Composable",
    "keywords": "Class EntityCollection<TEntity, TEntityId> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public class EntityCollection<TEntity, TEntityId> : IReadOnlyEntityCollection<TEntity, TEntityId>, IEnumerable<TEntity>, IEnumerable where TEntityId : notnull Type Parameters TEntity TEntityId Inheritance object EntityCollection<TEntity, TEntityId> Implements IReadOnlyEntityCollection<TEntity, TEntityId> IEnumerable<TEntity> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ConcurrentCircularReader.ToConcurrentCircularReader<T>(IEnumerable<T>) EnumerableCE.Append<T>(IEnumerable<T>, params T[]) EnumerableCE.ChopIntoSizesOf<T>(IEnumerable<T>, int) EnumerableCE.Flatten<T, TChild>(IEnumerable<T>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T, int>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableCE.ForEach<TSource, TReturn>(IEnumerable<TSource>, Func<TSource, TReturn>) EnumerableCE.None<T>(IEnumerable<T>) EnumerableCE.None<T>(IEnumerable<T>, Func<T, bool>) ObjectCE.ToStringNotNull(object) Properties InCreationOrder public IReadOnlyList<TEntity> InCreationOrder { get; } Property Value IReadOnlyList<TEntity> this[TEntityId] public TEntity this[TEntityId id] { get; } Parameters id TEntityId Property Value TEntity Methods Exists(TEntityId) public bool Exists(TEntityId id) Parameters id TEntityId Returns bool Get(TEntityId) public TEntity Get(TEntityId id) Parameters id TEntityId Returns TEntity GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<TEntity> GetEnumerator() Returns IEnumerator<TEntity> An enumerator that can be used to iterate through the collection. TryGet(TEntityId, out TEntity) public bool TryGet(TEntityId id, out TEntity component) Parameters id TEntityId component TEntity Returns bool"
  },
  "api/Composable.Persistence.EventStore.Aggregates.IGetAggregateEntityEventEntityId-2.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.IGetAggregateEntityEventEntityId-2.html",
    "title": "Interface IGetAggregateEntityEventEntityId<TEvent, TEntityId> | Composable",
    "keywords": "Interface IGetAggregateEntityEventEntityId<TEvent, TEntityId> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public interface IGetAggregateEntityEventEntityId<in TEvent, out TEntityId> Type Parameters TEvent TEntityId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetId(TEvent) TEntityId GetId(TEvent @event) Parameters event TEvent Returns TEntityId"
  },
  "api/Composable.Persistence.EventStore.Aggregates.IGetSetAggregateEntityEventEntityId-3.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.IGetSetAggregateEntityEventEntityId-3.html",
    "title": "Interface IGetSetAggregateEntityEventEntityId<TEntityId, TEventImplementation, TEvent> | Composable",
    "keywords": "Interface IGetSetAggregateEntityEventEntityId<TEntityId, TEventImplementation, TEvent> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public interface IGetSetAggregateEntityEventEntityId<TEntityId, in TEventImplementation, in TEvent> : IGetAggregateEntityEventEntityId<TEvent, TEntityId> Type Parameters TEntityId TEventImplementation TEvent Inherited Members IGetAggregateEntityEventEntityId<TEvent, TEntityId>.GetId(TEvent) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods SetEntityId(TEventImplementation, TEntityId) void SetEntityId(TEventImplementation @event, TEntityId id) Parameters event TEventImplementation id TEntityId"
  },
  "api/Composable.Persistence.EventStore.Aggregates.IReadOnlyEntityCollection-2.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.IReadOnlyEntityCollection-2.html",
    "title": "Interface IReadOnlyEntityCollection<TEntity, TEntityId> | Composable",
    "keywords": "Interface IReadOnlyEntityCollection<TEntity, TEntityId> Namespace Composable.Persistence.EventStore.Aggregates Assembly Composable.CQRS.dll public interface IReadOnlyEntityCollection<TEntity, in TEntityId> : IEnumerable<TEntity>, IEnumerable Type Parameters TEntity TEntityId Inherited Members IEnumerable<TEntity>.GetEnumerator() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ConcurrentCircularReader.ToConcurrentCircularReader<T>(IEnumerable<T>) EnumerableCE.Append<T>(IEnumerable<T>, params T[]) EnumerableCE.ChopIntoSizesOf<T>(IEnumerable<T>, int) EnumerableCE.Flatten<T, TChild>(IEnumerable<T>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T, int>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableCE.ForEach<TSource, TReturn>(IEnumerable<TSource>, Func<TSource, TReturn>) EnumerableCE.None<T>(IEnumerable<T>) EnumerableCE.None<T>(IEnumerable<T>, Func<T, bool>) ObjectCE.ToStringNotNull(object) Properties InCreationOrder IReadOnlyList<TEntity> InCreationOrder { get; } Property Value IReadOnlyList<TEntity> this[TEntityId] TEntity this[TEntityId id] { get; } Parameters id TEntityId Property Value TEntity Methods Exists(TEntityId) bool Exists(TEntityId id) Parameters id TEntityId Returns bool Get(TEntityId) TEntity Get(TEntityId id) Parameters id TEntityId Returns TEntity TryGet(TEntityId, out TEntity) bool TryGet(TEntityId id, out TEntity component) Parameters id TEntityId component TEntity Returns bool"
  },
  "api/Composable.Persistence.EventStore.Aggregates.html": {
    "href": "api/Composable.Persistence.EventStore.Aggregates.html",
    "title": "Namespace Composable.Persistence.EventStore.Aggregates | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore.Aggregates Classes Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.EntityCollectionManager<TParent, TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEventImplementation, TNestedComponentEvent> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter> An entity that is not created and removed through raising events. Instead it is automatically created and/or removed when another entity in the Aggregate object graph is added or removed. Inheritors must implement the add/remove behavior. Inheritors must ensure that the Id property is initialized correctly before any calls to RaiseEvent. Usually this is implemented within a nested class that inherits from Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Component<TComponent, TComponentEventImplementation, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityEventIdGetterSetter>.EntityCollectionManagerBase Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.Entity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter>.CollectionManager Aggregate<TAggregate, TAggregateEventImplementation, TAggregateEvent, TWrapperEventImplementation, TWrapperEventInterface>.RemovableEntity<TEntity, TEntityId, TEntityEventImplementation, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEntityEventIdGetterSetter> AllowPublicSettersAttribute EntityCollection<TEntity, TEntityId> Interfaces IGetAggregateEntityEventEntityId<TEvent, TEntityId> IGetSetAggregateEntityEventEntityId<TEntityId, TEventImplementation, TEvent> IReadOnlyEntityCollection<TEntity, TEntityId>"
  },
  "api/Composable.Persistence.EventStore.AttemptToSaveAlreadyPersistedAggregateException.html": {
    "href": "api/Composable.Persistence.EventStore.AttemptToSaveAlreadyPersistedAggregateException.html",
    "title": "Class AttemptToSaveAlreadyPersistedAggregateException | Composable",
    "keywords": "Class AttemptToSaveAlreadyPersistedAggregateException Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class AttemptToSaveAlreadyPersistedAggregateException : Exception, ISerializable Inheritance object Exception AttemptToSaveAlreadyPersistedAggregateException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AttemptToSaveAlreadyPersistedAggregateException(IEventStored) public AttemptToSaveAlreadyPersistedAggregateException(IEventStored aggregate) Parameters aggregate IEventStored"
  },
  "api/Composable.Persistence.EventStore.AttemptToSaveEmptyAggregateException.html": {
    "href": "api/Composable.Persistence.EventStore.AttemptToSaveEmptyAggregateException.html",
    "title": "Class AttemptToSaveEmptyAggregateException | Composable",
    "keywords": "Class AttemptToSaveEmptyAggregateException Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class AttemptToSaveEmptyAggregateException : Exception, ISerializable Inheritance object Exception AttemptToSaveEmptyAggregateException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AttemptToSaveEmptyAggregateException(object) public AttemptToSaveEmptyAggregateException(object value) Parameters value object"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.Command.SaveAggregate-1.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.Command.SaveAggregate-1.html",
    "title": "Class EventStoreApi.Command.SaveAggregate<TAggregate> | Composable",
    "keywords": "Class EventStoreApi.Command.SaveAggregate<TAggregate> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.Command.SaveAggregate<TAggregate> : MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand, IStrictlyLocalCommand, ICommand, IMustBeSentTransactionally, IMessage, IStrictlyLocalMessage where TAggregate : class, IEventStored Type Parameters TAggregate Inheritance object MessageTypes.StrictlyLocal.Commands.StrictlyLocalCommand EventStoreApi.Command.SaveAggregate<TAggregate> Implements IStrictlyLocalCommand ICommand IMustBeSentTransactionally IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.Command.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.Command.html",
    "title": "Class EventStoreApi.Command | Composable",
    "keywords": "Class EventStoreApi.Command Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.Command Inheritance object EventStoreApi.Command Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Save<TAggregate>(TAggregate) public EventStoreApi.Command.SaveAggregate<TAggregate> Save<TAggregate>(TAggregate account) where TAggregate : class, IEventStored Parameters account TAggregate Returns EventStoreApi.Command.SaveAggregate<TAggregate> Type Parameters TAggregate"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.AggregateLink-1.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.AggregateLink-1.html",
    "title": "Class EventStoreApi.QueryApi.AggregateLink<TAggregate> | Composable",
    "keywords": "Class EventStoreApi.QueryApi.AggregateLink<TAggregate> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.QueryApi.AggregateLink<TAggregate> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.AggregateLink<TAggregate>, TAggregate>, IStrictlyLocalQuery<EventStoreApi.QueryApi.AggregateLink<TAggregate>, TAggregate>, IQuery<TAggregate>, IHasReturnValue<TAggregate>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TAggregate : class, IEventStored Type Parameters TAggregate Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.AggregateLink<TAggregate>, TAggregate> EventStoreApi.QueryApi.AggregateLink<TAggregate> Implements IStrictlyLocalQuery<EventStoreApi.QueryApi.AggregateLink<TAggregate>, TAggregate> IQuery<TAggregate> IHasReturnValue<TAggregate> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetAggregateHistory-1.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetAggregateHistory-1.html",
    "title": "Class EventStoreApi.QueryApi.GetAggregateHistory<TEvent> | Composable",
    "keywords": "Class EventStoreApi.QueryApi.GetAggregateHistory<TEvent> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.QueryApi.GetAggregateHistory<TEvent> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetAggregateHistory<TEvent>, IEnumerable<TEvent>>, IStrictlyLocalQuery<EventStoreApi.QueryApi.GetAggregateHistory<TEvent>, IEnumerable<TEvent>>, IQuery<IEnumerable<TEvent>>, IHasReturnValue<IEnumerable<TEvent>>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TEvent : IAggregateEvent Type Parameters TEvent Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetAggregateHistory<TEvent>, IEnumerable<TEvent>> EventStoreApi.QueryApi.GetAggregateHistory<TEvent> Implements IStrictlyLocalQuery<EventStoreApi.QueryApi.GetAggregateHistory<TEvent>, IEnumerable<TEvent>> IQuery<IEnumerable<TEvent>> IHasReturnValue<IEnumerable<TEvent>> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate-1.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate-1.html",
    "title": "Class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> | Composable",
    "keywords": "Class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate>, TAggregate>, IStrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate>, TAggregate>, IQuery<TAggregate>, IHasReturnValue<TAggregate>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TAggregate : class, IEventStored Type Parameters TAggregate Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate>, TAggregate> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> Implements IStrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate>, TAggregate> IQuery<TAggregate> IHasReturnValue<TAggregate> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion-1.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion-1.html",
    "title": "Class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> | Composable",
    "keywords": "Class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate>, TAggregate>, IStrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate>, TAggregate>, IQuery<TAggregate>, IHasReturnValue<TAggregate>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage where TAggregate : class, IEventStored Type Parameters TAggregate Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate>, TAggregate> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> Implements IStrictlyLocalQuery<EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate>, TAggregate> IQuery<TAggregate> IHasReturnValue<TAggregate> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.QueryApi.html",
    "title": "Class EventStoreApi.QueryApi | Composable",
    "keywords": "Class EventStoreApi.QueryApi Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi.QueryApi Inheritance object EventStoreApi.QueryApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetForUpdate<TAggregate>(Guid) public EventStoreApi.QueryApi.AggregateLink<TAggregate> GetForUpdate<TAggregate>(Guid id) where TAggregate : class, IEventStored Parameters id Guid Returns EventStoreApi.QueryApi.AggregateLink<TAggregate> Type Parameters TAggregate GetHistory<TEvent>(Guid) public EventStoreApi.QueryApi.GetAggregateHistory<TEvent> GetHistory<TEvent>(Guid id) where TEvent : IAggregateEvent Parameters id Guid Returns EventStoreApi.QueryApi.GetAggregateHistory<TEvent> Type Parameters TEvent GetReadOnlyCopyOfVersion<TAggregate>(Guid, int) public EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> GetReadOnlyCopyOfVersion<TAggregate>(Guid id, int version) where TAggregate : class, IEventStored Parameters id Guid version int Returns EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> Type Parameters TAggregate GetReadOnlyCopy<TAggregate>(Guid) public EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> GetReadOnlyCopy<TAggregate>(Guid id) where TAggregate : class, IEventStored Parameters id Guid Returns EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> Type Parameters TAggregate"
  },
  "api/Composable.Persistence.EventStore.EventStoreApi.html": {
    "href": "api/Composable.Persistence.EventStore.EventStoreApi.html",
    "title": "Class EventStoreApi | Composable",
    "keywords": "Class EventStoreApi Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class EventStoreApi Inheritance object EventStoreApi Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Commands public EventStoreApi.Command Commands { get; } Property Value EventStoreApi.Command Queries public EventStoreApi.QueryApi Queries { get; } Property Value EventStoreApi.QueryApi Methods MapTypes(ITypeMappingRegistar) public static void MapTypes(ITypeMappingRegistar typeMapper) Parameters typeMapper ITypeMappingRegistar"
  },
  "api/Composable.Persistence.EventStore.IAggregateCreatedEvent.html": {
    "href": "api/Composable.Persistence.EventStore.IAggregateCreatedEvent.html",
    "title": "Interface IAggregateCreatedEvent | Composable",
    "keywords": "Interface IAggregateCreatedEvent Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll Marks an event as meaning that the aggregate was created. Can be used by clients to perform logic that should happen whenever an aggregate is created. Is used in several places in the infrastructure and the infrastructure will fail in various ways if this events is not inherited correctly. For example: Aggregate: Id is only set when such an event is raised. It is only ever possibly to raise 1 such event. More than one will cause an exception SingleAggregateQueryModelUpdater: Creates the initial query model when it receives such an event public interface IAggregateCreatedEvent : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.IAggregateDeletedEvent.html": {
    "href": "api/Composable.Persistence.EventStore.IAggregateDeletedEvent.html",
    "title": "Interface IAggregateDeletedEvent | Composable",
    "keywords": "Interface IAggregateDeletedEvent Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IAggregateDeletedEvent : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.IAggregateEvent-1.html": {
    "href": "api/Composable.Persistence.EventStore.IAggregateEvent-1.html",
    "title": "Interface IAggregateEvent<TEventInterface> | Composable",
    "keywords": "Interface IAggregateEvent<TEventInterface> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IAggregateEvent<out TEventInterface> : IExactlyOnceWrapperEvent<TEventInterface>, IWrapperEvent<TEventInterface>, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage where TEventInterface : IAggregateEvent Type Parameters TEventInterface Inherited Members IWrapperEvent<TEventInterface>.Event IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.IAggregateEvent.html": {
    "href": "api/Composable.Persistence.EventStore.IAggregateEvent.html",
    "title": "Interface IAggregateEvent | Composable",
    "keywords": "Interface IAggregateEvent Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IAggregateEvent : IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties AggregateId Guid AggregateId { get; } Property Value Guid AggregateVersion int AggregateVersion { get; } Property Value int UtcTimeStamp DateTime UtcTimeStamp { get; } Property Value DateTime"
  },
  "api/Composable.Persistence.EventStore.IEventStoreReader.html": {
    "href": "api/Composable.Persistence.EventStore.IEventStoreReader.html",
    "title": "Interface IEventStoreReader | Composable",
    "keywords": "Interface IEventStoreReader Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IEventStoreReader Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetHistory(Guid) IReadOnlyList<IAggregateEvent> GetHistory(Guid aggregateId) Parameters aggregateId Guid Returns IReadOnlyList<IAggregateEvent> GetReadonlyCopyOfVersion<TAggregate>(Guid, int) Loads a specific version of the aggregate. This instance is NOT tracked for changes. No changes to this entity vill be persisted. TAggregate GetReadonlyCopyOfVersion<TAggregate>(Guid aggregateId, int version) where TAggregate : class, IEventStored Parameters aggregateId Guid version int Returns TAggregate Type Parameters TAggregate GetReadonlyCopy<TAggregate>(Guid) TAggregate GetReadonlyCopy<TAggregate>(Guid aggregateId) where TAggregate : class, IEventStored Parameters aggregateId Guid Returns TAggregate Type Parameters TAggregate"
  },
  "api/Composable.Persistence.EventStore.IEventStoreUpdater.html": {
    "href": "api/Composable.Persistence.EventStore.IEventStoreUpdater.html",
    "title": "Interface IEventStoreUpdater | Composable",
    "keywords": "Interface IEventStoreUpdater Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IEventStoreUpdater : IDisposable Inherited Members IDisposable.Dispose() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Delete(Guid) Deletes all traces of an aggregate from the store. void Delete(Guid aggregateId) Parameters aggregateId Guid Get<TAggregate>(Guid) Loads an aggregate and tracks it for changes. TAggregate Get<TAggregate>(Guid aggregateId) where TAggregate : class, IEventStored Parameters aggregateId Guid Returns TAggregate Type Parameters TAggregate Save<TAggregate>(TAggregate) Causes the store to start tracking the aggregate. void Save<TAggregate>(TAggregate aggregate) where TAggregate : class, IEventStored Parameters aggregate TAggregate Type Parameters TAggregate TryGet<TAggregate>(Guid, out TAggregate) Tries to get the specified instance. Returns false and sets the result to null if the aggregate did not exist. bool TryGet<TAggregate>(Guid aggregateId, out TAggregate result) where TAggregate : class, IEventStored Parameters aggregateId Guid result TAggregate Returns bool Type Parameters TAggregate"
  },
  "api/Composable.Persistence.EventStore.IEventStored-1.html": {
    "href": "api/Composable.Persistence.EventStore.IEventStored-1.html",
    "title": "Interface IEventStored<TEvent> | Composable",
    "keywords": "Interface IEventStored<TEvent> Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IEventStored<TEvent> : IEventStored where TEvent : IAggregateEvent Type Parameters TEvent Inherited Members IEventStored.Id IEventStored.Version IEventStored.Commit(Action<IReadOnlyList<IAggregateEvent>>) IEventStored.LoadFromHistory(IEnumerable<IAggregateEvent>) IEventStored.SetTimeSource(IUtcTimeTimeSource) IEventStored.EventStream Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.IEventStored.html": {
    "href": "api/Composable.Persistence.EventStore.IEventStored.html",
    "title": "Interface IEventStored | Composable",
    "keywords": "Interface IEventStored Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public interface IEventStored Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties EventStream IObservable<IAggregateEvent> EventStream { get; } Property Value IObservable<IAggregateEvent> Id Guid Id { get; } Property Value Guid Version int Version { get; } Property Value int Methods Commit(Action<IReadOnlyList<IAggregateEvent>>) void Commit(Action<IReadOnlyList<IAggregateEvent>> commitEvents) Parameters commitEvents Action<IReadOnlyList<IAggregateEvent>> LoadFromHistory(IEnumerable<IAggregateEvent>) void LoadFromHistory(IEnumerable<IAggregateEvent> history) Parameters history IEnumerable<IAggregateEvent> SetTimeSource(IUtcTimeTimeSource) void SetTimeSource(IUtcTimeTimeSource timeSource) Parameters timeSource IUtcTimeTimeSource"
  },
  "api/Composable.Persistence.EventStore.InvalidHistoryException.html": {
    "href": "api/Composable.Persistence.EventStore.InvalidHistoryException.html",
    "title": "Class InvalidHistoryException | Composable",
    "keywords": "Class InvalidHistoryException Namespace Composable.Persistence.EventStore Assembly Composable.CQRS.dll public class InvalidHistoryException : Exception, ISerializable Inheritance object Exception InvalidHistoryException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors InvalidHistoryException(Guid) public InvalidHistoryException(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Persistence.EventStore.Query.Models.Generators.IQueryModelGenerator.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.Generators.IQueryModelGenerator.html",
    "title": "Interface IQueryModelGenerator | Composable",
    "keywords": "Interface IQueryModelGenerator Namespace Composable.Persistence.EventStore.Query.Models.Generators Assembly Composable.CQRS.dll public interface IQueryModelGenerator Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Query.Models.Generators.SingleAggregateQueryModelGenerator-4.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.Generators.SingleAggregateQueryModelGenerator-4.html",
    "title": "Class SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> | Composable",
    "keywords": "Class SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> Namespace Composable.Persistence.EventStore.Query.Models.Generators Assembly Composable.CQRS.dll [UsedImplicitly(ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature)] public abstract class SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> : IQueryModelGenerator where TImplementer : SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> where TViewModel : class, ISingleAggregateQueryModel where TEvent : class, IAggregateEvent where TSession : IEventStoreReader Type Parameters TImplementer TViewModel TEvent TSession Inheritance object SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> Implements IQueryModelGenerator Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors SingleAggregateQueryModelGenerator(TSession) protected SingleAggregateQueryModelGenerator(TSession session) Parameters session TSession Properties Model protected TViewModel? Model { get; } Property Value TViewModel Methods RegisterHandlers() Registers handlers for the incoming events. All matching handlers will be called in the order they were registered. protected IEventHandlerRegistrar<TEvent> RegisterHandlers() Returns IEventHandlerRegistrar<TEvent> TryGenerate(Guid) public Option<TViewModel> TryGenerate(Guid id) Parameters id Guid Returns Option<TViewModel> TryGenerate(Guid, int) public Option<TViewModel> TryGenerate(Guid id, int version) Parameters id Guid version int Returns Option<TViewModel>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.Generators.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.Generators.html",
    "title": "Namespace Composable.Persistence.EventStore.Query.Models.Generators | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore.Query.Models.Generators Classes SingleAggregateQueryModelGenerator<TImplementer, TViewModel, TEvent, TSession> Interfaces IQueryModelGenerator"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.IReadonlyQueryModelEntityCollection-2.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.IReadonlyQueryModelEntityCollection-2.html",
    "title": "Interface IReadonlyQueryModelEntityCollection<TEntity, TEntityId> | Composable",
    "keywords": "Interface IReadonlyQueryModelEntityCollection<TEntity, TEntityId> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public interface IReadonlyQueryModelEntityCollection<TEntity, in TEntityId> : IEnumerable<TEntity>, IEnumerable Type Parameters TEntity TEntityId Inherited Members IEnumerable<TEntity>.GetEnumerator() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ConcurrentCircularReader.ToConcurrentCircularReader<T>(IEnumerable<T>) EnumerableCE.Append<T>(IEnumerable<T>, params T[]) EnumerableCE.ChopIntoSizesOf<T>(IEnumerable<T>, int) EnumerableCE.Flatten<T, TChild>(IEnumerable<T>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T, int>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableCE.ForEach<TSource, TReturn>(IEnumerable<TSource>, Func<TSource, TReturn>) EnumerableCE.None<T>(IEnumerable<T>) EnumerableCE.None<T>(IEnumerable<T>, Func<T, bool>) ObjectCE.ToStringNotNull(object) Properties InCreationOrder IReadOnlyList<TEntity> InCreationOrder { get; } Property Value IReadOnlyList<TEntity> this[TEntityId] TEntity this[TEntityId id] { get; } Parameters id TEntityId Property Value TEntity Methods Exists(TEntityId) bool Exists(TEntityId id) Parameters id TEntityId Returns bool Get(TEntityId) TEntity Get(TEntityId id) Parameters id TEntityId Returns TEntity TryGet(TEntityId, out TEntity) bool TryGet(TEntityId id, out TEntity component) Parameters id TEntityId component TEntity Returns bool"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.QueryModelEntityCollection-2.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.QueryModelEntityCollection-2.html",
    "title": "Class QueryModelEntityCollection<TEntity, TEntityId> | Composable",
    "keywords": "Class QueryModelEntityCollection<TEntity, TEntityId> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public class QueryModelEntityCollection<TEntity, TEntityId> : IReadonlyQueryModelEntityCollection<TEntity, TEntityId>, IEnumerable<TEntity>, IEnumerable where TEntityId : notnull Type Parameters TEntity TEntityId Inheritance object QueryModelEntityCollection<TEntity, TEntityId> Implements IReadonlyQueryModelEntityCollection<TEntity, TEntityId> IEnumerable<TEntity> IEnumerable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ConcurrentCircularReader.ToConcurrentCircularReader<T>(IEnumerable<T>) EnumerableCE.Append<T>(IEnumerable<T>, params T[]) EnumerableCE.ChopIntoSizesOf<T>(IEnumerable<T>, int) EnumerableCE.Flatten<T, TChild>(IEnumerable<T>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T, int>) EnumerableCE.ForEach<T>(IEnumerable<T>, Action<T>) EnumerableCE.ForEach<TSource, TReturn>(IEnumerable<TSource>, Func<TSource, TReturn>) EnumerableCE.None<T>(IEnumerable<T>) EnumerableCE.None<T>(IEnumerable<T>, Func<T, bool>) ObjectCE.ToStringNotNull(object) Properties InCreationOrder public IReadOnlyList<TEntity> InCreationOrder { get; } Property Value IReadOnlyList<TEntity> this[TEntityId] public TEntity this[TEntityId id] { get; } Parameters id TEntityId Property Value TEntity Methods Exists(TEntityId) public bool Exists(TEntityId id) Parameters id TEntityId Returns bool Get(TEntityId) public TEntity Get(TEntityId id) Parameters id TEntityId Returns TEntity GetEnumerator() Returns an enumerator that iterates through the collection. public IEnumerator<TEntity> GetEnumerator() Returns IEnumerator<TEntity> An enumerator that can be used to iterate through the collection. TryGet(TEntityId, out TEntity) public bool TryGet(TEntityId id, out TEntity component) Parameters id TEntityId component TEntity Returns bool"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedComponent-2.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedComponent-2.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll [UsedImplicitly(ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature)] public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TNestedComponent, TNestedComponentEvent> where TNestedComponent : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> where TNestedComponentEvent : class, TComponentEvent Type Parameters TNestedComponent TNestedComponentEvent Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TNestedComponent, TNestedComponentEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> Derived SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TNestedComponent, TNestedComponentEvent>.RegisterEventAppliers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NestedComponent(IEventHandlerRegistrar<TNestedComponentEvent>, bool) protected NestedComponent(IEventHandlerRegistrar<TNestedComponentEvent> appliersRegistrar, bool registerEventAppliers) Parameters appliersRegistrar IEventHandlerRegistrar<TNestedComponentEvent> registerEventAppliers bool NestedComponent(TComponent) protected NestedComponent(TComponent parent) Parameters parent TComponent"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedEntity-5.CollectionManager.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedEntity-5.CollectionManager.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.IdGetter SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.ManagedEntities SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TComponent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.Entities object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedEntity-5.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.NestedEntity-5.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TEntity, TEntityEvent> where TEntity : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> where TEntityId : notnull where TEntityEvent : class, TComponentEvent where TEntityCreatedEvent : TEntityEvent where TEventEntityIdGetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TEntity TEntityId TEntityEvent TEntityCreatedEvent TEventEntityIdGetter Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.RegisterEventAppliers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors NestedEntity(IEventHandlerRegistrar<TEntityEvent>) protected NestedEntity(IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters appliersRegistrar IEventHandlerRegistrar<TEntityEvent> NestedEntity(TComponent) protected NestedEntity(TComponent parent) Parameters parent TComponent Methods CreateSelfManagingCollection(TComponent) public static SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager CreateSelfManagingCollection(TComponent parent) Parameters parent TComponent Returns SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.QueryModelEntityCollectionManager-6.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.QueryModelEntityCollectionManager-6.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.QueryModelEntityCollectionManager<TParent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.QueryModelEntityCollectionManager<TParent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.QueryModelEntityCollectionManager<TParent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> where TEntity : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> where TEntityId : notnull where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEntityEventIdGetterSetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TParent TEntity TEntityId TEntityEvent TEntityCreatedEvent TEntityEventIdGetterSetter Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.QueryModelEntityCollectionManager<TParent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> Derived SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors QueryModelEntityCollectionManager(TParent, IEventHandlerRegistrar<TEntityEvent>) protected QueryModelEntityCollectionManager(TParent parent, IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters parent TParent appliersRegistrar IEventHandlerRegistrar<TEntityEvent> Fields IdGetter protected static readonly TEntityEventIdGetterSetter IdGetter Field Value TEntityEventIdGetterSetter Properties Entities public IReadonlyQueryModelEntityCollection<TEntity, TEntityId> Entities { get; } Property Value IReadonlyQueryModelEntityCollection<TEntity, TEntityId> ManagedEntities protected QueryModelEntityCollection<TEntity, TEntityId> ManagedEntities { get; } Property Value QueryModelEntityCollection<TEntity, TEntityId>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.SlavedNestedEntity-4.EntityCollectionManagerBase.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.SlavedNestedEntity-4.EntityCollectionManagerBase.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EntityCollectionManagerBase(IEventHandlerRegistrar<TEntityEvent>) protected EntityCollectionManagerBase(IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters appliersRegistrar IEventHandlerRegistrar<TEntityEvent> Properties Entities public IReadonlyQueryModelEntityCollection<TEntity, TEntityId> Entities { get; } Property Value IReadonlyQueryModelEntityCollection<TEntity, TEntityId>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.SlavedNestedEntity-4.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.SlavedNestedEntity-4.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll An entity that is not created and removed through raising events. Instead it is automatically created and/or removed when another entity in the Aggregate object graph is added or removed. Inheritors must implement the add/remove behavior. Inheritors must ensure that the Id property is initialized. Usually this is implemented within a nested class that inherits from SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TEntity, TEntityEvent> where TEntity : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> where TEntityId : notnull where TEntityEvent : class, TComponentEvent where TEventEntityIdGetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TEntity TEntityId TEntityEvent TEventEntityIdGetter Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.RegisterEventAppliers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors SlavedNestedEntity(IEventHandlerRegistrar<TEntityEvent>) protected SlavedNestedEntity(IEventHandlerRegistrar<TEntityEvent> appliersRegistrar) Parameters appliersRegistrar IEventHandlerRegistrar<TEntityEvent> SlavedNestedEntity(TComponent) protected SlavedNestedEntity(TComponent parent) Parameters parent TComponent Properties Id protected TEntityId Id { get; set; } Property Value TEntityId"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Component-2.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> where TComponent : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> where TComponentEvent : class, TAggregateEvent Type Parameters TComponent TComponentEvent Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> Derived SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Component(TQueryModel) protected Component(TQueryModel queryModel) Parameters queryModel TQueryModel Methods RegisterEventAppliers() protected IEventHandlerRegistrar<TComponentEvent> RegisterEventAppliers() Returns IEventHandlerRegistrar<TComponentEvent>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-5.CollectionManager.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-5.CollectionManager.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TQueryModel, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TQueryModel, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TQueryModel, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.IdGetter SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TQueryModel, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.ManagedEntities SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.QueryModelEntityCollectionManager<TQueryModel, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.Entities object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-5.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-5.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll [UsedImplicitly(ImplicitUseKindFlags.InstantiatedWithFixedConstructorSignature)] public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> where TEntity : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> where TEntityId : notnull where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEventEntityIdGetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TEntity TEntityId TEntityEvent TEntityCreatedEvent TEventEntityIdGetter Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> Derived SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.RegisterEventAppliers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Entity(TQueryModel) protected Entity(TQueryModel queryModel) Parameters queryModel TQueryModel Properties Id public TEntityId Id { get; } Property Value TEntityId Methods CreateSelfManagingCollection(TQueryModel) public static SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager CreateSelfManagingCollection(TQueryModel parent) Parameters parent TQueryModel Returns SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-6.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.Entity-6.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> where TEntity : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> where TEntityId : notnull where TEntityEvent : class, TAggregateEvent where TEntityCreatedEvent : TEntityEvent where TEntityRemovedEvent : TEntityEvent where TEventEntityIdGetter : IGetAggregateEntityEventEntityId<TEntityEvent, TEntityId> Type Parameters TEntity TEntityId TEntityEvent TEntityCreatedEvent TEntityRemovedEvent TEventEntityIdGetter Inheritance object SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> Inherited Members SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.Id SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CreateSelfManagingCollection(TQueryModel) SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TEntity, TEntityEvent>.RegisterEventAppliers() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Entity(TQueryModel) protected Entity(TQueryModel queryModel) Parameters queryModel TQueryModel"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.SelfGeneratingQueryModel-2.html",
    "title": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> | Composable",
    "keywords": "Class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Assembly Composable.CQRS.dll public abstract class SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> : VersionedEntity<TQueryModel>, IHasPersistentIdentity<Guid>, IEquatable<TQueryModel> where TQueryModel : SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> where TAggregateEvent : class, IAggregateEvent Type Parameters TQueryModel TAggregateEvent Inheritance object Entity<TQueryModel, Guid> Entity<TQueryModel> VersionedEntity<TQueryModel> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> Implements IHasPersistentIdentity<Guid> IEquatable<TQueryModel> Inherited Members VersionedEntity<TQueryModel>.Version Entity<TQueryModel>.Equals(TQueryModel) Entity<TQueryModel>.Equals(object) Entity<TQueryModel>.GetHashCode() Entity<TQueryModel, Guid>.Id Entity<TQueryModel, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<TQueryModel, Guid>.GetIdBypassContractValidation() Entity<TQueryModel, Guid>.Equals(TQueryModel) Entity<TQueryModel, Guid>.Equals(object) Entity<TQueryModel, Guid>.GetHashCode() Entity<TQueryModel, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors SelfGeneratingQueryModel() protected SelfGeneratingQueryModel() Methods ApplyEvent(TAggregateEvent) public void ApplyEvent(TAggregateEvent theEvent) Parameters theEvent TAggregateEvent AssertInvariantsAreMet() protected virtual void AssertInvariantsAreMet() HandlesEvent(TAggregateEvent) public bool HandlesEvent(TAggregateEvent @event) Parameters event TAggregateEvent Returns bool HandlesEvent<THandled>() public bool HandlesEvent<THandled>() Returns bool Type Parameters THandled LoadFromHistory(IEnumerable<IAggregateEvent>) public void LoadFromHistory(IEnumerable<IAggregateEvent> history) Parameters history IEnumerable<IAggregateEvent> RegisterEventAppliers() protected IEventHandlerRegistrar<TAggregateEvent> RegisterEventAppliers() Returns IEventHandlerRegistrar<TAggregateEvent>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels.html",
    "title": "Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels Classes QueryModelEntityCollection<TEntity, TEntityId> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedComponent<TNestedComponent, TNestedComponentEvent> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.NestedEntity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.QueryModelEntityCollectionManager<TParent, TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityEventIdGetterSetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter> An entity that is not created and removed through raising events. Instead it is automatically created and/or removed when another entity in the Aggregate object graph is added or removed. Inheritors must implement the add/remove behavior. Inheritors must ensure that the Id property is initialized. Usually this is implemented within a nested class that inherits from SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Component<TComponent, TComponentEvent>.SlavedNestedEntity<TEntity, TEntityId, TEntityEvent, TEventEntityIdGetter>.EntityCollectionManagerBase SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter> SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEventEntityIdGetter>.CollectionManager SelfGeneratingQueryModel<TQueryModel, TAggregateEvent>.Entity<TEntity, TEntityId, TEntityEvent, TEntityCreatedEvent, TEntityRemovedEvent, TEventEntityIdGetter> Interfaces IReadonlyQueryModelEntityCollection<TEntity, TEntityId>"
  },
  "api/Composable.Persistence.EventStore.Query.Models.html": {
    "href": "api/Composable.Persistence.EventStore.Query.Models.html",
    "title": "Namespace Composable.Persistence.EventStore.Query.Models | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore.Query.Models Namespaces Composable.Persistence.EventStore.Query.Models.Generators Composable.Persistence.EventStore.Query.Models.SelfGeneratingQueryModels"
  },
  "api/Composable.Persistence.EventStore.Refactoring.Migrations.IEventMigration.html": {
    "href": "api/Composable.Persistence.EventStore.Refactoring.Migrations.IEventMigration.html",
    "title": "Interface IEventMigration | Composable",
    "keywords": "Interface IEventMigration Namespace Composable.Persistence.EventStore.Refactoring.Migrations Assembly Composable.CQRS.dll Defines an identity for migration of events into other events. Creates public interface IEventMigration Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Description string Description { get; } Property Value string Done bool Done { get; } Property Value bool Id Guid Id { get; } Property Value Guid MigratedAggregateEventHierarchyRootInterface The event interface that is the root of the event hierarchy for the aggregate whose events this migration modifies Type MigratedAggregateEventHierarchyRootInterface { get; } Property Value Type Name string Name { get; } Property Value string Methods CreateSingleAggregateInstanceHandlingMigrator() ISingleAggregateInstanceHandlingEventMigrator CreateSingleAggregateInstanceHandlingMigrator() Returns ISingleAggregateInstanceHandlingEventMigrator"
  },
  "api/Composable.Persistence.EventStore.Refactoring.Migrations.IEventModifier.html": {
    "href": "api/Composable.Persistence.EventStore.Refactoring.Migrations.IEventModifier.html",
    "title": "Interface IEventModifier | Composable",
    "keywords": "Interface IEventModifier Namespace Composable.Persistence.EventStore.Refactoring.Migrations Assembly Composable.CQRS.dll public interface IEventModifier Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods InsertBefore(params AggregateEvent[]) void InsertBefore(params AggregateEvent[] insert) Parameters insert AggregateEvent[] Replace(params AggregateEvent[]) void Replace(params AggregateEvent[] events) Parameters events AggregateEvent[]"
  },
  "api/Composable.Persistence.EventStore.Refactoring.Migrations.ISingleAggregateInstanceHandlingEventMigrator.html": {
    "href": "api/Composable.Persistence.EventStore.Refactoring.Migrations.ISingleAggregateInstanceHandlingEventMigrator.html",
    "title": "Interface ISingleAggregateInstanceHandlingEventMigrator | Composable",
    "keywords": "Interface ISingleAggregateInstanceHandlingEventMigrator Namespace Composable.Persistence.EventStore.Refactoring.Migrations Assembly Composable.CQRS.dll Responsible for migrating the events of a single instance of an aggregate. public interface ISingleAggregateInstanceHandlingEventMigrator Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods MigrateEvent(IAggregateEvent, IEventModifier) Inspect one event and if required mutate the event stream by calling methods on the modifier Called once for each event in the aggregate's history. Then it is called once with an instance of Composable.Persistence.EventStore.Refactoring.Migrations.EndOfAggregateHistoryEventPlaceHolder. void MigrateEvent(IAggregateEvent @event, IEventModifier modifier) Parameters event IAggregateEvent modifier IEventModifier"
  },
  "api/Composable.Persistence.EventStore.Refactoring.Migrations.NonIdempotentMigrationDetectedException.html": {
    "href": "api/Composable.Persistence.EventStore.Refactoring.Migrations.NonIdempotentMigrationDetectedException.html",
    "title": "Class NonIdempotentMigrationDetectedException | Composable",
    "keywords": "Class NonIdempotentMigrationDetectedException Namespace Composable.Persistence.EventStore.Refactoring.Migrations Assembly Composable.CQRS.dll public class NonIdempotentMigrationDetectedException : Exception, ISerializable Inheritance object Exception NonIdempotentMigrationDetectedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Persistence.EventStore.Refactoring.Migrations.html": {
    "href": "api/Composable.Persistence.EventStore.Refactoring.Migrations.html",
    "title": "Namespace Composable.Persistence.EventStore.Refactoring.Migrations | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore.Refactoring.Migrations Classes NonIdempotentMigrationDetectedException Interfaces IEventMigration Defines an identity for migration of events into other events. Creates IEventModifier ISingleAggregateInstanceHandlingEventMigrator Responsible for migrating the events of a single instance of an aggregate."
  },
  "api/Composable.Persistence.EventStore.html": {
    "href": "api/Composable.Persistence.EventStore.html",
    "title": "Namespace Composable.Persistence.EventStore | Composable",
    "keywords": "Namespace Composable.Persistence.EventStore Namespaces Composable.Persistence.EventStore.Aggregates Composable.Persistence.EventStore.Query.Models Composable.Persistence.EventStore.Refactoring.Migrations Classes AggregateEvent AggregateEvent<TBaseEventInterface> AggregateNotFoundException AttemptToSaveAlreadyPersistedAggregateException AttemptToSaveEmptyAggregateException EventStoreApi EventStoreApi.Command EventStoreApi.Command.SaveAggregate<TAggregate> EventStoreApi.QueryApi EventStoreApi.QueryApi.AggregateLink<TAggregate> EventStoreApi.QueryApi.GetAggregateHistory<TEvent> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregateVersion<TAggregate> EventStoreApi.QueryApi.GetReadonlyCopyOfAggregate<TAggregate> InvalidHistoryException Interfaces IAggregateCreatedEvent Marks an event as meaning that the aggregate was created. Can be used by clients to perform logic that should happen whenever an aggregate is created. Is used in several places in the infrastructure and the infrastructure will fail in various ways if this events is not inherited correctly. For example: Aggregate: Id is only set when such an event is raised. It is only ever possibly to raise 1 such event. More than one will cause an exception SingleAggregateQueryModelUpdater: Creates the initial query model when it receives such an event IAggregateDeletedEvent IAggregateEvent IAggregateEvent<TEventInterface> IEventStoreReader IEventStoreUpdater IEventStored IEventStored<TEvent>"
  },
  "api/Composable.Persistence.MsSql.DependencyInjection.MsSqlPersistenceLayerRegistrar.html": {
    "href": "api/Composable.Persistence.MsSql.DependencyInjection.MsSqlPersistenceLayerRegistrar.html",
    "title": "Class MsSqlPersistenceLayerRegistrar | Composable",
    "keywords": "Class MsSqlPersistenceLayerRegistrar Namespace Composable.Persistence.MsSql.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class MsSqlPersistenceLayerRegistrar Inheritance object MsSqlPersistenceLayerRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMsSqlPersistenceLayer(IDependencyInjectionContainer, string) public static void RegisterMsSqlPersistenceLayer(this IDependencyInjectionContainer container, string connectionStringName) Parameters container IDependencyInjectionContainer connectionStringName string RegisterMsSqlPersistenceLayer(IEndpointBuilder) public static void RegisterMsSqlPersistenceLayer(this IEndpointBuilder @this) Parameters this IEndpointBuilder"
  },
  "api/Composable.Persistence.MsSql.DependencyInjection.html": {
    "href": "api/Composable.Persistence.MsSql.DependencyInjection.html",
    "title": "Namespace Composable.Persistence.MsSql.DependencyInjection | Composable",
    "keywords": "Namespace Composable.Persistence.MsSql.DependencyInjection Classes MsSqlPersistenceLayerRegistrar"
  },
  "api/Composable.Persistence.MySql.DependencyInjection.MySqlPersistenceLayerRegistrar.html": {
    "href": "api/Composable.Persistence.MySql.DependencyInjection.MySqlPersistenceLayerRegistrar.html",
    "title": "Class MySqlPersistenceLayerRegistrar | Composable",
    "keywords": "Class MySqlPersistenceLayerRegistrar Namespace Composable.Persistence.MySql.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class MySqlPersistenceLayerRegistrar Inheritance object MySqlPersistenceLayerRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterMySqlPersistenceLayer(IDependencyInjectionContainer, string) public static void RegisterMySqlPersistenceLayer(this IDependencyInjectionContainer container, string connectionStringName) Parameters container IDependencyInjectionContainer connectionStringName string RegisterMySqlPersistenceLayer(IEndpointBuilder) public static void RegisterMySqlPersistenceLayer(this IEndpointBuilder @this) Parameters this IEndpointBuilder"
  },
  "api/Composable.Persistence.MySql.DependencyInjection.html": {
    "href": "api/Composable.Persistence.MySql.DependencyInjection.html",
    "title": "Namespace Composable.Persistence.MySql.DependencyInjection | Composable",
    "keywords": "Namespace Composable.Persistence.MySql.DependencyInjection Classes MySqlPersistenceLayerRegistrar"
  },
  "api/Composable.Persistence.PgSql.DependencyInjection.PgSqlPersistenceLayerRegistrar.html": {
    "href": "api/Composable.Persistence.PgSql.DependencyInjection.PgSqlPersistenceLayerRegistrar.html",
    "title": "Class PgSqlPersistenceLayerRegistrar | Composable",
    "keywords": "Class PgSqlPersistenceLayerRegistrar Namespace Composable.Persistence.PgSql.DependencyInjection Assembly Composable.CQRS.ExternalDependencies.dll public static class PgSqlPersistenceLayerRegistrar Inheritance object PgSqlPersistenceLayerRegistrar Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RegisterPgSqlPersistenceLayer(IDependencyInjectionContainer, string) public static void RegisterPgSqlPersistenceLayer(this IDependencyInjectionContainer container, string connectionStringName) Parameters container IDependencyInjectionContainer connectionStringName string RegisterPgSqlPersistenceLayer(IEndpointBuilder) public static void RegisterPgSqlPersistenceLayer(this IEndpointBuilder @this) Parameters this IEndpointBuilder"
  },
  "api/Composable.Persistence.PgSql.DependencyInjection.html": {
    "href": "api/Composable.Persistence.PgSql.DependencyInjection.html",
    "title": "Namespace Composable.Persistence.PgSql.DependencyInjection | Composable",
    "keywords": "Namespace Composable.Persistence.PgSql.DependencyInjection Classes PgSqlPersistenceLayerRegistrar"
  },
  "api/Composable.Persistence.html": {
    "href": "api/Composable.Persistence.html",
    "title": "Namespace Composable.Persistence | Composable",
    "keywords": "Namespace Composable.Persistence Namespaces Composable.Persistence.Common Composable.Persistence.DocumentDb Composable.Persistence.EventStore Composable.Persistence.MsSql.DependencyInjection Composable.Persistence.MySql.DependencyInjection Composable.Persistence.PgSql.DependencyInjection"
  },
  "api/Composable.Refactoring.Naming.CouldNotFindTypeForTypeIdException.html": {
    "href": "api/Composable.Refactoring.Naming.CouldNotFindTypeForTypeIdException.html",
    "title": "Class CouldNotFindTypeForTypeIdException | Composable",
    "keywords": "Class CouldNotFindTypeForTypeIdException Namespace Composable.Refactoring.Naming Assembly Composable.CQRS.dll public class CouldNotFindTypeForTypeIdException : Exception, ISerializable Inheritance object Exception CouldNotFindTypeForTypeIdException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors CouldNotFindTypeForTypeIdException(string) public CouldNotFindTypeForTypeIdException(string typeId) Parameters typeId string"
  },
  "api/Composable.Refactoring.Naming.ITypeMappingRegistar.html": {
    "href": "api/Composable.Refactoring.Naming.ITypeMappingRegistar.html",
    "title": "Interface ITypeMappingRegistar | Composable",
    "keywords": "Interface ITypeMappingRegistar Namespace Composable.Refactoring.Naming Assembly Composable.CQRS.dll public interface ITypeMappingRegistar Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Map<TType>(Guid) ITypeMappingRegistar Map<TType>(Guid typeGuid) Parameters typeGuid Guid Returns ITypeMappingRegistar Type Parameters TType Map<TType>(string) ITypeMappingRegistar Map<TType>(string typeGuid) Parameters typeGuid string Returns ITypeMappingRegistar Type Parameters TType"
  },
  "api/Composable.Refactoring.Naming.html": {
    "href": "api/Composable.Refactoring.Naming.html",
    "title": "Namespace Composable.Refactoring.Naming | Composable",
    "keywords": "Namespace Composable.Refactoring.Naming Classes CouldNotFindTypeForTypeIdException Interfaces ITypeMappingRegistar"
  },
  "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.ConcurrentCircularReader-1.html": {
    "href": "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.ConcurrentCircularReader-1.html",
    "title": "Class ConcurrentCircularReader<T> | Composable",
    "keywords": "Class ConcurrentCircularReader<T> Namespace Composable.SystemCE.CollectionsCE.ConcurrentCE Assembly Composable.CQRS.dll public class ConcurrentCircularReader<T> Type Parameters T Inheritance object ConcurrentCircularReader<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors ConcurrentCircularReader(IEnumerable<T>) public ConcurrentCircularReader(IEnumerable<T> source) Parameters source IEnumerable<T> Methods Next() public T Next() Returns T"
  },
  "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.ConcurrentCircularReader.html": {
    "href": "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.ConcurrentCircularReader.html",
    "title": "Class ConcurrentCircularReader | Composable",
    "keywords": "Class ConcurrentCircularReader Namespace Composable.SystemCE.CollectionsCE.ConcurrentCE Assembly Composable.CQRS.dll public static class ConcurrentCircularReader Inheritance object ConcurrentCircularReader Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToConcurrentCircularReader<T>(IEnumerable<T>) public static ConcurrentCircularReader<T> ToConcurrentCircularReader<T>(this IEnumerable<T> source) Parameters source IEnumerable<T> Returns ConcurrentCircularReader<T> Type Parameters T"
  },
  "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.html": {
    "href": "api/Composable.SystemCE.CollectionsCE.ConcurrentCE.html",
    "title": "Namespace Composable.SystemCE.CollectionsCE.ConcurrentCE | Composable",
    "keywords": "Namespace Composable.SystemCE.CollectionsCE.ConcurrentCE Classes ConcurrentCircularReader ConcurrentCircularReader<T>"
  },
  "api/Composable.SystemCE.ComponentModelCE.DataAnnotationsCE.IValidatableObjectCE.html": {
    "href": "api/Composable.SystemCE.ComponentModelCE.DataAnnotationsCE.IValidatableObjectCE.html",
    "title": "Class IValidatableObjectCE | Composable",
    "keywords": "Class IValidatableObjectCE Namespace Composable.SystemCE.ComponentModelCE.DataAnnotationsCE Assembly Composable.CQRS.dll Extensions for IValidatableObject intended to make type safe implementations easy. public static class IValidatableObjectCE Inheritance object IValidatableObjectCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateValidationResult(IValidatableObject, string, params Expression<Func<object>>[]) Creates an ValidationResult by extracting the invalid member(s) name from the supplied expression(s) public static ValidationResult CreateValidationResult(this IValidatableObject me, string message, params Expression<Func<object>>[] members) Parameters me IValidatableObject message string members Expression<Func<object>>[] Returns ValidationResult"
  },
  "api/Composable.SystemCE.ComponentModelCE.DataAnnotationsCE.html": {
    "href": "api/Composable.SystemCE.ComponentModelCE.DataAnnotationsCE.html",
    "title": "Namespace Composable.SystemCE.ComponentModelCE.DataAnnotationsCE | Composable",
    "keywords": "Namespace Composable.SystemCE.ComponentModelCE.DataAnnotationsCE Classes IValidatableObjectCE Extensions for IValidatableObject intended to make type safe implementations easy."
  },
  "api/Composable.SystemCE.ConfigurationCE.IConfigurationParameterProvider.html": {
    "href": "api/Composable.SystemCE.ConfigurationCE.IConfigurationParameterProvider.html",
    "title": "Interface IConfigurationParameterProvider | Composable",
    "keywords": "Interface IConfigurationParameterProvider Namespace Composable.SystemCE.ConfigurationCE Assembly Composable.CQRS.dll Allows for reading configuration parameters from a source such as a configuration file public interface IConfigurationParameterProvider Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetString(string, string?) Gets a string configuration value. string GetString(string parameterName, string? valueIfMissing = null) Parameters parameterName string valueIfMissing string Returns string"
  },
  "api/Composable.SystemCE.ConfigurationCE.html": {
    "href": "api/Composable.SystemCE.ConfigurationCE.html",
    "title": "Namespace Composable.SystemCE.ConfigurationCE | Composable",
    "keywords": "Namespace Composable.SystemCE.ConfigurationCE Interfaces IConfigurationParameterProvider Allows for reading configuration parameters from a source such as a configuration file"
  },
  "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.TimedExecutionSummary.html": {
    "href": "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.TimedExecutionSummary.html",
    "title": "Class StopwatchCE.TimedExecutionSummary | Composable",
    "keywords": "Class StopwatchCE.TimedExecutionSummary Namespace Composable.SystemCE.DiagnosticsCE Assembly Composable.CQRS.dll public class StopwatchCE.TimedExecutionSummary Inheritance object StopwatchCE.TimedExecutionSummary Derived StopwatchCE.TimedThreadedExecutionSummary Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors TimedExecutionSummary(int, TimeSpan) public TimedExecutionSummary(int iterations, TimeSpan total) Parameters iterations int total TimeSpan Properties Average public TimeSpan Average { get; } Property Value TimeSpan Total public TimeSpan Total { get; } Property Value TimeSpan"
  },
  "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.TimedThreadedExecutionSummary.html": {
    "href": "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.TimedThreadedExecutionSummary.html",
    "title": "Class StopwatchCE.TimedThreadedExecutionSummary | Composable",
    "keywords": "Class StopwatchCE.TimedThreadedExecutionSummary Namespace Composable.SystemCE.DiagnosticsCE Assembly Composable.CQRS.dll public class StopwatchCE.TimedThreadedExecutionSummary : StopwatchCE.TimedExecutionSummary Inheritance object StopwatchCE.TimedExecutionSummary StopwatchCE.TimedThreadedExecutionSummary Inherited Members StopwatchCE.TimedExecutionSummary.Total StopwatchCE.TimedExecutionSummary.Average object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors TimedThreadedExecutionSummary(int, IReadOnlyList<TimeSpan>, TimeSpan, string) public TimedThreadedExecutionSummary(int iterations, IReadOnlyList<TimeSpan> individualExecutionTimes, TimeSpan total, string description = \"\") Parameters iterations int individualExecutionTimes IReadOnlyList<TimeSpan> total TimeSpan description string Properties IndividualExecutionTimes public IReadOnlyList<TimeSpan> IndividualExecutionTimes { get; } Property Value IReadOnlyList<TimeSpan> Methods ToString() Returns a string that represents the current object. public override string ToString() Returns string A string that represents the current object."
  },
  "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.html": {
    "href": "api/Composable.SystemCE.DiagnosticsCE.StopwatchCE.html",
    "title": "Class StopwatchCE | Composable",
    "keywords": "Class StopwatchCE Namespace Composable.SystemCE.DiagnosticsCE Assembly Composable.CQRS.dll Extensions to the Stopwatch class and related functionality. public static class StopwatchCE Inheritance object StopwatchCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods TimeExecution(Action, int) public static StopwatchCE.TimedExecutionSummary TimeExecution(Action action, int iterations = 1) Parameters action Action iterations int Returns StopwatchCE.TimedExecutionSummary TimeExecutionAsync(Func<Task>, int) public static Task<StopwatchCE.TimedExecutionSummary> TimeExecutionAsync(Func<Task> action, int iterations = 1) Parameters action Func<Task> iterations int Returns Task<StopwatchCE.TimedExecutionSummary> TimeExecutionThreaded(Action, int, int) public static StopwatchCE.TimedThreadedExecutionSummary TimeExecutionThreaded(Action action, int iterations = 1, int maxDegreeOfParallelism = -1) Parameters action Action iterations int maxDegreeOfParallelism int Returns StopwatchCE.TimedThreadedExecutionSummary TimeExecutionThreadedLowOverhead(Action, int, int) public static StopwatchCE.TimedExecutionSummary TimeExecutionThreadedLowOverhead(Action action, int iterations = 1, int maxDegreeOfParallelism = -1) Parameters action Action iterations int maxDegreeOfParallelism int Returns StopwatchCE.TimedExecutionSummary"
  },
  "api/Composable.SystemCE.DiagnosticsCE.html": {
    "href": "api/Composable.SystemCE.DiagnosticsCE.html",
    "title": "Namespace Composable.SystemCE.DiagnosticsCE | Composable",
    "keywords": "Namespace Composable.SystemCE.DiagnosticsCE Classes StopwatchCE Extensions to the Stopwatch class and related functionality. StopwatchCE.TimedExecutionSummary StopwatchCE.TimedThreadedExecutionSummary"
  },
  "api/Composable.SystemCE.IStaticInstancePropertySingleton.html": {
    "href": "api/Composable.SystemCE.IStaticInstancePropertySingleton.html",
    "title": "Interface IStaticInstancePropertySingleton | Composable",
    "keywords": "Interface IStaticInstancePropertySingleton Namespace Composable.SystemCE Assembly Composable.CQRS.dll public interface IStaticInstancePropertySingleton Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.html": {
    "href": "api/Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.html",
    "title": "Struct EnumerableCE.IterationSpecification | Composable",
    "keywords": "Struct EnumerableCE.IterationSpecification Namespace Composable.SystemCE.LinqCE Assembly Composable.CQRS.dll Represents a sequence first yielding Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.StartValue and then infinitely yielding the last value plus Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.StepSize public readonly struct EnumerableCE.IterationSpecification : IEquatable<EnumerableCE.IterationSpecification> Implements IEquatable<EnumerableCE.IterationSpecification> Inherited Members ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) EnumerableCE.Through(EnumerableCE.IterationSpecification, int) EnumerableCE.Until(EnumerableCE.IterationSpecification, int) ObjectCE.ToStringNotNull(object) Methods Equals(IterationSpecification) Indicates whether the current object is equal to another object of the same type. public bool Equals(EnumerableCE.IterationSpecification other) Parameters other EnumerableCE.IterationSpecification An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Indicates whether this instance and a specified object are equal. public override bool Equals(object? obj) Parameters obj object The object to compare with the current instance. Returns bool true if obj and this instance are the same type and represent the same value; otherwise, false. GetHashCode() Returns the hash code for this instance. public override int GetHashCode() Returns int A 32-bit signed integer that is the hash code for this instance. Operators operator ==(IterationSpecification, IterationSpecification) public static bool operator ==(EnumerableCE.IterationSpecification left, EnumerableCE.IterationSpecification right) Parameters left EnumerableCE.IterationSpecification right EnumerableCE.IterationSpecification Returns bool operator !=(IterationSpecification, IterationSpecification) public static bool operator !=(EnumerableCE.IterationSpecification left, EnumerableCE.IterationSpecification right) Parameters left EnumerableCE.IterationSpecification right EnumerableCE.IterationSpecification Returns bool"
  },
  "api/Composable.SystemCE.LinqCE.EnumerableCE.html": {
    "href": "api/Composable.SystemCE.LinqCE.EnumerableCE.html",
    "title": "Class EnumerableCE | Composable",
    "keywords": "Class EnumerableCE Namespace Composable.SystemCE.LinqCE Assembly Composable.CQRS.dll public static class EnumerableCE Inheritance object EnumerableCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Append<T>(IEnumerable<T>, params T[]) Adds instances to the end of source public static IEnumerable<T> Append<T>(this IEnumerable<T> source, params T[] instances) Parameters source IEnumerable<T> instances T[] Returns IEnumerable<T> Type Parameters T By(int, int) generates a sequence of integers beginning with me where each element is stepSize larger than the previous public static EnumerableCE.IterationSpecification By(this int me, int stepSize) Parameters me int stepSize int Returns EnumerableCE.IterationSpecification ChopIntoSizesOf<T>(IEnumerable<T>, int) Chops an IEnumerable up into size sized chunks. public static IEnumerable<IEnumerable<T>> ChopIntoSizesOf<T>(this IEnumerable<T> me, int size) Parameters me IEnumerable<T> size int Returns IEnumerable<IEnumerable<T>> Type Parameters T Create<T>(params T[]) Creates an enumerable consisting of the passed parameter values is order. public static IEnumerable<T> Create<T>(params T[] values) Parameters values T[] Returns IEnumerable<T> Type Parameters T Flatten<T, TChild>(IEnumerable<T>) Acting on an IEnumerable<T>me where T is an IEnumerable<T> returns an IEnumerable<T> aggregating all the TChild instances Using SelectMany(x=>x) is ugly and unintuitive. This method provides an intuitively named alternative. public static IEnumerable<TChild> Flatten<T, TChild>(this IEnumerable<T> me) where T : IEnumerable<TChild> Parameters me IEnumerable<T> the collection to act upon Returns IEnumerable<TChild> All the objects in all the nested collections Type Parameters T A type implementing IEnumerable<T> TChild The type contained in the nested enumerables. ForEach<T>(IEnumerable<T>, Action<T, int>) Executes action for each element in the sequence source. public static void ForEach<T>(this IEnumerable<T> source, Action<T, int> action) Parameters source IEnumerable<T> action Action<T, int> Type Parameters T ForEach<T>(IEnumerable<T>, Action<T>) Executes action for each element in the sequence source. public static void ForEach<T>(this IEnumerable<T> source, Action<T> action) Parameters source IEnumerable<T> action Action<T> Type Parameters T ForEach<TSource, TReturn>(IEnumerable<TSource>, Func<TSource, TReturn>) Executes action for each element in the sequence source. public static void ForEach<TSource, TReturn>(this IEnumerable<TSource> source, Func<TSource, TReturn> action) Parameters source IEnumerable<TSource> action Func<TSource, TReturn> Type Parameters TSource TReturn None<T>(IEnumerable<T>) The inversion of Enumerable.Any() . Returns true if me contains no elements. public static bool None<T>(this IEnumerable<T> me) Parameters me IEnumerable<T> Returns bool true if me contains no objects. Otherwise false. Type Parameters T None<T>(IEnumerable<T>, Func<T, bool>) The inversion of Enumerable.Any() . Returns true if me contains no elements. public static bool None<T>(this IEnumerable<T> me, Func<T, bool> condition) Parameters me IEnumerable<T> condition Func<T, bool> Returns bool true if me contains no objects. Otherwise false. Type Parameters T None<T>(IList<T>) public static bool None<T>(this IList<T> me) Parameters me IList<T> Returns bool Type Parameters T None<T>(IReadOnlyList<T>) public static bool None<T>(this IReadOnlyList<T> me) Parameters me IReadOnlyList<T> Returns bool Type Parameters T None<T>(List<T>) public static bool None<T>(this List<T> me) Parameters me List<T> Returns bool Type Parameters T None<T>(T[]) public static bool None<T>(this T[] me) Parameters me T[] Returns bool Type Parameters T OfTypes<T1>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1>() Returns IEnumerable<Type> Type Parameters T1 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 OfTypes<T1, T2>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2>() Returns IEnumerable<Type> Type Parameters T1 T2 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 T10 T11 T12 T13 T14 T15 T16 T17 T18 T19 T20 OfTypes<T1, T2, T3>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 OfTypes<T1, T2, T3, T4>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 OfTypes<T1, T2, T3, T4, T5>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 OfTypes<T1, T2, T3, T4, T5, T6>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 OfTypes<T1, T2, T3, T4, T5, T6, T7>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>() Returns a sequence of types matching the supplied type arguments public static IEnumerable<Type> OfTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>() Returns IEnumerable<Type> Type Parameters T1 T2 T3 T4 T5 T6 T7 T8 T9 Through(IterationSpecification, int) Returns as sequence that will yield all values to and including guard public static IEnumerable<int> Through(this EnumerableCE.IterationSpecification me, int guard) Parameters me EnumerableCE.IterationSpecification guard int Returns IEnumerable<int> Through(int, int) generates a sequence of integers beginning with me where each element is the previous element plus one that includes the upper bound guard cref=\"guard\"/> public static IEnumerable<int> Through(this int me, int guard) Parameters me int guard int Returns IEnumerable<int> Until(IterationSpecification, int) Returns as sequence that will yield all values to but excluding guard public static IEnumerable<int> Until(this EnumerableCE.IterationSpecification me, int guard) Parameters me EnumerableCE.IterationSpecification guard int Returns IEnumerable<int> Until(int, int) generates a sequence of integers beginning with me where each element is the previous element plus one that excludes the upper bound guard public static IEnumerable<int> Until(this int me, int guard) Parameters me int guard int Returns IEnumerable<int>"
  },
  "api/Composable.SystemCE.LinqCE.html": {
    "href": "api/Composable.SystemCE.LinqCE.html",
    "title": "Namespace Composable.SystemCE.LinqCE | Composable",
    "keywords": "Namespace Composable.SystemCE.LinqCE Classes EnumerableCE Structs EnumerableCE.IterationSpecification Represents a sequence first yielding Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.StartValue and then infinitely yielding the last value plus Composable.SystemCE.LinqCE.EnumerableCE.IterationSpecification.StepSize"
  },
  "api/Composable.SystemCE.NullableCE.html": {
    "href": "api/Composable.SystemCE.NullableCE.html",
    "title": "Class NullableCE | Composable",
    "keywords": "Class NullableCE Namespace Composable.SystemCE Assembly Composable.CQRS.dll public static class NullableCE Inheritance object NullableCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods NotNull<T>(T?) public static T NotNull<T>(this T? @this) where T : struct Parameters this T? Returns T Type Parameters T NotNull<T>(T?) public static T NotNull<T>(this T? @this) where T : class Parameters this T Returns T Type Parameters T"
  },
  "api/Composable.SystemCE.ReflectionCE.EmitCE.AssemblyBuilderCE.html": {
    "href": "api/Composable.SystemCE.ReflectionCE.EmitCE.AssemblyBuilderCE.html",
    "title": "Class AssemblyBuilderCE | Composable",
    "keywords": "Class AssemblyBuilderCE Namespace Composable.SystemCE.ReflectionCE.EmitCE Assembly Composable.CQRS.dll public static class AssemblyBuilderCE Inheritance object AssemblyBuilderCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.SystemCE.ReflectionCE.EmitCE.TypeBuilderCE.html": {
    "href": "api/Composable.SystemCE.ReflectionCE.EmitCE.TypeBuilderCE.html",
    "title": "Class TypeBuilderCE | Composable",
    "keywords": "Class TypeBuilderCE Namespace Composable.SystemCE.ReflectionCE.EmitCE Assembly Composable.CQRS.dll public static class TypeBuilderCE Inheritance object TypeBuilderCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ImplementConstructor(TypeBuilder, FieldInfo) public static void ImplementConstructor(this TypeBuilder typeBuilder, FieldInfo field) Parameters typeBuilder TypeBuilder field FieldInfo ImplementProperty(TypeBuilder, string, Type) public static (FieldInfo, PropertyInfo) ImplementProperty(this TypeBuilder typeBuilder, string propertyName, Type propertyType) Parameters typeBuilder TypeBuilder propertyName string propertyType Type Returns (FieldInfo, PropertyInfo)"
  },
  "api/Composable.SystemCE.ReflectionCE.EmitCE.html": {
    "href": "api/Composable.SystemCE.ReflectionCE.EmitCE.html",
    "title": "Namespace Composable.SystemCE.ReflectionCE.EmitCE | Composable",
    "keywords": "Namespace Composable.SystemCE.ReflectionCE.EmitCE Classes AssemblyBuilderCE TypeBuilderCE"
  },
  "api/Composable.SystemCE.StrictAggregateDisposable.html": {
    "href": "api/Composable.SystemCE.StrictAggregateDisposable.html",
    "title": "Class StrictAggregateDisposable | Composable",
    "keywords": "Class StrictAggregateDisposable Namespace Composable.SystemCE Assembly Composable.CQRS.dll public class StrictAggregateDisposable : StrictlyManagedResourceBase<StrictAggregateDisposable>, IDisposable Inheritance object StrictlyManagedResourceBase<StrictAggregateDisposable> StrictAggregateDisposable Implements IDisposable Inherited Members StrictlyManagedResourceBase<StrictAggregateDisposable>.Dispose() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Create(params IDisposable[]) public static StrictAggregateDisposable Create(params IDisposable[] disposables) Parameters disposables IDisposable[] Returns StrictAggregateDisposable Dispose(bool) protected override void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/Composable.SystemCE.StrictlyManagedResourceBase-1.html": {
    "href": "api/Composable.SystemCE.StrictlyManagedResourceBase-1.html",
    "title": "Class StrictlyManagedResourceBase<TInheritor> | Composable",
    "keywords": "Class StrictlyManagedResourceBase<TInheritor> Namespace Composable.SystemCE Assembly Composable.CQRS.dll Inheriting from this class is the simplest way to implement Composable.SystemCE.IStrictlyManagedResource public abstract class StrictlyManagedResourceBase<TInheritor> : IDisposable where TInheritor : StrictlyManagedResourceBase<TInheritor> Type Parameters TInheritor Inheritance object StrictlyManagedResourceBase<TInheritor> Implements IDisposable Derived StrictAggregateDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Examples class SomeStrictlyManagedResource : StrictlyManagedResourceBase { ResourceThatMustBeDisposed _resourceThatMustBeDisposed = new ResourceThatMustBeDisposed(); bool _disposed; protected override void InternalDispose() { if (!_disposed) { _disposed = true; _resourceThatMustBeDisposed.Dispose(); } } } Constructors StrictlyManagedResourceBase(bool, bool) Inheriting from this class is the simplest way to implement Composable.SystemCE.IStrictlyManagedResource protected StrictlyManagedResourceBase(bool forceStackTraceAllocation = false, bool needsFileInfo = false) Parameters forceStackTraceAllocation bool needsFileInfo bool Examples class SomeStrictlyManagedResource : StrictlyManagedResourceBase { ResourceThatMustBeDisposed _resourceThatMustBeDisposed = new ResourceThatMustBeDisposed(); bool _disposed; protected override void InternalDispose() { if (!_disposed) { _disposed = true; _resourceThatMustBeDisposed.Dispose(); } } } Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) protected virtual void Dispose(bool disposing) Parameters disposing bool"
  },
  "api/Composable.SystemCE.StrictlyManagedResourceLifespanWasExceededException.html": {
    "href": "api/Composable.SystemCE.StrictlyManagedResourceLifespanWasExceededException.html",
    "title": "Class StrictlyManagedResourceLifespanWasExceededException | Composable",
    "keywords": "Class StrictlyManagedResourceLifespanWasExceededException Namespace Composable.SystemCE Assembly Composable.CQRS.dll public class StrictlyManagedResourceLifespanWasExceededException : Exception, ISerializable Inheritance object Exception StrictlyManagedResourceLifespanWasExceededException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors StrictlyManagedResourceLifespanWasExceededException(Type, string, TimeSpan) public StrictlyManagedResourceLifespanWasExceededException(Type instanceType, string reservationCallStack, TimeSpan maxTimeSpan) Parameters instanceType Type reservationCallStack string maxTimeSpan TimeSpan"
  },
  "api/Composable.SystemCE.StrictlyManagedResourceWasFinalizedException.html": {
    "href": "api/Composable.SystemCE.StrictlyManagedResourceWasFinalizedException.html",
    "title": "Class StrictlyManagedResourceWasFinalizedException | Composable",
    "keywords": "Class StrictlyManagedResourceWasFinalizedException Namespace Composable.SystemCE Assembly Composable.CQRS.dll Composable.SystemCE.IStrictlyManagedResource public class StrictlyManagedResourceWasFinalizedException : Exception, ISerializable Inheritance object Exception StrictlyManagedResourceWasFinalizedException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors StrictlyManagedResourceWasFinalizedException(Type, string?) public StrictlyManagedResourceWasFinalizedException(Type instanceType, string? reservationCallStack) Parameters instanceType Type reservationCallStack string"
  },
  "api/Composable.SystemCE.ThreadingCE.ComponentUsedByMultipleTransactionsException.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ComponentUsedByMultipleTransactionsException.html",
    "title": "Class ComponentUsedByMultipleTransactionsException | Composable",
    "keywords": "Class ComponentUsedByMultipleTransactionsException Namespace Composable.SystemCE.ThreadingCE Assembly Composable.CQRS.dll public class ComponentUsedByMultipleTransactionsException : Exception, ISerializable Inheritance object Exception ComponentUsedByMultipleTransactionsException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors ComponentUsedByMultipleTransactionsException(Type) public ComponentUsedByMultipleTransactionsException(Type componentType) Parameters componentType Type"
  },
  "api/Composable.SystemCE.ThreadingCE.ISingleContextUseGuard.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ISingleContextUseGuard.html",
    "title": "Interface ISingleContextUseGuard | Composable",
    "keywords": "Interface ISingleContextUseGuard Namespace Composable.SystemCE.ThreadingCE Assembly Composable.CQRS.dll Implementations ensure that a component is only used within the allowed context. Such as a single thread, single http request etc. public interface ISingleContextUseGuard Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods AssertNoContextChangeOccurred(object) Implementations throw an exception if the context has changed. void AssertNoContextChangeOccurred(object guarded) Parameters guarded object"
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.AwaitingConditionTimeoutException.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.AwaitingConditionTimeoutException.html",
    "title": "Class AwaitingConditionTimeoutException | Composable",
    "keywords": "Class AwaitingConditionTimeoutException Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.dll public class AwaitingConditionTimeoutException : Exception, ISerializable Inheritance object Exception AwaitingConditionTimeoutException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AwaitingConditionTimeoutException() public AwaitingConditionTimeoutException() AwaitingConditionTimeoutException(AwaitingConditionTimeoutException, string) public AwaitingConditionTimeoutException(AwaitingConditionTimeoutException parent, string message) Parameters parent AwaitingConditionTimeoutException message string"
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.EnterLockTimeoutException.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.EnterLockTimeoutException.html",
    "title": "Class EnterLockTimeoutException | Composable",
    "keywords": "Class EnterLockTimeoutException Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.dll public class EnterLockTimeoutException : Exception, ISerializable Inheritance object Exception EnterLockTimeoutException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Message Gets a message that describes the current exception. public override string Message { get; } Property Value string The error message that explains the reason for the exception, or an empty string (\"\")."
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.NotifyAllLock.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.NotifyAllLock.html",
    "title": "Class MonitorCE.NotifyAllLock | Composable",
    "keywords": "Class MonitorCE.NotifyAllLock Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.dll Ensure you only call Dispose() once on an instance. public sealed class MonitorCE.NotifyAllLock : IDisposable Inheritance object MonitorCE.NotifyAllLock Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose()"
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.OutParamFunc-1.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.OutParamFunc-1.html",
    "title": "Delegate MonitorCE.OutParamFunc<T> | Composable",
    "keywords": "Delegate MonitorCE.OutParamFunc<T> Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.dll public delegate T MonitorCE.OutParamFunc<T>(out T outParam) Parameters outParam T Returns T Type Parameters T Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.MonitorCE.html",
    "title": "Class MonitorCE | Composable",
    "keywords": "Class MonitorCE Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.dll The monitor class exposes a rather obscure, brittle and easily misused API in my opinion. This class attempts to adapt it to something that is reasonably understandable and less brittle. public class MonitorCE Inheritance object MonitorCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods EnterUpdateLock() public MonitorCE.NotifyAllLock EnterUpdateLock() Returns MonitorCE.NotifyAllLock Read<TReturn>(Func<TReturn>) public TReturn Read<TReturn>(Func<TReturn> func) Parameters func Func<TReturn> Returns TReturn Type Parameters TReturn Update(Action) public Unit Update(Action action) Parameters action Action Returns Unit Update<T>(OutParamFunc<T>, out T) public T Update<T>(MonitorCE.OutParamFunc<T> func, out T outParam) Parameters func MonitorCE.OutParamFunc<T> outParam T Returns T Type Parameters T Update<T>(Func<T>) public T Update<T>(Func<T> func) Parameters func Func<T> Returns T Type Parameters T WithDefaultTimeout() public static MonitorCE WithDefaultTimeout() Returns MonitorCE WithInfiniteTimeout() public static MonitorCE WithInfiniteTimeout() Returns MonitorCE WithTimeout(TimeSpan) public static MonitorCE WithTimeout(TimeSpan timeout) Parameters timeout TimeSpan Returns MonitorCE"
  },
  "api/Composable.SystemCE.ThreadingCE.ResourceAccess.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.ResourceAccess.html",
    "title": "Namespace Composable.SystemCE.ThreadingCE.ResourceAccess | Composable",
    "keywords": "Namespace Composable.SystemCE.ThreadingCE.ResourceAccess Classes AwaitingConditionTimeoutException EnterLockTimeoutException MonitorCE The monitor class exposes a rather obscure, brittle and easily misused API in my opinion. This class attempts to adapt it to something that is reasonably understandable and less brittle. MonitorCE.NotifyAllLock Ensure you only call Dispose() once on an instance. Delegates MonitorCE.OutParamFunc<T>"
  },
  "api/Composable.SystemCE.ThreadingCE.TasksCE.TaskCE.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.TasksCE.TaskCE.html",
    "title": "Class TaskCE | Composable",
    "keywords": "Class TaskCE Namespace Composable.SystemCE.ThreadingCE.TasksCE Assembly Composable.CQRS.dll public static class TaskCE Inheritance object TaskCE Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CaF(IAsyncDisposable) Abbreviated version of ConfigureAwait(IAsyncDisposable, bool) with continueOnCapturedContext: false. Ensures that awaits do not capture the synchronization context, avoiding deadlocks and improving performance in environments with a synchronization context (e.g., UI threads). Must be applied to all awaits in library code to ensure that no deadlocks occur due to a synchronization context. public static ConfiguredAsyncDisposable CaF(this IAsyncDisposable @this) Parameters this IAsyncDisposable Returns ConfiguredAsyncDisposable CaF(Task) Abbreviated version of ConfigureAwait(bool) with continueOnCapturedContext: false. Ensures that awaits do not capture the synchronization context, thus avoiding deadlocks and improving performance in environments with a synchronization context (e.g., UI threads). Must be applied to all awaits in library code to ensure that no deadlocks occur due to a synchronization context. public static ConfiguredTaskAwaitable CaF(this Task @this) Parameters this Task Returns ConfiguredTaskAwaitable CaF(ValueTask) Abbreviated version of ConfigureAwait(bool) with continueOnCapturedContext: false. Ensures that awaits do not capture the synchronization context, avoiding deadlocks and improving performance in environments with a synchronization context (e.g., UI threads). Must be applied to all awaits in library code to ensure that no deadlocks occur due to a synchronization context. public static ConfiguredValueTaskAwaitable CaF(this ValueTask @this) Parameters this ValueTask Returns ConfiguredValueTaskAwaitable CaF<TResult>(Task<TResult>) Abbreviated version of ConfigureAwait(bool) with continueOnCapturedContext: false. Ensures that awaits do not capture the synchronization context, avoiding deadlocks and improving performance in environments with a synchronization context (e.g., UI threads). Must be applied to all awaits in library code to ensure that no deadlocks occur due to a synchronization context. public static ConfiguredTaskAwaitable<TResult> CaF<TResult>(this Task<TResult> @this) Parameters this Task<TResult> Returns ConfiguredTaskAwaitable<TResult> Type Parameters TResult CaF<TResult>(ValueTask<TResult>) Abbreviated version of ConfigureAwait(bool) with continueOnCapturedContext: false. Ensures that awaits do not capture the synchronization context, avoiding deadlocks and improving performance in environments with a synchronization context (e.g., UI threads). Must be applied to all awaits in library code to ensure that no deadlocks occur due to a synchronization context. public static ConfiguredValueTaskAwaitable<TResult> CaF<TResult>(this ValueTask<TResult> @this) Parameters this ValueTask<TResult> Returns ConfiguredValueTaskAwaitable<TResult> Type Parameters TResult"
  },
  "api/Composable.SystemCE.ThreadingCE.TasksCE.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.TasksCE.html",
    "title": "Namespace Composable.SystemCE.ThreadingCE.TasksCE | Composable",
    "keywords": "Namespace Composable.SystemCE.ThreadingCE.TasksCE Classes TaskCE"
  },
  "api/Composable.SystemCE.ThreadingCE.html": {
    "href": "api/Composable.SystemCE.ThreadingCE.html",
    "title": "Namespace Composable.SystemCE.ThreadingCE | Composable",
    "keywords": "Namespace Composable.SystemCE.ThreadingCE Namespaces Composable.SystemCE.ThreadingCE.ResourceAccess Composable.SystemCE.ThreadingCE.TasksCE Classes ComponentUsedByMultipleTransactionsException Interfaces ISingleContextUseGuard Implementations ensure that a component is only used within the allowed context. Such as a single thread, single http request etc."
  },
  "api/Composable.SystemCE.TransactionsCE.TransactionScopeCe.html": {
    "href": "api/Composable.SystemCE.TransactionsCE.TransactionScopeCe.html",
    "title": "Class TransactionScopeCe | Composable",
    "keywords": "Class TransactionScopeCe Namespace Composable.SystemCE.TransactionsCE Assembly Composable.CQRS.dll public static class TransactionScopeCe Inheritance object TransactionScopeCe Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.SystemCE.TransactionsCE.html": {
    "href": "api/Composable.SystemCE.TransactionsCE.html",
    "title": "Namespace Composable.SystemCE.TransactionsCE | Composable",
    "keywords": "Namespace Composable.SystemCE.TransactionsCE Classes TransactionScopeCe"
  },
  "api/Composable.SystemCE.html": {
    "href": "api/Composable.SystemCE.html",
    "title": "Namespace Composable.SystemCE | Composable",
    "keywords": "Namespace Composable.SystemCE Namespaces Composable.SystemCE.CollectionsCE.ConcurrentCE Composable.SystemCE.ComponentModelCE.DataAnnotationsCE Composable.SystemCE.ConfigurationCE Composable.SystemCE.DiagnosticsCE Composable.SystemCE.LinqCE Composable.SystemCE.ReflectionCE.EmitCE Composable.SystemCE.ThreadingCE Composable.SystemCE.TransactionsCE Classes NullableCE StrictAggregateDisposable StrictlyManagedResourceBase<TInheritor> Inheriting from this class is the simplest way to implement Composable.SystemCE.IStrictlyManagedResource StrictlyManagedResourceLifespanWasExceededException StrictlyManagedResourceWasFinalizedException Composable.SystemCE.IStrictlyManagedResource Interfaces IStaticInstancePropertySingleton"
  },
  "api/Composable.Testing.AssertThrows.html": {
    "href": "api/Composable.Testing.AssertThrows.html",
    "title": "Class AssertThrows | Composable",
    "keywords": "Class AssertThrows Namespace Composable.Testing Assembly Composable.CQRS.dll public static class AssertThrows Inheritance object AssertThrows Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Async<TException>(Func<Task>) public static Task<TException> Async<TException>(Func<Task> action) where TException : Exception Parameters action Func<Task> Returns Task<TException> Type Parameters TException Exception<TException>(Action) public static TException Exception<TException>(Action action) where TException : Exception Parameters action Action Returns TException Type Parameters TException"
  },
  "api/Composable.Testing.DuplicateByPluggableComponentTest.html": {
    "href": "api/Composable.Testing.DuplicateByPluggableComponentTest.html",
    "title": "Class DuplicateByPluggableComponentTest | Composable",
    "keywords": "Class DuplicateByPluggableComponentTest Namespace Composable.Testing Assembly Composable.Testing.dll [TestFixture] [TestFixtureSource(typeof(PluggableComponentsTestFixtureSource))] public class DuplicateByPluggableComponentTest : UniversalTestBase Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DuplicateByPluggableComponentTest(string) public DuplicateByPluggableComponentTest(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string"
  },
  "api/Composable.Testing.LevelOfParallelismCEAttribute.html": {
    "href": "api/Composable.Testing.LevelOfParallelismCEAttribute.html",
    "title": "Class LevelOfParallelismCEAttribute | Composable",
    "keywords": "Class LevelOfParallelismCEAttribute Namespace Composable.Testing Assembly Composable.Testing.dll [AttributeUsage(AttributeTargets.Assembly|AttributeTargets.Class|AttributeTargets.Method)] public sealed class LevelOfParallelismCEAttribute : Attribute, IApplyToTest Inheritance object Attribute LevelOfParallelismCEAttribute Implements IApplyToTest Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ApplyToTest(Test) Modifies a test as defined for the specific attribute. public void ApplyToTest(Test test) Parameters test Test The test to modify"
  },
  "api/Composable.Testing.LongRunningAttribute.html": {
    "href": "api/Composable.Testing.LongRunningAttribute.html",
    "title": "Class LongRunningAttribute | Composable",
    "keywords": "Class LongRunningAttribute Namespace Composable.Testing Assembly Composable.Testing.dll [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public sealed class LongRunningAttribute : Attribute, IApplyToTest Inheritance object Attribute LongRunningAttribute Implements IApplyToTest Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ApplyToTest(Test) Modifies a test as defined for the specific attribute. public void ApplyToTest(Test test) Parameters test Test The test to modify"
  },
  "api/Composable.Testing.Performance.TimeAsserter.TimeOutException.html": {
    "href": "api/Composable.Testing.Performance.TimeAsserter.TimeOutException.html",
    "title": "Class TimeAsserter.TimeOutException | Composable",
    "keywords": "Class TimeAsserter.TimeOutException Namespace Composable.Testing.Performance Assembly Composable.CQRS.dll public class TimeAsserter.TimeOutException : Exception, ISerializable Inheritance object Exception TimeAsserter.TimeOutException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors TimeOutException(string) public TimeOutException(string message) Parameters message string"
  },
  "api/Composable.Testing.Performance.TimeAsserter.html": {
    "href": "api/Composable.Testing.Performance.TimeAsserter.html",
    "title": "Class TimeAsserter | Composable",
    "keywords": "Class TimeAsserter Namespace Composable.Testing.Performance Assembly Composable.CQRS.dll public static class TimeAsserter Inheritance object TimeAsserter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Execute(Action, int, TimeSpan?, TimeSpan?, string, uint, Action?, Action?) public static StopwatchCE.TimedExecutionSummary Execute(Action action, int iterations = 1, TimeSpan? maxAverage = null, TimeSpan? maxTotal = null, string description = \"\", uint maxTries = 10, Action? setup = null, Action? tearDown = null) Parameters action Action iterations int maxAverage TimeSpan? maxTotal TimeSpan? description string maxTries uint setup Action tearDown Action Returns StopwatchCE.TimedExecutionSummary ExecuteAsync(Func<Task>, int, TimeSpan?, TimeSpan?, string, uint, Action?, Action?, Func<Task>?) public static Task<StopwatchCE.TimedExecutionSummary> ExecuteAsync(Func<Task> action, int iterations = 1, TimeSpan? maxAverage = null, TimeSpan? maxTotal = null, string description = \"\", uint maxTries = 10, Action? setup = null, Action? tearDown = null, Func<Task>? tearDownAsync = null) Parameters action Func<Task> iterations int maxAverage TimeSpan? maxTotal TimeSpan? description string maxTries uint setup Action tearDown Action tearDownAsync Func<Task> Returns Task<StopwatchCE.TimedExecutionSummary> ExecuteThreaded(Action, int, TimeSpan?, TimeSpan?, string, Action?, Action?, uint, int) public static StopwatchCE.TimedThreadedExecutionSummary ExecuteThreaded(Action action, int iterations = 1, TimeSpan? maxAverage = null, TimeSpan? maxTotal = null, string description = \"\", Action? setup = null, Action? tearDown = null, uint maxTries = 10, int maxDegreeOfParallelism = -1) Parameters action Action iterations int maxAverage TimeSpan? maxTotal TimeSpan? description string setup Action tearDown Action maxTries uint maxDegreeOfParallelism int Returns StopwatchCE.TimedThreadedExecutionSummary ExecuteThreadedLowOverhead(Action, int, TimeSpan?, TimeSpan?, string, Action?, Action?, uint, int) public static StopwatchCE.TimedExecutionSummary ExecuteThreadedLowOverhead(Action action, int iterations = 1, TimeSpan? maxAverage = null, TimeSpan? maxTotal = null, string description = \"\", Action? setup = null, Action? tearDown = null, uint maxTries = 10, int maxDegreeOfParallelism = -1) Parameters action Action iterations int maxAverage TimeSpan? maxTotal TimeSpan? description string setup Action tearDown Action maxTries uint maxDegreeOfParallelism int Returns StopwatchCE.TimedExecutionSummary"
  },
  "api/Composable.Testing.Performance.html": {
    "href": "api/Composable.Testing.Performance.html",
    "title": "Namespace Composable.Testing.Performance | Composable",
    "keywords": "Namespace Composable.Testing.Performance Classes TimeAsserter TimeAsserter.TimeOutException"
  },
  "api/Composable.Testing.TestEnv.DIContainer.html": {
    "href": "api/Composable.Testing.TestEnv.DIContainer.html",
    "title": "Class TestEnv.DIContainer | Composable",
    "keywords": "Class TestEnv.DIContainer Namespace Composable.Testing Assembly Composable.CQRS.dll public static class TestEnv.DIContainer Inheritance object TestEnv.DIContainer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Current public static DIContainer Current { get; } Property Value DIContainer"
  },
  "api/Composable.Testing.TestEnv.Performance.html": {
    "href": "api/Composable.Testing.TestEnv.Performance.html",
    "title": "Class TestEnv.Performance | Composable",
    "keywords": "Class TestEnv.Performance Namespace Composable.Testing Assembly Composable.CQRS.dll public static class TestEnv.Performance Inheritance object TestEnv.Performance Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields AreOptimizationsDisabled public static readonly bool AreOptimizationsDisabled Field Value bool IsInstrumented public static readonly bool IsInstrumented Field Value bool Methods AdjustForMachineSlowness(TimeSpan?) public static TimeSpan? AdjustForMachineSlowness(TimeSpan? timespan) Parameters timespan TimeSpan? Returns TimeSpan? LogMachineSlownessAdjustment() public static void LogMachineSlownessAdjustment()"
  },
  "api/Composable.Testing.TestEnv.PersistenceLayer.html": {
    "href": "api/Composable.Testing.TestEnv.PersistenceLayer.html",
    "title": "Class TestEnv.PersistenceLayer | Composable",
    "keywords": "Class TestEnv.PersistenceLayer Namespace Composable.Testing Assembly Composable.CQRS.dll Persistence layer members public static class TestEnv.PersistenceLayer Inheritance object TestEnv.PersistenceLayer Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Current public static PersistenceLayer Current { get; } Property Value PersistenceLayer Methods ValueFor<TValue>(TValue, TValue, TValue, TValue, TValue, TValue) public static TValue ValueFor<TValue>(TValue db2 = default, TValue memory = default, TValue msSql = default, TValue mySql = default, TValue orcl = default, TValue pgSql = default) Parameters db2 TValue memory TValue msSql TValue mySql TValue orcl TValue pgSql TValue Returns TValue Type Parameters TValue"
  },
  "api/Composable.Testing.TestEnv.html": {
    "href": "api/Composable.Testing.TestEnv.html",
    "title": "Class TestEnv | Composable",
    "keywords": "Class TestEnv Namespace Composable.Testing Assembly Composable.CQRS.dll TestEnvironment class. Shortened name since it is referenced statically and has nested types public static class TestEnv Inheritance object TestEnv Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods EnvDivide(int, double, double) public static int EnvDivide(this int original, double instrumented = 1, double unoptimized = 1) Parameters original int instrumented double unoptimized double Returns int EnvDivide(long, double, double) public static long EnvDivide(this long original, double instrumented = 1, double unoptimized = 1) Parameters original long instrumented double unoptimized double Returns long EnvDivide(TimeSpan, double, double) public static TimeSpan EnvDivide(this TimeSpan original, double instrumented = 1, double unoptimized = 1) Parameters original TimeSpan instrumented double unoptimized double Returns TimeSpan EnvMultiply(int, double, double) public static int EnvMultiply(this int original, double instrumented = 1, double unoptimized = 1) Parameters original int instrumented double unoptimized double Returns int EnvMultiply(long, double, double) public static long EnvMultiply(this long original, double instrumented = 1, double unoptimized = 1) Parameters original long instrumented double unoptimized double Returns long EnvMultiply(TimeSpan, double, double) public static TimeSpan EnvMultiply(this TimeSpan original, double instrumented = 1, double unoptimized = 1) Parameters original TimeSpan instrumented double unoptimized double Returns TimeSpan"
  },
  "api/Composable.Testing.Threading.TestingTaskRunner.html": {
    "href": "api/Composable.Testing.Threading.TestingTaskRunner.html",
    "title": "Class TestingTaskRunner | Composable",
    "keywords": "Class TestingTaskRunner Namespace Composable.Testing.Threading Assembly Composable.CQRS.dll Runs and monitors tasks on background threads. Throws AggregateException on dispose if any throw exceptions or do not complete within timeout. public sealed class TestingTaskRunner : IDisposable Inheritance object TestingTaskRunner Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors TestingTaskRunner(TimeSpan) Runs and monitors tasks on background threads. Throws AggregateException on dispose if any throw exceptions or do not complete within timeout. public TestingTaskRunner(TimeSpan timeout) Parameters timeout TimeSpan Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Monitor(IEnumerable<Task>) public void Monitor(IEnumerable<Task> tasks) Parameters tasks IEnumerable<Task> Monitor(params Task[]) public void Monitor(params Task[] task) Parameters task Task[] Start(params Action[]) public TestingTaskRunner Start(params Action[] tasks) Parameters tasks Action[] Returns TestingTaskRunner Start(IEnumerable<Action>) public TestingTaskRunner Start(IEnumerable<Action> tasks) Parameters tasks IEnumerable<Action> Returns TestingTaskRunner StartTimes(int, Action) public void StartTimes(int times, Action task) Parameters times int task Action StartTimes(int, Action<int>) public void StartTimes(int times, Action<int> task) Parameters times int task Action<int> StartTimes(int, Func<int, Task>) public void StartTimes(int times, Func<int, Task> task) Parameters times int task Func<int, Task> StartTimes(int, Func<Task>) public void StartTimes(int times, Func<Task> task) Parameters times int task Func<Task> WaitForTasksToComplete() public void WaitForTasksToComplete() WithTimeout(TimeSpan) public static TestingTaskRunner WithTimeout(TimeSpan timeout) Parameters timeout TimeSpan Returns TestingTaskRunner"
  },
  "api/Composable.Testing.Threading.html": {
    "href": "api/Composable.Testing.Threading.html",
    "title": "Namespace Composable.Testing.Threading | Composable",
    "keywords": "Namespace Composable.Testing.Threading Classes TestingTaskRunner Runs and monitors tasks on background threads. Throws AggregateException on dispose if any throw exceptions or do not complete within timeout."
  },
  "api/Composable.Testing.UniversalTestBase.html": {
    "href": "api/Composable.Testing.UniversalTestBase.html",
    "title": "Class UniversalTestBase | Composable",
    "keywords": "Class UniversalTestBase Namespace Composable.Testing Assembly Composable.Testing.dll public class UniversalTestBase Inheritance object UniversalTestBase Derived DuplicateByPluggableComponentTest Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods SurfaceAnyUncatchableExceptions() [TearDown] public void SurfaceAnyUncatchableExceptions()"
  },
  "api/Composable.Testing.UniversalTestFixture.html": {
    "href": "api/Composable.Testing.UniversalTestFixture.html",
    "title": "Class UniversalTestFixture | Composable",
    "keywords": "Class UniversalTestFixture Namespace Composable.Testing Assembly Composable.Testing.dll [SetUpFixture] public class UniversalTestFixture Inheritance object UniversalTestFixture Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods UniversalSetup() [OneTimeSetUp] public void UniversalSetup() UniversalTeardown() [OneTimeTearDown] public Task UniversalTeardown() Returns Task"
  },
  "api/Composable.Testing.html": {
    "href": "api/Composable.Testing.html",
    "title": "Namespace Composable.Testing | Composable",
    "keywords": "Namespace Composable.Testing Namespaces Composable.Testing.Performance Composable.Testing.Threading Classes AssertThrows DuplicateByPluggableComponentTest LevelOfParallelismCEAttribute LongRunningAttribute TestEnv TestEnvironment class. Shortened name since it is referenced statically and has nested types TestEnv.DIContainer TestEnv.Performance TestEnv.PersistenceLayer Persistence layer members UniversalTestBase UniversalTestFixture"
  },
  "api/Composable.Tests.CQRS.AggregateTests.html": {
    "href": "api/Composable.Tests.CQRS.AggregateTests.html",
    "title": "Class AggregateTests | Composable",
    "keywords": "Class AggregateTests Namespace Composable.Tests.CQRS Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class AggregateTests : UniversalTestBase Inheritance object UniversalTestBase AggregateTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ResetEmptiesOutListOfUncommittedEvents() [Test] public void ResetEmptiesOutListOfUncommittedEvents() VersionIncreasesWithEachAppliedEvent() [Test] public void VersionIncreasesWithEachAppliedEvent() When_Raising_event_that_triggers_another_event_both_events_are_outputted_on_the_observable_only_after_the_triggered_event_and_in_the_raised_order() [Test] public void When_Raising_event_that_triggers_another_event_both_events_are_outputted_on_the_observable_only_after_the_triggered_event_and_in_the_raised_order()"
  },
  "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId.NestedEntitiesTests.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId.NestedEntitiesTests.html",
    "title": "Class NestedEntitiesTests | Composable",
    "keywords": "Class NestedEntitiesTests Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class NestedEntitiesTests : UniversalTestBase Inheritance object UniversalTestBase NestedEntitiesTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Aggregate_Component_Component_tests() [Test] public void Aggregate_Component_Component_tests() Aggregate_Component_Entity_tests() [Test] public void Aggregate_Component_Entity_tests() Aggregate_Component_tests() [Test] public void Aggregate_Component_tests() Aggregate_Entity_Entity_tests() [Test] public void Aggregate_Entity_Entity_tests() Aggregate_entity_tests() [Test] public void Aggregate_entity_tests() ConstructorWorks() [Test] public void ConstructorWorks() Setup() [SetUp] public void Setup()"
  },
  "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId.html",
    "title": "Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.GuidId Classes NestedEntitiesTests"
  },
  "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId.NestedEntitiesTests.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId.NestedEntitiesTests.html",
    "title": "Class NestedEntitiesTests | Composable",
    "keywords": "Class NestedEntitiesTests Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class NestedEntitiesTests : UniversalTestBase Inheritance object UniversalTestBase NestedEntitiesTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ComponentPropertiesAreSetcorrectly() [Test] public void ComponentPropertiesAreSetcorrectly() ConstructorWorks() [Test] public void ConstructorWorks() Createing_nested_entities_works_and_events_dispatch_correctly() [Test] public void Createing_nested_entities_works_and_events_dispatch_correctly() EntityNestedInComponentWorks() [Test] public void EntityNestedInComponentWorks() EntityNestedInEntityWorks() [Test] public void EntityNestedInEntityWorks()"
  },
  "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId.html",
    "title": "Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Aggregates.NestedEntitiesTests.IntegerId Classes NestedEntitiesTests"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot : PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.Public1 IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public2 string Public2 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot : PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot, PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot.Public2 PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.Public1 IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public3 string Public3 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot : PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot, PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot.Public4 PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.Public1 IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public2 string Public2 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot : PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot, PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot, PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot.Public2 PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot.Public4 PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.Public1 IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public3 string Public3 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot : PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.Public1 IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public4 string Public4 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot.html",
    "title": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot | Composable",
    "keywords": "Interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public interface PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public1 string Public1 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored : PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root, IEquatable<AggregateEvent>, PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored Implements IEquatable<AggregateEvent> PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root.Public1 AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties IgnoredMember public string IgnoredMember { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public class PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root : AggregateEvent, IEquatable<AggregateEvent>, PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root Implements IEquatable<AggregateEvent> PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Derived PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Public1 public string Public1 { get; set; } Property Value string"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.RootEvent.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests.RootEvent Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public static class PublicSettersAndFieldsAreDisallowedTests.RootEvent Inheritance object PublicSettersAndFieldsAreDisallowedTests.RootEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.PublicSettersAndFieldsAreDisallowedTests.html",
    "title": "Class PublicSettersAndFieldsAreDisallowedTests | Composable",
    "keywords": "Class PublicSettersAndFieldsAreDisallowedTests Namespace Composable.Tests.CQRS.Aggregates Assembly Composable.CQRS.UnitTests.dll public class PublicSettersAndFieldsAreDisallowedTests : UniversalTestBase Inheritance object UniversalTestBase PublicSettersAndFieldsAreDisallowedTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Trying_to_create_instance_of_aggregate_throws_and_lists_all_broken_types_in_exception_except_ignored() [Test] public void Trying_to_create_instance_of_aggregate_throws_and_lists_all_broken_types_in_exception_except_ignored() Trying_to_create_instance_of_component_throws_and_lists_all_broken_types_in_exception() [Test] public void Trying_to_create_instance_of_component_throws_and_lists_all_broken_types_in_exception() Trying_to_create_instance_of_entity_nested_component_throws_and_lists_all_broken_types_in_exception() [Test] public void Trying_to_create_instance_of_entity_nested_component_throws_and_lists_all_broken_types_in_exception() Trying_to_create_instance_of_entity_throws_and_lists_all_broken_types_in_exception() [Test] public void Trying_to_create_instance_of_entity_throws_and_lists_all_broken_types_in_exception() Trying_to_create_instance_of_nested_nested_component_throws_and_lists_all_broken_types_in_exception() [Test] public void Trying_to_create_instance_of_nested_nested_component_throws_and_lists_all_broken_types_in_exception()"
  },
  "api/Composable.Tests.CQRS.Aggregates.html": {
    "href": "api/Composable.Tests.CQRS.Aggregates.html",
    "title": "Namespace Composable.Tests.CQRS.Aggregates | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Aggregates Classes PublicSettersAndFieldsAreDisallowedTests PublicSettersAndFieldsAreDisallowedTests.RootEvent PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent PublicSettersAndFieldsAreDisallowedTests.RootEvent.Ignored PublicSettersAndFieldsAreDisallowedTests.RootEvent.Root Interfaces PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.IRoot PublicSettersAndFieldsAreDisallowedTests.RootEvent.Component.NestedComponent.IRoot PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.IRoot PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.Component.NestedComponent.IRoot PublicSettersAndFieldsAreDisallowedTests.RootEvent.Entity.IRoot PublicSettersAndFieldsAreDisallowedTests.RootEvent.IRoot"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance Derived CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type : CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type Derived CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type() public with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors when_dispatching_an_IUserCreatedEvent() public when_dispatching_an_IUserCreatedEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event : CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcherTests.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcherTests Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public abstract class CallMatchingHandlersInRegistrationOrderEventDispatcherTests Inheritance object CallMatchingHandlersInRegistrationOrderEventDispatcherTests Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IAdminUserCreatedEvent_() [Test] public void IAdminUserCreatedEvent_() IAdminUserEvent_() [Test] public void IAdminUserEvent_() IAdminUserWrapperEvent_of_IAdminUserCreatedEvent() [Test] public void IAdminUserWrapperEvent_of_IAdminUserCreatedEvent() IAdminUserWrapperEvent_of_IAdminUserEvent() [Test] public void IAdminUserWrapperEvent_of_IAdminUserEvent() IAdminUserWrapperEvent_of_IUserCreatedEvent() [Test] public void IAdminUserWrapperEvent_of_IUserCreatedEvent() IAdminUserWrapperEvent_of_IUserEvent() [Test] public void IAdminUserWrapperEvent_of_IUserEvent() IEvent() [Test] public void IEvent() IUserCreatedEvent_() [Test] public void IUserCreatedEvent_() IUserEvent_() [Test] public void IUserEvent_() IUserWrapperEvent_of_IUserCreatedEvent() [Test] public void IUserWrapperEvent_of_IUserCreatedEvent() IUserWrapperEvent_of_IUserEvent() [Test] public void IUserWrapperEvent_of_IUserEvent() IWrapperEvent_of_IEvent() [Test] public void IWrapperEvent_of_IEvent() IWrapperEvent_of_IUserCreatedEvent() [Test] public void IWrapperEvent_of_IUserCreatedEvent() IWrapperEvent_of_IUserEvent() [Test] public void IWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IAdminUserWrapperEvent_of_IUserCreatedEvent() [Test] public void IAdminUserWrapperEvent_of_IUserCreatedEvent() IAdminUserWrapperEvent_of_IUserEvent() [Test] public void IAdminUserWrapperEvent_of_IUserEvent() IEvent() [Test] public void IEvent() IUserCreatedEvent_() [Test] public void IUserCreatedEvent_() IUserEvent_() [Test] public void IUserEvent_() IUserWrapperEvent_of_IUserCreatedEvent() [Test] public void IUserWrapperEvent_of_IUserCreatedEvent() IUserWrapperEvent_of_IUserEvent() [Test] public void IUserWrapperEvent_of_IUserEvent() IWrapperEvent_of_IEvent() [Test] public void IWrapperEvent_of_IEvent() IWrapperEvent_of_IUserCreatedEvent() [Test] public void IWrapperEvent_of_IUserCreatedEvent() IWrapperEvent_of_IUserEvent() [Test] public void IWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IEvent() [Test] public void IEvent() IUserCreatedEvent_() [Test] public void IUserCreatedEvent_() IUserEvent_() [Test] public void IUserEvent_() IWrapperEvent_of_IEvent() [Test] public void IWrapperEvent_of_IEvent() IWrapperEvent_of_IUserCreatedEvent() [Test] public void IWrapperEvent_of_IUserCreatedEvent() IWrapperEvent_of_IUserEvent() [Test] public void IWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IUserWrapperEvent_of_IUserEvent() [Test] public void IUserWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IEvent() [Test] public void IEvent() IUserCreatedEvent_() [Test] public void IUserCreatedEvent_() IUserEvent_() [Test] public void IUserEvent_() IUserWrapperEvent_of_IUserCreatedEvent() [Test] public void IUserWrapperEvent_of_IUserCreatedEvent() IUserWrapperEvent_of_IUserEvent() [Test] public void IUserWrapperEvent_of_IUserEvent() IWrapperEvent_of_IEvent() [Test] public void IWrapperEvent_of_IEvent() IWrapperEvent_of_IUserCreatedEvent() [Test] public void IWrapperEvent_of_IUserCreatedEvent() IWrapperEvent_of_IUserEvent() [Test] public void IWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods _IAdminUserWrapperEvent_of_IUserEvent() [Test] public void _IAdminUserWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IEvent() [Test] public void IEvent() IUserCreatedEvent_() [Test] public void IUserCreatedEvent_() IUserEvent_() [Test] public void IUserEvent_() IWrapperEvent_of_IEvent() [Test] public void IWrapperEvent_of_IEvent() IWrapperEvent_of_IUserCreatedEvent() [Test] public void IWrapperEvent_of_IUserCreatedEvent() IWrapperEvent_of_IUserEvent() [Test] public void IWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IAdminUserWrapperEvent_of_IUserEvent() [Test] public void IAdminUserWrapperEvent_of_IUserEvent() IUserWrapperEvent_of_IUserEvent() [Test] public void IUserWrapperEvent_of_IUserEvent()"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent : CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for Inherited Members CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.SetupTask() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.html",
    "title": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests | Composable",
    "keywords": "Class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Namespace Composable.Tests.CQRS.EventHandling Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests : UniversalTestBase Inheritance object UniversalTestBase CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests Derived CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods SetupTask() [SetUp] public void SetupTask()"
  },
  "api/Composable.Tests.CQRS.EventHandling.html": {
    "href": "api/Composable.Tests.CQRS.EventHandling.html",
    "title": "Namespace Composable.Tests.CQRS.EventHandling | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.EventHandling Classes CallMatchingHandlersInRegistrationOrderEventDispatcherTests CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_BeforeHandlers_2_AfterHandlers_and_1_handler_each_per_4_specific_event_type.when_dispatching_an_IUserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcherTests.Given_an_instance.with_2_registered_handlers_for_the_same_event_type_then_when_dispatching_event CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_AdminUserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_AdminUserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserCreatedEvent.Does_not_dispatch_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_UserWrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Dispatches_to_handler_for CallMatchingHandlersInRegistrationOrderEventDispatcher_WrappedEventsTests.Publishing_WrapperEvent_of_UserCreatedEvent.Does_not_dispatch_to_handler_for"
  },
  "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest.html": {
    "href": "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationPerformanceTest.html",
    "title": "Class EventMigrationPerformanceTest | Composable",
    "keywords": "Class EventMigrationPerformanceTest Namespace Composable.Tests.CQRS.EventRefactoring.Migrations Assembly Composable.PerformanceTests.dll public class EventMigrationPerformanceTest : EventMigrationTestBase Inheritance object UniversalTestBase DuplicateByPluggableComponentTest EventMigrationTestBase EventMigrationPerformanceTest Inherited Members EventMigrationTestBase.ClearCache(IServiceLocator) EventMigrationTestBase.CreateServiceLocatorForEventStoreType(Func<IReadOnlyList<IEventMigration>>) EventMigrationTestBase.AssertStreamsAreIdentical(IReadOnlyList<IAggregateEvent>, IReadOnlyList<IAggregateEvent>, string) UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventMigrationPerformanceTest(string) public EventMigrationPerformanceTest(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Given_a_1000_events_large_aggregate() [OneTimeSetUp] public void Given_a_1000_events_large_aggregate() TearDownTask() [OneTimeTearDown] public Task TearDownTask() Returns Task When_there_are_no_migrations_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_Y_milliseconds_mSSql_20_5_pgSql_20_5_mySql_20_5_orcl_125_5_inMem_10_DB2_30_5() [Test] public Task When_there_are_no_migrations_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_Y_milliseconds_mSSql_20_5_pgSql_20_5_mySql_20_5_orcl_125_5_inMem_10_DB2_30_5() Returns Task With_four_migrations_mutation_that_all_actually_changes_things_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_Y_milliseconds_mSSql_25_5_pgSql_25_5_mySql_25_5_orcl_125_5_inMem_15_DB2_30_5() [Test] public Task With_four_migrations_mutation_that_all_actually_changes_things_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_Y_milliseconds_mSSql_25_5_pgSql_25_5_mySql_25_5_orcl_125_5_inMem_15_DB2_30_5() Returns Task With_four_migrations_that_change_nothing_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_X_milliseconds_mSSql_30_5_pgSql_30_5_mySql_30_5_orcl_120_5_inMem_15_DB2_30_5() [Test] public Task With_four_migrations_that_change_nothing_uncached_loading_takes_less_than_X_milliseconds_cached_less_than_X_milliseconds_mSSql_30_5_pgSql_30_5_mySql_30_5_orcl_120_5_inMem_15_DB2_30_5() Returns Task"
  },
  "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest.html": {
    "href": "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTest.html",
    "title": "Class EventMigrationTest | Composable",
    "keywords": "Class EventMigrationTest Namespace Composable.Tests.CQRS.EventRefactoring.Migrations Assembly Composable.CQRS.Tests.dll public class EventMigrationTest : EventMigrationTestBase Inheritance object UniversalTestBase DuplicateByPluggableComponentTest EventMigrationTestBase EventMigrationTest Inherited Members EventMigrationTestBase.ClearCache(IServiceLocator) EventMigrationTestBase.CreateServiceLocatorForEventStoreType(Func<IReadOnlyList<IEventMigration>>) EventMigrationTestBase.AssertStreamsAreIdentical(IReadOnlyList<IAggregateEvent>, IReadOnlyList<IAggregateEvent>, string) UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventMigrationTest(string) public EventMigrationTest(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Base_class_method_should_detect_incorrect_type_order() [Test] public Task Base_class_method_should_detect_incorrect_type_order() Returns Task Given_Ec1_E1_Ef_Inserting_E3_E4_before_E1_then_E5_before_E4() [Test] public Task Given_Ec1_E1_Ef_Inserting_E3_E4_before_E1_then_E5_before_E4() Returns Task Given_Ec1_E1_Inserting_E2_before_E1_then_E3_before_E2() [Test] public Task Given_Ec1_E1_Inserting_E2_before_E1_then_E3_before_E2() Returns Task Given_Ec1_E1_Inserting_E3_E2_before_E1_then_E4_before_E3_then_E5_before_E4() [Test] public Task Given_Ec1_E1_Inserting_E3_E2_before_E1_then_E4_before_E3_then_E5_before_E4() Returns Task Given_Ec1_E1_before_E1_E2_after_E2_E3_throws_NonIdempotentMigrationDetectedException() [Test] public Task Given_Ec1_E1_before_E1_E2_after_E2_E3_throws_NonIdempotentMigrationDetectedException() Returns Task Inserting_E2_After_E1_Persisting_and_then_Inserting_E3_after_E1() [Test] public Task Inserting_E2_After_E1_Persisting_and_then_Inserting_E3_after_E1() Returns Task Inserting_E2_Before_E1() [Test] public Task Inserting_E2_Before_E1() Returns Task Inserting_E2_Before_E1_Persisting_and_then_Inserting_E3_before_E1() [Test] public Task Inserting_E2_Before_E1_Persisting_and_then_Inserting_E3_before_E1() Returns Task Inserting_E2_after_E1() [Test] public Task Inserting_E2_after_E1() Returns Task Inserting_E2_after_E1_at_end_of_stream() [Test] public Task Inserting_E2_after_E1_at_end_of_stream() Returns Task Inserting_E2_before_E1_then_E3_before_E2() [Test] public Task Inserting_E2_before_E1_then_E3_before_E2() Returns Task Inserting_E3_E4_before_E1() [Test] public Task Inserting_E3_E4_before_E1() Returns Task Inserting_E3_E4_before_E1_then_E5_before_E3() [Test] public Task Inserting_E3_E4_before_E1_then_E5_before_E3() Returns Task Inserting_E3_E4_before_E1_then_E5_before_E3_2() [Test] public Task Inserting_E3_E4_before_E1_then_E5_before_E3_2() Returns Task Inserting_E3_E4_before_E1_then_E5_before_E4_2() [Test] public Task Inserting_E3_E4_before_E1_then_E5_before_E4_2() Returns Task Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6() [Test] public Task Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6() Returns Task Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6_then_replace_Ef_with_E7_then_insert_E8_after_E7() [Test] public Task Inserting_E3_E4_before_E1_then_E5_before_E4_then_replace_E4_with_E6_then_replace_Ef_with_E7_then_insert_E8_after_E7() Returns Task Inserting_E3_before_E1() [Test] public Task Inserting_E3_before_E1() Returns Task PersistingMigrationsOfTheSameAggregateMultipleTimes() [Test] public Task PersistingMigrationsOfTheSameAggregateMultipleTimes() Returns Task PersistingMigrationsOfTheSameAggregateMultipleTimesWithEventsAddedInTheMiddleAndAfter() [Test] public Task PersistingMigrationsOfTheSameAggregateMultipleTimesWithEventsAddedInTheMiddleAndAfter() Returns Task Persisting_migrations_and_then_updating_the_aggregate_from_another_processes_EventStore_results_in_both_processes_seeing_identical_histories() [Test] public Task Persisting_migrations_and_then_updating_the_aggregate_from_another_processes_EventStore_results_in_both_processes_seeing_identical_histories() Returns Task Replacing_E1_with_E2() [Test] public Task Replacing_E1_with_E2() Returns Task Replacing_E1_with_E2_E3() [Test] public Task Replacing_E1_with_E2_E3() Returns Task Replacing_E1_with_E2_E3_2() [Test] public Task Replacing_E1_with_E2_E3_2() Returns Task Replacing_E1_with_E2_E3_at_end_of_stream() [Test] public Task Replacing_E1_with_E2_E3_at_end_of_stream() Returns Task Replacing_E1_with_E2_E3_then_E2_with_E4() [Test] public Task Replacing_E1_with_E2_E3_then_E2_with_E4() Returns Task Replacing_E1_with_E2_E3_then_an_unrelated_migration_v2() [Test] public Task Replacing_E1_with_E2_E3_then_an_unrelated_migration_v2() Returns Task Replacing_E1_with_E2_at_end_of_stream() [Test] public Task Replacing_E1_with_E2_at_end_of_stream() Returns Task Replacing_E1_with_E2_then_irrelevant_migration() [Test] public Task Replacing_E1_with_E2_then_irrelevant_migration() Returns Task UpdatingAnAggregateAfterPersistingMigrations() [Test] public Task UpdatingAnAggregateAfterPersistingMigrations() Returns Task"
  },
  "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTestBase.html": {
    "href": "api/Composable.Tests.CQRS.EventRefactoring.Migrations.EventMigrationTestBase.html",
    "title": "Class EventMigrationTestBase | Composable",
    "keywords": "Class EventMigrationTestBase Namespace Composable.Tests.CQRS.EventRefactoring.Migrations Assembly Composable.CQRS.Tests.dll public abstract class EventMigrationTestBase : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest EventMigrationTestBase Derived EventMigrationPerformanceTest EventMigrationTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventMigrationTestBase(string) protected EventMigrationTestBase(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods AssertStreamsAreIdentical(IReadOnlyList<IAggregateEvent>, IReadOnlyList<IAggregateEvent>, string) protected static void AssertStreamsAreIdentical(IReadOnlyList<IAggregateEvent> expected, IReadOnlyList<IAggregateEvent> migratedHistory, string descriptionOfHistory) Parameters expected IReadOnlyList<IAggregateEvent> migratedHistory IReadOnlyList<IAggregateEvent> descriptionOfHistory string ClearCache(IServiceLocator) protected static void ClearCache(IServiceLocator serviceLocator) Parameters serviceLocator IServiceLocator CreateServiceLocatorForEventStoreType(Func<IReadOnlyList<IEventMigration>>) protected static IServiceLocator CreateServiceLocatorForEventStoreType(Func<IReadOnlyList<IEventMigration>> migrationsfactory) Parameters migrationsfactory Func<IReadOnlyList<IEventMigration>> Returns IServiceLocator"
  },
  "api/Composable.Tests.CQRS.EventRefactoring.Migrations.html": {
    "href": "api/Composable.Tests.CQRS.EventRefactoring.Migrations.html",
    "title": "Namespace Composable.Tests.CQRS.EventRefactoring.Migrations | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.EventRefactoring.Migrations Classes EventMigrationPerformanceTest EventMigrationTest EventMigrationTestBase"
  },
  "api/Composable.Tests.CQRS.EventStoreTests.html": {
    "href": "api/Composable.Tests.CQRS.EventStoreTests.html",
    "title": "Class EventStoreTests | Composable",
    "keywords": "Class EventStoreTests Namespace Composable.Tests.CQRS Assembly Composable.CQRS.Tests.dll public class EventStoreTests : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest EventStoreTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventStoreTests(string) public EventStoreTests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods DeleteEventsDeletesTheEventsForOnlyTheSpecifiedAggregate() [Test] public void DeleteEventsDeletesTheEventsForOnlyTheSpecifiedAggregate() Does_not_call_db_in_constructor() [Test] public void Does_not_call_db_in_constructor() GetListOfAggregateIds() [Test] public void GetListOfAggregateIds() GetListOfAggregateIdsUsingEventType() [Test] public void GetListOfAggregateIdsUsingEventType() SetupTask() [SetUp] public void SetupTask() ShouldCacheEventsBetweenInstancesTransaction() [Test] public void ShouldCacheEventsBetweenInstancesTransaction() ShouldNotCacheEventsSavedDuringFailedTransactionEvenIfReadDuringSameTransaction() [Test] public void ShouldNotCacheEventsSavedDuringFailedTransactionEvenIfReadDuringSameTransaction() StreamEventsSinceReturnsWholeEventLogWhenFetchingALargeNumberOfEvents_EnsureBatchingDoesNotBreakThings() [Test] public void StreamEventsSinceReturnsWholeEventLogWhenFetchingALargeNumberOfEvents_EnsureBatchingDoesNotBreakThings() StreamEventsSinceReturnsWholeEventLogWhenFromEventIdIsNull() [Test] public void StreamEventsSinceReturnsWholeEventLogWhenFromEventIdIsNull() TearDownTask() [TearDown] public Task TearDownTask() Returns Task"
  },
  "api/Composable.Tests.CQRS.EventStoreUpdaterTest.html": {
    "href": "api/Composable.Tests.CQRS.EventStoreUpdaterTest.html",
    "title": "Class EventStoreUpdaterTest | Composable",
    "keywords": "Class EventStoreUpdaterTest Namespace Composable.Tests.CQRS Assembly Composable.CQRS.Tests.dll public class EventStoreUpdaterTest : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest EventStoreUpdaterTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors EventStoreUpdaterTest(string) public EventStoreUpdaterTest(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods AggregateCannotBeRetrievedAfterBeingDeleted() [Test] public void AggregateCannotBeRetrievedAfterBeingDeleted() CanLoadSpecificVersionOfAggregate() [Test] public void CanLoadSpecificVersionOfAggregate() CanSaveAndLoadAggregate() [Test] public void CanSaveAndLoadAggregate() Concurrent_read_only_access_to_aggregate_history_can_occur_in_parallel() [Test] [EnableRdi(false)] public void Concurrent_read_only_access_to_aggregate_history_can_occur_in_parallel() DeletingAnAggregateDoesNotPreventEventsFromItFromBeingRaised() [Test] public void DeletingAnAggregateDoesNotPreventEventsFromItFromBeingRaised() DoesNotExplodeWhenSavingMoreThan10Events() [Test] public void DoesNotExplodeWhenSavingMoreThan10Events() DoesNotUpdateAggregatesLoadedViaSpecificVersion() [Test] public void DoesNotUpdateAggregatesLoadedViaSpecificVersion() EventsArePublishedImmediatelyOnAggregateChanges() [Test] public void EventsArePublishedImmediatelyOnAggregateChanges() Events_should_be_published_immediately() [Test] public void Events_should_be_published_immediately() If_an_updater_is_used_in_two_transactions_an_exception_is_thrown() [Test] public void If_an_updater_is_used_in_two_transactions_an_exception_is_thrown() If_the_first_transaction_to_insert_an_event_of_specific_type_fails_the_next_succeeds() [Test] public void If_the_first_transaction_to_insert_an_event_of_specific_type_fails_the_next_succeeds() InsertNewEventType_should_not_throw_exception_if_the_event_type_has_been_inserted_by_something_else() [Test] public Task InsertNewEventType_should_not_throw_exception_if_the_event_type_has_been_inserted_by_something_else() Returns Task ResetsAggregatesAfterSaveChanges() [Test] public void ResetsAggregatesAfterSaveChanges() ReturnsSameInstanceOnLoadAfterSave() [Test] public void ReturnsSameInstanceOnLoadAfterSave() ReturnsSameInstanceOnRepeatedLoads() [Test] public void ReturnsSameInstanceOnRepeatedLoads() Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed() [Test] public void Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed() Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed_even_if_history_has_been_read_outside_of_modifying_transactions() [Test] public void Serializes_access_to_an_aggregate_so_that_concurrent_transactions_succeed_even_if_history_has_been_read_outside_of_modifying_transactions() SetupBus() [SetUp] public void SetupBus() TearDownTask() [TearDown] public Task TearDownTask() Returns Task ThrowsIfUsedByMultipleThreads() [Test] public void ThrowsIfUsedByMultipleThreads() ThrowsWhenAttemptingToSaveExistingAggregate() [Test] public void ThrowsWhenAttemptingToSaveExistingAggregate() TracksAndUpdatesLoadedAggregates() [Test] public void TracksAndUpdatesLoadedAggregates() UseInScope(Action<IEventStoreUpdater>) protected void UseInScope(Action<IEventStoreUpdater> useSession) Parameters useSession Action<IEventStoreUpdater> UseInTransactionalScope(Action<IEventStoreUpdater>) protected void UseInTransactionalScope(Action<IEventStoreUpdater> useSession) Parameters useSession Action<IEventStoreUpdater> WhenFetchingAggregateThatDoesNotExistNoSuchAggregateExceptionIsThrown() [Test] public void WhenFetchingAggregateThatDoesNotExistNoSuchAggregateExceptionIsThrown() When_deleting_and_then_fetching_an_aggregates_history_the_history_should_be_gone() [Test] public void When_deleting_and_then_fetching_an_aggregates_history_the_history_should_be_gone() When_fetching_and_deleting_an_aggregate_then_fetching_history_again_the_history_should_be_gone() [Test] public void When_fetching_and_deleting_an_aggregate_then_fetching_history_again_the_history_should_be_gone() When_fetching_history_from_the_same_instance_after_updating_an_aggregate_the_fetched_history_includes_the_new_events() [Test] public void When_fetching_history_from_the_same_instance_after_updating_an_aggregate_the_fetched_history_includes_the_new_events()"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events.IAccountEvent.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events.IAccountEvent.html",
    "title": "Interface IAccountEvent | Composable",
    "keywords": "Interface IAccountEvent Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events Assembly Composable.CQRS.Tests.dll public interface IAccountEvent : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events.html",
    "title": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.Events Interfaces IAccountEvent"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.AccountQueryModelGenerator.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.AccountQueryModelGenerator.html",
    "title": "Class AccountQueryModelGenerator | Composable",
    "keywords": "Class AccountQueryModelGenerator Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels Assembly Composable.CQRS.Tests.dll public class AccountQueryModelGenerator : SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader>, IQueryModelGenerator Inheritance object SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader> AccountQueryModelGenerator Implements IQueryModelGenerator Inherited Members SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader>.Model SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader>.RegisterHandlers() SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader>.TryGenerate(Guid) SingleAggregateQueryModelGenerator<AccountQueryModelGenerator, MyAccountQueryModel, IAccountEvent, IEventStoreReader>.TryGenerate(Guid, int) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors AccountQueryModelGenerator(IEventStoreReader) public AccountQueryModelGenerator(IEventStoreReader session) Parameters session IEventStoreReader"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.MyAccountQueryModel.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.MyAccountQueryModel.html",
    "title": "Class MyAccountQueryModel | Composable",
    "keywords": "Class MyAccountQueryModel Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels Assembly Composable.CQRS.Tests.dll [UsedImplicitly] public class MyAccountQueryModel : ISingleAggregateQueryModel, IHasPersistentIdentity<Guid> Inheritance object MyAccountQueryModel Implements ISingleAggregateQueryModel IHasPersistentIdentity<Guid> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Id The unique identifier for this instance. public Guid Id { get; } Property Value Guid Methods SetId(Guid) public void SetId(Guid id) Parameters id Guid"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels.html",
    "title": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated.Domain.UI.QueryModels Classes AccountQueryModelGenerator MyAccountQueryModel"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.QueryModelGeneratingDocumentDbReaderTests.html",
    "title": "Class QueryModelGeneratingDocumentDbReaderTests | Composable",
    "keywords": "Class QueryModelGeneratingDocumentDbReaderTests Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated Assembly Composable.CQRS.Tests.dll public class QueryModelGeneratingDocumentDbReaderTests : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest QueryModelGeneratingDocumentDbReaderTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors QueryModelGeneratingDocumentDbReaderTests(string) public QueryModelGeneratingDocumentDbReaderTests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods CanFetchQueryModelAfterAggregateHasBeenCreated() [Test] public void CanFetchQueryModelAfterAggregateHasBeenCreated() CanReturnPreviousVersionsOfQueryModel() [Test] public void CanReturnPreviousVersionsOfQueryModel() CreateContainer() [SetUp] public void CreateContainer() ReturnsUpdatedDataAfterTransactionHasCommitted() [Test] public void ReturnsUpdatedDataAfterTransactionHasCommitted() TearDownTask() [TearDown] public Task TearDownTask() Returns Task ThrowsExceptionIfInstanceDoesNotExist() [Test] public void ThrowsExceptionIfInstanceDoesNotExist() ThrowsExceptionWhenTryingToFetchDeletedEntity() [Test] public void ThrowsExceptionWhenTryingToFetchDeletedEntity()"
  },
  "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.html": {
    "href": "api/Composable.Tests.CQRS.Query.Models.AutoGenerated.html",
    "title": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated | Composable",
    "keywords": "Namespace Composable.Tests.CQRS.Query.Models.AutoGenerated Classes QueryModelGeneratingDocumentDbReaderTests"
  },
  "api/Composable.Tests.CQRS.html": {
    "href": "api/Composable.Tests.CQRS.html",
    "title": "Namespace Composable.Tests.CQRS | Composable",
    "keywords": "Namespace Composable.Tests.CQRS Classes AggregateTests EventStoreTests EventStoreUpdaterTest"
  },
  "api/Composable.Tests.Contracts.EnumerableEmptyTests.html": {
    "href": "api/Composable.Tests.Contracts.EnumerableEmptyTests.html",
    "title": "Class EnumerableEmptyTests | Composable",
    "keywords": "Class EnumerableEmptyTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class EnumerableEmptyTests : UniversalTestBase Inheritance object UniversalTestBase EnumerableEmptyTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ThrowsEnumerableIsEmptyException() [Test] public void ThrowsEnumerableIsEmptyException()"
  },
  "api/Composable.Tests.Contracts.ExpressionValueExtractorTests.html": {
    "href": "api/Composable.Tests.Contracts.ExpressionValueExtractorTests.html",
    "title": "Class ExpressionValueExtractorTests | Composable",
    "keywords": "Class ExpressionValueExtractorTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ExpressionValueExtractorTests : UniversalTestBase Inheritance object UniversalTestBase ExpressionValueExtractorTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ExtractsValueFromParameterAccess() [Test] public void ExtractsValueFromParameterAccess() ExtractsValueFromPropertyAccessLambda() [Test] public void ExtractsValueFromPropertyAccessLambda() ExtractsValuesFromFieldAccessingLambdas() [Test] public void ExtractsValuesFromFieldAccessingLambdas()"
  },
  "api/Composable.Tests.Contracts.GuidNotEmptyTests.html": {
    "href": "api/Composable.Tests.Contracts.GuidNotEmptyTests.html",
    "title": "Class GuidNotEmptyTests | Composable",
    "keywords": "Class GuidNotEmptyTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class GuidNotEmptyTests : UniversalTestBase Inheritance object UniversalTestBase GuidNotEmptyTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods NotEmptyThrowsArgumentExceptionForEmptyGuid() [Test] public void NotEmptyThrowsArgumentExceptionForEmptyGuid() NotEmptyThrowsArgumentExceptionForEmptyGuidAlternative() [Test] public void NotEmptyThrowsArgumentExceptionForEmptyGuidAlternative()"
  },
  "api/Composable.Tests.Contracts.LambdaBasedArgumentSpecsPerformanceTests.html": {
    "href": "api/Composable.Tests.Contracts.LambdaBasedArgumentSpecsPerformanceTests.html",
    "title": "Class LambdaBasedArgumentSpecsPerformanceTests | Composable",
    "keywords": "Class LambdaBasedArgumentSpecsPerformanceTests Namespace Composable.Tests.Contracts Assembly Composable.PerformanceTests.dll [TestFixture] public class LambdaBasedArgumentSpecsPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase LambdaBasedArgumentSpecsPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldRun10_000TestsIn30Millisecond() [Test] public void ShouldRun10_000TestsIn30Millisecond()"
  },
  "api/Composable.Tests.Contracts.LambdaBasedArgumentSpecsTests.html": {
    "href": "api/Composable.Tests.Contracts.LambdaBasedArgumentSpecsTests.html",
    "title": "Class LambdaBasedArgumentSpecsTests | Composable",
    "keywords": "Class LambdaBasedArgumentSpecsTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class LambdaBasedArgumentSpecsTests : UniversalTestBase Inheritance object UniversalTestBase LambdaBasedArgumentSpecsTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CorrectlyExtractsParameterNamesAndValues() [Test] public void CorrectlyExtractsParameterNamesAndValues() ThrowsIllegalArgumentAccessLambdaIfTheLambdaAccessesALiteral() [Test] public void ThrowsIllegalArgumentAccessLambdaIfTheLambdaAccessesALiteral()"
  },
  "api/Composable.Tests.Contracts.ManualInspectionTests.html": {
    "href": "api/Composable.Tests.Contracts.ManualInspectionTests.html",
    "title": "Class ManualInspectionTests | Composable",
    "keywords": "Class ManualInspectionTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ManualInspectionTests : UniversalTestBase Inheritance object UniversalTestBase ManualInspectionTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ThrownContractExceptionIfTestDoesNotPass() [Test] public void ThrownContractExceptionIfTestDoesNotPass() ThrowsExceptionMatchingParameterNameIfTestDoesNotPass() [Test] public void ThrowsExceptionMatchingParameterNameIfTestDoesNotPass()"
  },
  "api/Composable.Tests.Contracts.NotNullOrEmptyOrWhitespaceTests.html": {
    "href": "api/Composable.Tests.Contracts.NotNullOrEmptyOrWhitespaceTests.html",
    "title": "Class NotNullOrEmptyOrWhitespaceTests | Composable",
    "keywords": "Class NotNullOrEmptyOrWhitespaceTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class NotNullOrEmptyOrWhitespaceTests : UniversalTestBase Inheritance object UniversalTestBase NotNullOrEmptyOrWhitespaceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldUseArgumentNameForException() [Test] public void ShouldUseArgumentNameForException() ThrowsArgumentNullForNullArguments() [Test] public void ThrowsArgumentNullForNullArguments() ThrowsStringIsEmptyArgumentExceptionForEmptyStrings() [Test] public void ThrowsStringIsEmptyArgumentExceptionForEmptyStrings() ThrowsStringIsWhiteSpaceExceptionForStringConsistingOfTabsSpacesOrLineBreaks() [Test] public void ThrowsStringIsWhiteSpaceExceptionForStringConsistingOfTabsSpacesOrLineBreaks()"
  },
  "api/Composable.Tests.Contracts.ObjectNotDefaultPerformanceTests.html": {
    "href": "api/Composable.Tests.Contracts.ObjectNotDefaultPerformanceTests.html",
    "title": "Class ObjectNotDefaultPerformanceTests | Composable",
    "keywords": "Class ObjectNotDefaultPerformanceTests Namespace Composable.Tests.Contracts Assembly Composable.PerformanceTests.dll [TestFixture] public class ObjectNotDefaultPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase ObjectNotDefaultPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldRun300TestsIn1Millisecond() [Test] public void ShouldRun300TestsIn1Millisecond() ShouldRun300TestsIn1Milliseconds() [Test] public void ShouldRun300TestsIn1Milliseconds()"
  },
  "api/Composable.Tests.Contracts.ObjectNotDefaultTests.html": {
    "href": "api/Composable.Tests.Contracts.ObjectNotDefaultTests.html",
    "title": "Class ObjectNotDefaultTests | Composable",
    "keywords": "Class ObjectNotDefaultTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ObjectNotDefaultTests : UniversalTestBase Inheritance object UniversalTestBase ObjectNotDefaultTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ThrowsObjectIsDefaultExceptionIfAnyValueIsDefault() [Test] public void ThrowsObjectIsDefaultExceptionIfAnyValueIsDefault()"
  },
  "api/Composable.Tests.Contracts.ObjectNotNullOrDefaultTests.html": {
    "href": "api/Composable.Tests.Contracts.ObjectNotNullOrDefaultTests.html",
    "title": "Class ObjectNotNullOrDefaultTests | Composable",
    "keywords": "Class ObjectNotNullOrDefaultTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ObjectNotNullOrDefaultTests : UniversalTestBase Inheritance object UniversalTestBase ObjectNotNullOrDefaultTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ThrowsArgumentNullExceptionIfAnyValueIsNull() [Test] public void ThrowsArgumentNullExceptionIfAnyValueIsNull() ThrowsObjectIsDefaultExceptionIfAnyValueIsDefault() [Test] public void ThrowsObjectIsDefaultExceptionIfAnyValueIsDefault()"
  },
  "api/Composable.Tests.Contracts.ObjectNotNullTests.html": {
    "href": "api/Composable.Tests.Contracts.ObjectNotNullTests.html",
    "title": "Class ObjectNotNullTests | Composable",
    "keywords": "Class ObjectNotNullTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ObjectNotNullTests : UniversalTestBase Inheritance object UniversalTestBase ObjectNotNullTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ThrowsObjectNullExceptionForNullValues() [Test] public void ThrowsObjectNullExceptionForNullValues() UsesArgumentNameForExceptionmessage() [Test] public void UsesArgumentNameForExceptionmessage()"
  },
  "api/Composable.Tests.Contracts.ReturnTests.html": {
    "href": "api/Composable.Tests.Contracts.ReturnTests.html",
    "title": "Class ReturnTests | Composable",
    "keywords": "Class ReturnTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ReturnTests : UniversalTestBase Inheritance object UniversalTestBase ReturnTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods TestName() [Test] public void TestName()"
  },
  "api/Composable.Tests.Contracts.StringNotNullOrEmptyTests.html": {
    "href": "api/Composable.Tests.Contracts.StringNotNullOrEmptyTests.html",
    "title": "Class StringNotNullOrEmptyTests | Composable",
    "keywords": "Class StringNotNullOrEmptyTests Namespace Composable.Tests.Contracts Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class StringNotNullOrEmptyTests : UniversalTestBase Inheritance object UniversalTestBase StringNotNullOrEmptyTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods NotEmptyThrowsStringIsEmptyArgumentExceptionForEmptyString() [Test] public void NotEmptyThrowsStringIsEmptyArgumentExceptionForEmptyString() ThrowsObjectIsNullForNullStrings() [Test] public void ThrowsObjectIsNullForNullStrings() ThrowsStringIsEmptyForEmptyStrings() [Test] public void ThrowsStringIsEmptyForEmptyStrings() UsesArgumentNameForExceptionMessage() [Test] public void UsesArgumentNameForExceptionMessage()"
  },
  "api/Composable.Tests.Contracts.html": {
    "href": "api/Composable.Tests.Contracts.html",
    "title": "Namespace Composable.Tests.Contracts | Composable",
    "keywords": "Namespace Composable.Tests.Contracts Classes EnumerableEmptyTests ExpressionValueExtractorTests GuidNotEmptyTests LambdaBasedArgumentSpecsPerformanceTests LambdaBasedArgumentSpecsTests ManualInspectionTests NotNullOrEmptyOrWhitespaceTests ObjectNotDefaultPerformanceTests ObjectNotDefaultTests ObjectNotNullOrDefaultTests ObjectNotNullTests ReturnTests StringNotNullOrEmptyTests"
  },
  "api/Composable.Tests.DDD.PersistentEntityTests.html": {
    "href": "api/Composable.Tests.DDD.PersistentEntityTests.html",
    "title": "Class PersistentEntityTests | Composable",
    "keywords": "Class PersistentEntityTests Namespace Composable.Tests.DDD Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class PersistentEntityTests : UniversalTestBase Inheritance object UniversalTestBase PersistentEntityTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ComparisonWithLhsNullAndRhsNullReturnsTrue() [Test] public void ComparisonWithLhsNullAndRhsNullReturnsTrue() ComparisonWithLhsNullReturnsFalse() [Test] public void ComparisonWithLhsNullReturnsFalse() ComparisonWithRhsNullReturnsFalse() [Test] public void ComparisonWithRhsNullReturnsFalse() InstanceEqualsItself() [Test] public void InstanceEqualsItself() IntstanceEqualsOtherInstanceWithSameId() [Test] public void IntstanceEqualsOtherInstanceWithSameId() IntstanceNotEqualToinstanceWithOtherId() [Test] public void IntstanceNotEqualToinstanceWithOtherId() IntstancesWithSameIdHasSameHashCode() [Test] public void IntstancesWithSameIdHasSameHashCode()"
  },
  "api/Composable.Tests.DDD.ValueObjectTests.html": {
    "href": "api/Composable.Tests.DDD.ValueObjectTests.html",
    "title": "Class ValueObjectTests | Composable",
    "keywords": "Class ValueObjectTests Namespace Composable.Tests.DDD Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ValueObjectTests : UniversalTestBase Inheritance object UniversalTestBase ValueObjectTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods AddressEqualsIsReflexive() [Test] public void AddressEqualsIsReflexive() AddressEqualsIsSymmetric() [Test] public void AddressEqualsIsSymmetric() AddressEqualsIsTransitive() [Test] public void AddressEqualsIsTransitive() AddressEqualsWorksWithIdenticalAddresses() [Test] public void AddressEqualsWorksWithIdenticalAddresses() AddressEqualsWorksWithNonIdenticalGuids() [Test] public void AddressEqualsWorksWithNonIdenticalGuids() AddressEqualsWorksWithNulls() [Test] public void AddressEqualsWorksWithNulls() AddressEqualsWorksWithNullsOnOtherObject() [Test] public void AddressEqualsWorksWithNullsOnOtherObject() AddressOperatorsWork() [Test] public void AddressOperatorsWork() ComparisonWithLhsNullAndRhsNullReturnsTrue() [Test] public void ComparisonWithLhsNullAndRhsNullReturnsTrue() ComparisonWithLhsNullReturnsFalse() [Test] public void ComparisonWithLhsNullReturnsFalse() ComparisonWithRhsNullReturnsFalse() [Test] public void ComparisonWithRhsNullReturnsFalse() DerivedTypesBehaveCorrectly() [Test] public void DerivedTypesBehaveCorrectly() DerivedTypesHashCodesBehaveCorrectly() [Test] public void DerivedTypesHashCodesBehaveCorrectly() DifferentNumberOfEntriesInArrayMeansHashAreNotEqual() [Test] public void DifferentNumberOfEntriesInArrayMeansHashAreNotEqual() DifferentNumberOfEntriesInArrayMeansObjectAreNotEqual() [Test] public void DifferentNumberOfEntriesInArrayMeansObjectAreNotEqual() EnumerablesHandleNulls() [Test] public void EnumerablesHandleNulls() EqualValueObjectsHaveSameHashCode() [Test] public void EqualValueObjectsHaveSameHashCode() EqualValuesInEnumerableObjectsHaveSameHashCode() [Test] public void EqualValuesInEnumerableObjectsHaveSameHashCode() GuidEqualsWorksWithIdenticalGuid() [Test] public void GuidEqualsWorksWithIdenticalGuid() GuidEqualsWorksWithNonIdenticalGuid() [Test] public void GuidEqualsWorksWithNonIdenticalGuid() MultipleValuesInEnumerableAreStillEqual() [Test] public void MultipleValuesInEnumerableAreStillEqual() TransposedValuesGiveDifferentHashCodes() [Test] public void TransposedValuesGiveDifferentHashCodes() TransposedValuesOfFieldNamesGivesDifferentHashCodes() [Test] public void TransposedValuesOfFieldNamesGivesDifferentHashCodes() UnequalValueObjectsHaveDifferentHashCodes() [Test] public void UnequalValueObjectsHaveDifferentHashCodes()"
  },
  "api/Composable.Tests.DDD.ValueObjectToString.html": {
    "href": "api/Composable.Tests.DDD.ValueObjectToString.html",
    "title": "Class ValueObjectToString | Composable",
    "keywords": "Class ValueObjectToString Namespace Composable.Tests.DDD Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ValueObjectToString : UniversalTestBase Inheritance object UniversalTestBase ValueObjectToString Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ReturnsHierarchicalDescriptionOfData() [Test] public void ReturnsHierarchicalDescriptionOfData()"
  },
  "api/Composable.Tests.DDD.ValueObjectsWithCollectionsTests.html": {
    "href": "api/Composable.Tests.DDD.ValueObjectsWithCollectionsTests.html",
    "title": "Class ValueObjectsWithCollectionsTests | Composable",
    "keywords": "Class ValueObjectsWithCollectionsTests Namespace Composable.Tests.DDD Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ValueObjectsWithCollectionsTests : UniversalTestBase Inheritance object UniversalTestBase ValueObjectsWithCollectionsTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods DifferingCollectionsShouldNotBeEqual() [Test] public void DifferingCollectionsShouldNotBeEqual() DifferingPropertiesShouldReturnFalse() [Test] public void DifferingPropertiesShouldReturnFalse() IdenticalCollectionsShouldBeEqual() [Test] public void IdenticalCollectionsShouldBeEqual() IdenticalInCollectionShouldBeEqual() [Test] public void IdenticalInCollectionShouldBeEqual() IfBothCollectionsAreNullObjectsAreEqual() [Test] public void IfBothCollectionsAreNullObjectsAreEqual() IfOneCollectionIsNullObjectsAreNotEqual() [Test] public void IfOneCollectionIsNullObjectsAreNotEqual() PropertiesDifferingInCollectionShouldNotBeEqual() [Test] public void PropertiesDifferingInCollectionShouldNotBeEqual()"
  },
  "api/Composable.Tests.DDD.html": {
    "href": "api/Composable.Tests.DDD.html",
    "title": "Namespace Composable.Tests.DDD | Composable",
    "keywords": "Namespace Composable.Tests.DDD Classes PersistentEntityTests ValueObjectTests ValueObjectToString ValueObjectsWithCollectionsTests"
  },
  "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.After_Creating_Two_Dbs_Named_DB1_And_DB2.html": {
    "href": "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.After_Creating_Two_Dbs_Named_DB1_And_DB2.html",
    "title": "Class After_Creating_Two_Dbs_Named_DB1_And_DB2 | Composable",
    "keywords": "Class After_Creating_Two_Dbs_Named_DB1_And_DB2 Namespace Composable.Tests.ExternalDependencies.DatabasePoolTests Assembly Composable.CQRS.UnitTests.dll public class After_Creating_Two_Dbs_Named_DB1_And_DB2 : DbPoolTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest DbPoolTest After_Creating_Two_Dbs_Named_DB1_And_DB2 Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors After_Creating_Two_Dbs_Named_DB1_And_DB2(string) public After_Creating_Two_Dbs_Named_DB1_And_DB2(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Connection_to_Db1_can_be_opened_and_used() [Test] public void Connection_to_Db1_can_be_opened_and_used() Connection_to_Db2_can_be_opened_and_used() [Test] public void Connection_to_Db2_can_be_opened_and_used() SetupTask() [SetUp] public void SetupTask() TearDownTask() [TearDown] public void TearDownTask() The_Db1_connectionstring_is_different_from_the_Db2_connection_string() [Test] public void The_Db1_connectionstring_is_different_from_the_Db2_connection_string() The_same_connection_string_is_returned_by_each_call_to_CreateOrGetLocalDb_Db1() [Test] public void The_same_connection_string_is_returned_by_each_call_to_CreateOrGetLocalDb_Db1() The_same_connection_string_is_returned_by_each_call_to_CreateOrGetLocalDb_Db2() [Test] public void The_same_connection_string_is_returned_by_each_call_to_CreateOrGetLocalDb_Db2()"
  },
  "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.DbPoolPerformanceTests.html": {
    "href": "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.DbPoolPerformanceTests.html",
    "title": "Class DbPoolPerformanceTests | Composable",
    "keywords": "Class DbPoolPerformanceTests Namespace Composable.Tests.ExternalDependencies.DatabasePoolTests Assembly Composable.PerformanceTests.dll public class DbPoolPerformanceTests : DbPoolTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest DbPoolTest DbPoolPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DbPoolPerformanceTests(string) public DbPoolPerformanceTests(string _) Parameters _ string Methods Multiple_threads_can_reserve_and_release_5_differently_named_databases_in_milliseconds_msSql_125_mySql_175_pgSql_400_orcl_400_db2_100() [Test] public void Multiple_threads_can_reserve_and_release_5_differently_named_databases_in_milliseconds_msSql_125_mySql_175_pgSql_400_orcl_400_db2_100() Multiple_threads_can_reserve_and_release_5_identically_named_databases_in_milliseconds_db2_50_msSql_50_mySql_75_orcl_100_pgSql_25() [Test] public void Multiple_threads_can_reserve_and_release_5_identically_named_databases_in_milliseconds_db2_50_msSql_50_mySql_75_orcl_100_pgSql_25() Once_DB_Fetched_Can_use_XX_connections_in_10_millisecond_db2_50_MsSql_180_MySql_24_Oracle_140_PgSql_300() [Test] public void Once_DB_Fetched_Can_use_XX_connections_in_10_millisecond_db2_50_MsSql_180_MySql_24_Oracle_140_PgSql_300() Repeated_fetching_of_same_connection_runs_20_times_in_1_milliseconds() [Test] public void Repeated_fetching_of_same_connection_runs_20_times_in_1_milliseconds() Single_thread_can_reserve_and_release_5_differently_named_databases_in_milliseconds_msSql_100_mySql_100_pgSql_500_orcl_300_db2_100() [Test] public void Single_thread_can_reserve_and_release_5_differently_named_databases_in_milliseconds_msSql_100_mySql_100_pgSql_500_orcl_300_db2_100() Single_thread_can_reserve_and_release_5_identically_named_databases_in_milliseconds_msSql_150_mySql_150_pgSql_150_orcl_300_db2_150() [Test] public void Single_thread_can_reserve_and_release_5_identically_named_databases_in_milliseconds_msSql_150_mySql_150_pgSql_150_orcl_300_db2_150() WarmUpCache() [OneTimeSetUp] public void WarmUpCache()"
  },
  "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.DbPoolTest.html": {
    "href": "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.DbPoolTest.html",
    "title": "Class DbPoolTest | Composable",
    "keywords": "Class DbPoolTest Namespace Composable.Tests.ExternalDependencies.DatabasePoolTests Assembly Composable.CQRS.UnitTests.dll public class DbPoolTest : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest DbPoolTest Derived After_Creating_Two_Dbs_Named_DB1_And_DB2 DbPoolPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors DbPoolTest(string) public DbPoolTest(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string"
  },
  "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.html": {
    "href": "api/Composable.Tests.ExternalDependencies.DatabasePoolTests.html",
    "title": "Namespace Composable.Tests.ExternalDependencies.DatabasePoolTests | Composable",
    "keywords": "Namespace Composable.Tests.ExternalDependencies.DatabasePoolTests Classes After_Creating_Two_Dbs_Named_DB1_And_DB2 DbPoolPerformanceTests DbPoolTest"
  },
  "api/Composable.Tests.GenericAbstractions.Time.DateTimeNowTimeSourceTests.html": {
    "href": "api/Composable.Tests.GenericAbstractions.Time.DateTimeNowTimeSourceTests.html",
    "title": "Class DateTimeNowTimeSourceTests | Composable",
    "keywords": "Class DateTimeNowTimeSourceTests Namespace Composable.Tests.GenericAbstractions.Time Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DateTimeNowTimeSourceTests : UniversalTestBase Inheritance object UniversalTestBase DateTimeNowTimeSourceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods UtcNow_should_return_within_100_milliseconds_of_DateTimeNow() [Test] public void UtcNow_should_return_within_100_milliseconds_of_DateTimeNow()"
  },
  "api/Composable.Tests.GenericAbstractions.Time.DummyTimeSourceTests.html": {
    "href": "api/Composable.Tests.GenericAbstractions.Time.DummyTimeSourceTests.html",
    "title": "Class DummyTimeSourceTests | Composable",
    "keywords": "Class DummyTimeSourceTests Namespace Composable.Tests.GenericAbstractions.Time Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DummyTimeSourceTests : UniversalTestBase Inheritance object UniversalTestBase DummyTimeSourceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods FromUtcTime_returns_an_instance_with_UtcTime_equal_to_supplied_value() [Test] public void FromUtcTime_returns_an_instance_with_UtcTime_equal_to_supplied_value() Now_should_return_within_100_millisecond_of_datetime_UtcNow() [Test] public void Now_should_return_within_100_millisecond_of_datetime_UtcNow() Passing_a_parsed_date_to_FromUtcTime_results_in_UtcNow_being_that_date() [Test] public void Passing_a_parsed_date_to_FromUtcTime_results_in_UtcNow_being_that_date()"
  },
  "api/Composable.Tests.GenericAbstractions.Time.html": {
    "href": "api/Composable.Tests.GenericAbstractions.Time.html",
    "title": "Namespace Composable.Tests.GenericAbstractions.Time | Composable",
    "keywords": "Namespace Composable.Tests.GenericAbstractions.Time Classes DateTimeNowTimeSourceTests DummyTimeSourceTests"
  },
  "api/Composable.Tests.IO.DirectoryExtensionsTest.html": {
    "href": "api/Composable.Tests.IO.DirectoryExtensionsTest.html",
    "title": "Class DirectoryExtensionsTest | Composable",
    "keywords": "Class DirectoryExtensionsTest Namespace Composable.Tests.IO Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DirectoryExtensionsTest : UniversalTestBase Inheritance object UniversalTestBase DirectoryExtensionsTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods AsDirectoryShouldReturnDirectoryInfoWithFullNameBeingTheOriginalString() [Test] public void AsDirectoryShouldReturnDirectoryInfoWithFullNameBeingTheOriginalString() DeleteRecursiveShouldRemoveDirectoryHierarchy() [Test] public void DeleteRecursiveShouldRemoveDirectoryHierarchy() SizeShouldCorrectlyCalculateSize() [Test] public void SizeShouldCorrectlyCalculateSize()"
  },
  "api/Composable.Tests.IO.html": {
    "href": "api/Composable.Tests.IO.html",
    "title": "Namespace Composable.Tests.IO | Composable",
    "keywords": "Namespace Composable.Tests.IO Classes DirectoryExtensionsTest"
  },
  "api/Composable.Tests.KeyValueStorage.DocumentDBSession_DocumentKeyTests.html": {
    "href": "api/Composable.Tests.KeyValueStorage.DocumentDBSession_DocumentKeyTests.html",
    "title": "Class DocumentDBSession_DocumentKeyTests | Composable",
    "keywords": "Class DocumentDBSession_DocumentKeyTests Namespace Composable.Tests.KeyValueStorage Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DocumentDBSession_DocumentKeyTests : UniversalTestBase Inheritance object UniversalTestBase DocumentDBSession_DocumentKeyTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods TwoInstancesOfTheSameTypeWithDifferentIdsAreNotEqual() [Test] public void TwoInstancesOfTheSameTypeWithDifferentIdsAreNotEqual() TwoInstancesOfTheSameTypeWithIdsDifferingOnlyByCaseAreEqual() [Test] public void TwoInstancesOfTheSameTypeWithIdsDifferingOnlyByCaseAreEqual() TwoInstancesOfTheSameTypeWithIdsDifferingOnlyInTrailingSpacesAreEqual() [Test] public void TwoInstancesOfTheSameTypeWithIdsDifferingOnlyInTrailingSpacesAreEqual() TwoInstancesOfTheSameTypeWithTheSameIdAreEqualAndHaveTheSameHashCode() [Test] public void TwoInstancesOfTheSameTypeWithTheSameIdAreEqualAndHaveTheSameHashCode() TwoInstancesOfUnrelatedTypesAndSameIdAreNotEqual() [Test] public void TwoInstancesOfUnrelatedTypesAndSameIdAreNotEqual() TwoInstancesWithInheritingTypesAndDifferingIdsAreNotEqual() [Test] public void TwoInstancesWithInheritingTypesAndDifferingIdsAreNotEqual() TwoInstancesWithInheritingTypesAndTheSameIdAreEqual() [Test] public void TwoInstancesWithInheritingTypesAndTheSameIdAreEqual()"
  },
  "api/Composable.Tests.KeyValueStorage.html": {
    "href": "api/Composable.Tests.KeyValueStorage.html",
    "title": "Namespace Composable.Tests.KeyValueStorage | Composable",
    "keywords": "Namespace Composable.Tests.KeyValueStorage Classes DocumentDBSession_DocumentKeyTests"
  },
  "api/Composable.Tests.Linq.HierarchyTests.html": {
    "href": "api/Composable.Tests.Linq.HierarchyTests.html",
    "title": "Class HierarchyTests | Composable",
    "keywords": "Class HierarchyTests Namespace Composable.Tests.Linq Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class HierarchyTests : UniversalTestBase Inheritance object UniversalTestBase HierarchyTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods FlatteningAHierarchicalTypeShouldWork() [Test] public void FlatteningAHierarchicalTypeShouldWork() ShouldReturnAllInstancesInGraphWithoutDuplicates() [Test] public void ShouldReturnAllInstancesInGraphWithoutDuplicates()"
  },
  "api/Composable.Tests.Linq.LinqExtensionsTests.html": {
    "href": "api/Composable.Tests.Linq.LinqExtensionsTests.html",
    "title": "Class LinqExtensionsTests | Composable",
    "keywords": "Class LinqExtensionsTests Namespace Composable.Tests.Linq Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class LinqExtensionsTests : UniversalTestBase Inheritance object UniversalTestBase LinqExtensionsTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ChoppingFollowedBySelectManyShouldEqualOriginalSequence() [Test] public void ChoppingFollowedBySelectManyShouldEqualOriginalSequence() ChoppingListIntoListSizeChunksShouldReturnOnlyOneChunk() [Test] public void ChoppingListIntoListSizeChunksShouldReturnOnlyOneChunk() FlattenShouldIterateAllNestedCollectionInstances() [Test] public void FlattenShouldIterateAllNestedCollectionInstances()"
  },
  "api/Composable.Tests.Linq.NumberTests.html": {
    "href": "api/Composable.Tests.Linq.NumberTests.html",
    "title": "Class NumberTests | Composable",
    "keywords": "Class NumberTests Namespace Composable.Tests.Linq Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class NumberTests : UniversalTestBase Inheritance object UniversalTestBase NumberTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods StepSizeShouldIterateFromImplicitParameter() [Test] public void StepSizeShouldIterateFromImplicitParameter() StepSizeShouldStepByStepsize() [Test] public void StepSizeShouldStepByStepsize() ThroughShouldHaveCountEqualToToMinusFromPlus1() [Test] public void ThroughShouldHaveCountEqualToToMinusFromPlus1() ThroughShouldHaveLastElementEqualToArgument() [Test] public void ThroughShouldHaveLastElementEqualToArgument() UntilShouldHaveLastElementEqualToArgumentMinusStepSizeWhenSteppingByOneOreMinusOne() [Test] public void UntilShouldHaveLastElementEqualToArgumentMinusStepSizeWhenSteppingByOneOreMinusOne() UntilShouldStopEnumeratingAtValueBeforeGuard() [Test] public void UntilShouldStopEnumeratingAtValueBeforeGuard()"
  },
  "api/Composable.Tests.Linq.SeqTests.html": {
    "href": "api/Composable.Tests.Linq.SeqTests.html",
    "title": "Class SeqTests | Composable",
    "keywords": "Class SeqTests Namespace Composable.Tests.Linq Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class SeqTests : UniversalTestBase Inheritance object UniversalTestBase SeqTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CreateShouldEnumerateAllParamsInOrder() [Test] public void CreateShouldEnumerateAllParamsInOrder()"
  },
  "api/Composable.Tests.Linq.SimpleIndexingTests.html": {
    "href": "api/Composable.Tests.Linq.SimpleIndexingTests.html",
    "title": "Class SimpleIndexingTests | Composable",
    "keywords": "Class SimpleIndexingTests Namespace Composable.Tests.Linq Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class SimpleIndexingTests : UniversalTestBase Inheritance object UniversalTestBase SimpleIndexingTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldIndexCorrectly() [Test] public void ShouldIndexCorrectly() ThrowsExceptionIfArgumentIsNull() [Test] public void ThrowsExceptionIfArgumentIsNull()"
  },
  "api/Composable.Tests.Linq.html": {
    "href": "api/Composable.Tests.Linq.html",
    "title": "Namespace Composable.Tests.Linq | Composable",
    "keywords": "Namespace Composable.Tests.Linq Classes HierarchyTests LinqExtensionsTests NumberTests SeqTests SimpleIndexingTests"
  },
  "api/Composable.Tests.Messaging.Hypermedia.Local_Query_performance_tests.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.Local_Query_performance_tests.html",
    "title": "Class Local_Query_performance_tests | Composable",
    "keywords": "Class Local_Query_performance_tests Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll public class Local_Query_performance_tests : PerformanceTestBase Inheritance object UniversalTestBase DuplicateByPluggableComponentTest PerformanceTestBase Local_Query_performance_tests Inherited Members PerformanceTestBase.Host PerformanceTestBase.ServerEndpoint PerformanceTestBase.ClientEndpoint PerformanceTestBase.RemoteNavigator PerformanceTestBase.ServerBusSession PerformanceTestBase.LocalNavigator PerformanceTestBase.Setup() PerformanceTestBase.TearDown() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Local_Query_performance_tests(string) public Local_Query_performance_tests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Runs_10_000_SingleThreaded_local_requests_making_a_single_local_query_each_in_80_milliseconds() [Test] public void Runs_10_000_SingleThreaded_local_requests_making_a_single_local_query_each_in_80_milliseconds() Runs_10_000__MultiThreaded_local_requests_making_10_local_queries_each_in_50_milliseconds() [Test] public void Runs_10_000__MultiThreaded_local_requests_making_10_local_queries_each_in_50_milliseconds() Runs_10_000__MultiThreaded_local_requests_making_a_single_local_query_each_in_20_milliseconds() [Test] public void Runs_10_000__MultiThreaded_local_requests_making_a_single_local_query_each_in_20_milliseconds() Runs_10_000__SingleThreaded_local_requests_making_10_local_queries_each_in_170_milliseconds() [Test] public void Runs_10_000__SingleThreaded_local_requests_making_10_local_queries_each_in_170_milliseconds()"
  },
  "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyLocalStrictlyLocalQuery.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyLocalStrictlyLocalQuery.html",
    "title": "Class PerformanceTestBase.MyLocalStrictlyLocalQuery | Composable",
    "keywords": "Class PerformanceTestBase.MyLocalStrictlyLocalQuery Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll protected class PerformanceTestBase.MyLocalStrictlyLocalQuery : MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<PerformanceTestBase.MyLocalStrictlyLocalQuery, PerformanceTestBase.MyQueryResult>, IStrictlyLocalQuery<PerformanceTestBase.MyLocalStrictlyLocalQuery, PerformanceTestBase.MyQueryResult>, IQuery<PerformanceTestBase.MyQueryResult>, IHasReturnValue<PerformanceTestBase.MyQueryResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage, IStrictlyLocalMessage Inheritance object MessageTypes.StrictlyLocal.Queries.StrictlyLocalQuery<PerformanceTestBase.MyLocalStrictlyLocalQuery, PerformanceTestBase.MyQueryResult> PerformanceTestBase.MyLocalStrictlyLocalQuery Implements IStrictlyLocalQuery<PerformanceTestBase.MyLocalStrictlyLocalQuery, PerformanceTestBase.MyQueryResult> IQuery<PerformanceTestBase.MyQueryResult> IHasReturnValue<PerformanceTestBase.MyQueryResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage IStrictlyLocalMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyQueryResult.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyQueryResult.html",
    "title": "Class PerformanceTestBase.MyQueryResult | Composable",
    "keywords": "Class PerformanceTestBase.MyQueryResult Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll protected class PerformanceTestBase.MyQueryResult Inheritance object PerformanceTestBase.MyQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyRemoteQuery.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.MyRemoteQuery.html",
    "title": "Class PerformanceTestBase.MyRemoteQuery | Composable",
    "keywords": "Class PerformanceTestBase.MyRemoteQuery Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll protected class PerformanceTestBase.MyRemoteQuery : MessageTypes.Remotable.NonTransactional.Queries.Query<PerformanceTestBase.MyQueryResult>, IRemotableQuery<PerformanceTestBase.MyQueryResult>, IRemotableMessage, IQuery<PerformanceTestBase.MyQueryResult>, IHasReturnValue<PerformanceTestBase.MyQueryResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<PerformanceTestBase.MyQueryResult> PerformanceTestBase.MyRemoteQuery Implements IRemotableQuery<PerformanceTestBase.MyQueryResult> IRemotableMessage IQuery<PerformanceTestBase.MyQueryResult> IHasReturnValue<PerformanceTestBase.MyQueryResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.PerformanceTestBase.html",
    "title": "Class PerformanceTestBase | Composable",
    "keywords": "Class PerformanceTestBase Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll public class PerformanceTestBase : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest PerformanceTestBase Derived Local_Query_performance_tests RemoteQueryPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors PerformanceTestBase(string) public PerformanceTestBase(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Properties ClientEndpoint public IEndpoint ClientEndpoint { get; set; } Property Value IEndpoint Host protected ITestingEndpointHost Host { get; set; } Property Value ITestingEndpointHost LocalNavigator protected ILocalHypermediaNavigator LocalNavigator { get; } Property Value ILocalHypermediaNavigator RemoteNavigator protected IRemoteHypermediaNavigator RemoteNavigator { get; } Property Value IRemoteHypermediaNavigator ServerBusSession protected IServiceBusSession ServerBusSession { get; } Property Value IServiceBusSession ServerEndpoint protected IEndpoint ServerEndpoint { get; set; } Property Value IEndpoint Methods Setup() [SetUp] public Task Setup() Returns Task TearDown() [TearDown] public Task TearDown() Returns Task"
  },
  "api/Composable.Tests.Messaging.Hypermedia.RemoteQueryPerformanceTests.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.RemoteQueryPerformanceTests.html",
    "title": "Class RemoteQueryPerformanceTests | Composable",
    "keywords": "Class RemoteQueryPerformanceTests Namespace Composable.Tests.Messaging.Hypermedia Assembly Composable.PerformanceTests.dll public class RemoteQueryPerformanceTests : PerformanceTestBase Inheritance object UniversalTestBase DuplicateByPluggableComponentTest PerformanceTestBase RemoteQueryPerformanceTests Inherited Members PerformanceTestBase.Host PerformanceTestBase.ServerEndpoint PerformanceTestBase.ClientEndpoint PerformanceTestBase.RemoteNavigator PerformanceTestBase.ServerBusSession PerformanceTestBase.LocalNavigator PerformanceTestBase.Setup() PerformanceTestBase.TearDown() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors RemoteQueryPerformanceTests(string) public RemoteQueryPerformanceTests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Async_Runs_100_local_requests_making_one_async_remote_query_each_in_10_milliseconds() [Test] public Task Async_Runs_100_local_requests_making_one_async_remote_query_each_in_10_milliseconds() Returns Task Async_Runs_10_local_request_making_200_ICreateMyOwnResult_query_each_in_9_milliseconds() [Test] public Task Async_Runs_10_local_request_making_200_ICreateMyOwnResult_query_each_in_9_milliseconds() Returns Task Async_Runs_10_local_requests_making_10_async_remote_queries_each_in_7_milliseconds() [Test] public Task Async_Runs_10_local_requests_making_10_async_remote_queries_each_in_7_milliseconds() Returns Task MultiThreaded_Runs_100_local_requests_making_one_remote_query_each_in_12_milliseconds() [Test] public void MultiThreaded_Runs_100_local_requests_making_one_remote_query_each_in_12_milliseconds() MultiThreaded_Runs_10_local_request_making_200_ICreateMyOwnResult_query_each_in_3_milliseconds() [Test] public void MultiThreaded_Runs_10_local_request_making_200_ICreateMyOwnResult_query_each_in_3_milliseconds() MultiThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_15_milliseconds() [Test] public void MultiThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_15_milliseconds() SingleThreaded_Runs_100_local_requests_making_one_ICreateMyOwnResult_query_each_in_2_milliseconds() [Test] public void SingleThreaded_Runs_100_local_requests_making_one_ICreateMyOwnResult_query_each_in_2_milliseconds() SingleThreaded_Runs_100_local_requests_making_one_remote_query_each_in_60_milliseconds() [Test] public void SingleThreaded_Runs_100_local_requests_making_one_remote_query_each_in_60_milliseconds() SingleThreaded_Runs_10_local_requests_making_10_ICreateMyOwnResult_query_each_in_1_milliseconds() [Test] public void SingleThreaded_Runs_10_local_requests_making_10_ICreateMyOwnResult_query_each_in_1_milliseconds() SingleThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_60_milliseconds() [Test] public void SingleThreaded_Runs_10_local_requests_making_10_remote_queries_each_in_60_milliseconds() SingleThreaded_Runs_1_local_request_making_200_ICreateMyOwnResult_query_each_in_1_milliseconds() [Test] public void SingleThreaded_Runs_1_local_request_making_200_ICreateMyOwnResult_query_each_in_1_milliseconds()"
  },
  "api/Composable.Tests.Messaging.Hypermedia.html": {
    "href": "api/Composable.Tests.Messaging.Hypermedia.html",
    "title": "Namespace Composable.Tests.Messaging.Hypermedia | Composable",
    "keywords": "Namespace Composable.Tests.Messaging.Hypermedia Classes Local_Query_performance_tests PerformanceTestBase PerformanceTestBase.MyLocalStrictlyLocalQuery PerformanceTestBase.MyQueryResult PerformanceTestBase.MyRemoteQuery RemoteQueryPerformanceTests"
  },
  "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_.html": {
    "href": "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_.html",
    "title": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_ | Composable",
    "keywords": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_ Namespace Composable.Tests.Messaging Assembly Composable.CQRS.UnitTests.dll public class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_ : UniversalTestBase Inheritance object UniversalTestBase MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_ Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Does_not_have_a_covariant_type_parameter() [Test] public void Does_not_have_a_covariant_type_parameter() Is_not_generic() [Test] public void Is_not_generic()"
  },
  "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.html": {
    "href": "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.html",
    "title": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_ | Composable",
    "keywords": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_ Namespace Composable.Tests.Messaging Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_ : UniversalTestBase Inheritance object UniversalTestBase MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_ Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Forbids_and_requires_transactional_sender() [Test] public void Forbids_and_requires_transactional_sender() Is_Both_command_and_event() [Test] public void Is_Both_command_and_event() Is_Both_command_and_query() [Test] public void Is_Both_command_and_query() Is_Both_strictly_local_and_remotable() [Test] public void Is_Both_strictly_local_and_remotable() Is_at_most_once_command_and_sets_MessageId_in_defaultConstructor() [Test] public void Is_at_most_once_command_and_sets_MessageId_in_defaultConstructor() Is_not_IMessage() [Test] public void Is_not_IMessage()"
  },
  "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_.html": {
    "href": "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_.html",
    "title": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_ | Composable",
    "keywords": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_ Namespace Composable.Tests.Messaging Assembly Composable.CQRS.UnitTests.dll public class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_ : UniversalTestBase Inheritance object UniversalTestBase MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_ Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Does_not_have_a_covariant_type_parameter() [Test] public void Does_not_have_a_covariant_type_parameter() Is_not_generic() [Test] public void Is_not_generic()"
  },
  "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.html": {
    "href": "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.html",
    "title": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_ | Composable",
    "keywords": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_ Namespace Composable.Tests.Messaging Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_ : UniversalTestBase Inheritance object UniversalTestBase MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_ Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.html": {
    "href": "api/Composable.Tests.Messaging.MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.html",
    "title": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_ | Composable",
    "keywords": "Class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_ Namespace Composable.Tests.Messaging Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MessageTypeInspector_throws_MessageTypeDesignViolationException_if_ : UniversalTestBase Inheritance object UniversalTestBase MessageTypeInspector_throws_MessageTypeDesignViolationException_if_ Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Async_behavior_test.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Async_behavior_test.html",
    "title": "Class Async_behavior_test | Composable",
    "keywords": "Class Async_behavior_test Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Async_behavior_test : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Async_behavior_test Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Async_behavior_test(string) public Async_behavior_test(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Query_returns_task_immediately_does_not_block_until_awaited() [Test] public Task Query_returns_task_immediately_does_not_block_until_awaited() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Exacly_once_guarantee_tests.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Exacly_once_guarantee_tests.html",
    "title": "Class Exacly_once_guarantee_tests | Composable",
    "keywords": "Class Exacly_once_guarantee_tests Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Exacly_once_guarantee_tests : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Exacly_once_guarantee_tests Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Exacly_once_guarantee_tests(string) public Exacly_once_guarantee_tests(string _) Parameters _ string Methods If_transaction_fails_after_successfully_Publishing_ExactlyOnceEvent_event_never_reaches_remote_handler_but_does_reach_local_handler() [Test] public void If_transaction_fails_after_successfully_Publishing_ExactlyOnceEvent_event_never_reaches_remote_handler_but_does_reach_local_handler() If_transaction_fails_after_successfully_Sending_ExactlyOnceCommand_command_never_reaches_command_handler() [Test] public void If_transaction_fails_after_successfully_Sending_ExactlyOnceCommand_command_never_reaches_command_handler()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.GetUserQuery.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.GetUserQuery.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.GetUserQuery | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.GetUserQuery Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.GetUserQuery : MessageTypes.Remotable.NonTransactional.Queries.Query<Experiment_with_unifying_events_and_commands_test.UserResource>, IRemotableQuery<Experiment_with_unifying_events_and_commands_test.UserResource>, IRemotableMessage, IQuery<Experiment_with_unifying_events_and_commands_test.UserResource>, IHasReturnValue<Experiment_with_unifying_events_and_commands_test.UserResource>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<Experiment_with_unifying_events_and_commands_test.UserResource> Experiment_with_unifying_events_and_commands_test.GetUserQuery Implements IRemotableQuery<Experiment_with_unifying_events_and_commands_test.UserResource> IRemotableMessage IQuery<Experiment_with_unifying_events_and_commands_test.UserResource> IHasReturnValue<Experiment_with_unifying_events_and_commands_test.UserResource> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors GetUserQuery(Guid) public GetUserQuery(Guid userId) Parameters userId Guid Properties UserId public Guid UserId { get; } Property Value Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.RegisterUserResult.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.RegisterUserResult.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.RegisterUserResult | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.RegisterUserResult Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.RegisterUserResult Inheritance object Experiment_with_unifying_events_and_commands_test.RegisterUserResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors RegisterUserResult(Guid) public RegisterUserResult(Guid userId) Parameters userId Guid Properties UserLink public Experiment_with_unifying_events_and_commands_test.GetUserQuery UserLink { get; } Property Value Experiment_with_unifying_events_and_commands_test.GetUserQuery"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserAggregate.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserAggregate.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserAggregate | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserAggregate Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserAggregate : Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IHasPersistentIdentity<Guid>, IEquatable<Experiment_with_unifying_events_and_commands_test.UserAggregate>, IEventStored<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IEventStored Inheritance object Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid> Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate> VersionedEntity<Experiment_with_unifying_events_and_commands_test.UserAggregate> Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>> Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot> Experiment_with_unifying_events_and_commands_test.UserAggregate Implements IHasPersistentIdentity<Guid> IEquatable<Experiment_with_unifying_events_and_commands_test.UserAggregate> IEventStored<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot> IEventStored Inherited Members Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.TimeSource Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.Publish<TEvent>(TEvent) Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.RegisterEventAppliers() Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.RegisterEventHandlers() Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.AssertInvariantsAreMet() Aggregate<Experiment_with_unifying_events_and_commands_test.UserAggregate, Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot>>.Commit(Action<IReadOnlyList<IAggregateEvent>>) VersionedEntity<Experiment_with_unifying_events_and_commands_test.UserAggregate>.Version Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate>.Equals(Experiment_with_unifying_events_and_commands_test.UserAggregate) Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate>.Equals(object) Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate>.GetHashCode() Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.Id Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.GetIdBypassContractValidation() Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.Equals(Experiment_with_unifying_events_and_commands_test.UserAggregate) Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.Equals(object) Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.GetHashCode() Entity<Experiment_with_unifying_events_and_commands_test.UserAggregate, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot.html",
    "title": "Interface Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot | Composable",
    "keywords": "Interface Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered.html",
    "title": "Interface Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered | Composable",
    "keywords": "Interface Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered : Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, IAggregateCreatedEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root : AggregateEvent, IEquatable<AggregateEvent>, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root Implements IEquatable<AggregateEvent> Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Derived Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Root() protected Root() Root(Guid) protected Root(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent : Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root, IEquatable<AggregateEvent>, Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered, Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot, IAggregateCreatedEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent Implements IEquatable<AggregateEvent> Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot IAggregateCreatedEvent IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors UserRegisteredEvent(Guid) public UserRegisteredEvent(Guid userId) Parameters userId Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation Inheritance object Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserEvent.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserEvent | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Experiment_with_unifying_events_and_commands_test.UserEvent Inheritance object Experiment_with_unifying_events_and_commands_test.UserEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate : Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IHasPersistentIdentity<Guid>, IEquatable<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate>, IEventStored<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IEventStored Inheritance object Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid> Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate> VersionedEntity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate> Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>> Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot> Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate Implements IHasPersistentIdentity<Guid> IEquatable<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate> IEventStored<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot> IEventStored Inherited Members Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.TimeSource Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.Publish<TEvent>(TEvent) Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.RegisterEventAppliers() Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.RegisterEventHandlers() Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.AssertInvariantsAreMet() Aggregate<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, AggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>, IAggregateEvent<Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot>>.Commit(Action<IReadOnlyList<IAggregateEvent>>) VersionedEntity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate>.Version Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate>.Equals(Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate) Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate>.Equals(object) Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate>.GetHashCode() Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.Id Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.GetIdBypassContractValidation() Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.Equals(Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate) Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.Equals(object) Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.GetHashCode() Entity<Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand : MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult>, IAtMostOnceCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult>, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult>, IRemotableCommand, IRemotableMessage, ICommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult>, ICommand, IHasReturnValue<Experiment_with_unifying_events_and_commands_test.RegisterUserResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult> Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand Implements IAtMostOnceCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult> IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult> IRemotableCommand IRemotableMessage ICommand<Experiment_with_unifying_events_and_commands_test.RegisterUserResult> ICommand IHasReturnValue<Experiment_with_unifying_events_and_commands_test.RegisterUserResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties UserId public Guid UserId { get; } Property Value Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand Inheritance object Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot.html",
    "title": "Interface Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot | Composable",
    "keywords": "Interface Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created : Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root, IEquatable<AggregateEvent>, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, IAggregateCreatedEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created Implements IEquatable<AggregateEvent> Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot IAggregateCreatedEvent IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Created() public Created()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root : AggregateEvent, IEquatable<AggregateEvent>, Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root Implements IEquatable<AggregateEvent> Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Derived Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Root() protected Root() Root(Guid) protected Root(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation Inheritance object Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent Inheritance object Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserResource.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.UserResource.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test.UserResource | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test.UserResource Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test.UserResource Inheritance object Experiment_with_unifying_events_and_commands_test.UserResource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors UserResource(IEnumerable<IAggregateEvent>) public UserResource(IEnumerable<IAggregateEvent> history) Parameters history IEnumerable<IAggregateEvent> Properties History public IEnumerable<IAggregateEvent> History { get; } Property Value IEnumerable<IAggregateEvent>"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Experiment_with_unifying_events_and_commands_test.html",
    "title": "Class Experiment_with_unifying_events_and_commands_test | Composable",
    "keywords": "Class Experiment_with_unifying_events_and_commands_test Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Experiment_with_unifying_events_and_commands_test : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Experiment_with_unifying_events_and_commands_test Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Experiment_with_unifying_events_and_commands_test(string) public Experiment_with_unifying_events_and_commands_test(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Can_register_user_and_fetch_user_resource() [Test] public void Can_register_user_and_fetch_user_resource() Setup() [SetUp] public Task Setup() Returns Task TeardownAsync() [TearDown] public Task TeardownAsync() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Failure_tests.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Failure_tests.html",
    "title": "Class Failure_tests | Composable",
    "keywords": "Class Failure_tests Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Failure_tests : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Failure_tests Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Failure_tests(string) public Failure_tests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods If_command_handler_with_result_throws_awaiting_SendAsync_throws() [Test] public Task If_command_handler_with_result_throws_awaiting_SendAsync_throws() Returns Task If_query_handler_throws_Query_throws() [Test] public void If_query_handler_throws_Query_throws() If_query_handler_throws_awaiting_QueryAsync_throws() [Test] public Task If_query_handler_throws_awaiting_QueryAsync_throws() Returns Task TearDownAsync() public override Task TearDownAsync() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.IMyExactlyOnceEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.IMyExactlyOnceEvent.html",
    "title": "Interface Fixture.IMyExactlyOnceEvent | Composable",
    "keywords": "Interface Fixture.IMyExactlyOnceEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected interface Fixture.IMyExactlyOnceEvent : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregate.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregate.html",
    "title": "Class Fixture.MyAggregate | Composable",
    "keywords": "Class Fixture.MyAggregate Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyAggregate : Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot>, IHasPersistentIdentity<Guid>, IEquatable<Fixture.MyAggregate>, IEventStored<Fixture.MyAggregateEvent.IRoot>, IEventStored Inheritance object Entity<Fixture.MyAggregate, Guid> Entity<Fixture.MyAggregate> VersionedEntity<Fixture.MyAggregate> Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>> Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot> Fixture.MyAggregate Implements IHasPersistentIdentity<Guid> IEquatable<Fixture.MyAggregate> IEventStored<Fixture.MyAggregateEvent.IRoot> IEventStored Inherited Members Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.TimeSource Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.Publish<TEvent>(TEvent) Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.RegisterEventAppliers() Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.RegisterEventHandlers() Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.AssertInvariantsAreMet() Aggregate<Fixture.MyAggregate, Fixture.MyAggregateEvent.Implementation.Root, Fixture.MyAggregateEvent.IRoot, AggregateEvent<Fixture.MyAggregateEvent.IRoot>, IAggregateEvent<Fixture.MyAggregateEvent.IRoot>>.Commit(Action<IReadOnlyList<IAggregateEvent>>) VersionedEntity<Fixture.MyAggregate>.Version Entity<Fixture.MyAggregate>.Equals(Fixture.MyAggregate) Entity<Fixture.MyAggregate>.Equals(object) Entity<Fixture.MyAggregate>.GetHashCode() Entity<Fixture.MyAggregate, Guid>.Id Entity<Fixture.MyAggregate, Guid>.SetIdBeVerySureYouKnowWhatYouAreDoing(Guid) Entity<Fixture.MyAggregate, Guid>.GetIdBypassContractValidation() Entity<Fixture.MyAggregate, Guid>.Equals(Fixture.MyAggregate) Entity<Fixture.MyAggregate, Guid>.Equals(object) Entity<Fixture.MyAggregate, Guid>.GetHashCode() Entity<Fixture.MyAggregate, Guid>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors MyAggregate() public MyAggregate()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Created.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Created.html",
    "title": "Interface Fixture.MyAggregateEvent.Created | Composable",
    "keywords": "Interface Fixture.MyAggregateEvent.Created Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Fixture.MyAggregateEvent.Created : Fixture.MyAggregateEvent.IRoot, IAggregateCreatedEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.IRoot.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.IRoot.html",
    "title": "Interface Fixture.MyAggregateEvent.IRoot | Composable",
    "keywords": "Interface Fixture.MyAggregateEvent.IRoot Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Fixture.MyAggregateEvent.IRoot : IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Created.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Created.html",
    "title": "Class Fixture.MyAggregateEvent.Implementation.Created | Composable",
    "keywords": "Class Fixture.MyAggregateEvent.Implementation.Created Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Fixture.MyAggregateEvent.Implementation.Created : Fixture.MyAggregateEvent.Implementation.Root, IEquatable<AggregateEvent>, Fixture.MyAggregateEvent.Created, Fixture.MyAggregateEvent.IRoot, IAggregateCreatedEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Fixture.MyAggregateEvent.Implementation.Root Fixture.MyAggregateEvent.Implementation.Created Implements IEquatable<AggregateEvent> Fixture.MyAggregateEvent.Created Fixture.MyAggregateEvent.IRoot IAggregateCreatedEvent IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Created(Guid) public Created(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Root.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Root.html",
    "title": "Class Fixture.MyAggregateEvent.Implementation.Root | Composable",
    "keywords": "Class Fixture.MyAggregateEvent.Implementation.Root Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Fixture.MyAggregateEvent.Implementation.Root : AggregateEvent, IEquatable<AggregateEvent>, Fixture.MyAggregateEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Fixture.MyAggregateEvent.Implementation.Root Implements IEquatable<AggregateEvent> Fixture.MyAggregateEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Derived Fixture.MyAggregateEvent.Implementation.Created Fixture.MyAggregateEvent.Implementation.Updated Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Root() protected Root() Root(Guid) protected Root(Guid aggregateId) Parameters aggregateId Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Updated.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.Updated.html",
    "title": "Class Fixture.MyAggregateEvent.Implementation.Updated | Composable",
    "keywords": "Class Fixture.MyAggregateEvent.Implementation.Updated Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Fixture.MyAggregateEvent.Implementation.Updated : Fixture.MyAggregateEvent.Implementation.Root, IEquatable<AggregateEvent>, Fixture.MyAggregateEvent.Updated, Fixture.MyAggregateEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Fixture.MyAggregateEvent.Implementation.Root Fixture.MyAggregateEvent.Implementation.Updated Implements IEquatable<AggregateEvent> Fixture.MyAggregateEvent.Updated Fixture.MyAggregateEvent.IRoot IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Implementation.html",
    "title": "Class Fixture.MyAggregateEvent.Implementation | Composable",
    "keywords": "Class Fixture.MyAggregateEvent.Implementation Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public static class Fixture.MyAggregateEvent.Implementation Inheritance object Fixture.MyAggregateEvent.Implementation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Updated.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.Updated.html",
    "title": "Interface Fixture.MyAggregateEvent.Updated | Composable",
    "keywords": "Interface Fixture.MyAggregateEvent.Updated Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public interface Fixture.MyAggregateEvent.Updated : Fixture.MyAggregateEvent.IRoot, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inherited Members IAggregateEvent.AggregateVersion IAggregateEvent.AggregateId IAggregateEvent.UtcTimeStamp IAtMostOnceMessage.MessageId Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAggregateEvent.html",
    "title": "Class Fixture.MyAggregateEvent | Composable",
    "keywords": "Class Fixture.MyAggregateEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected static class Fixture.MyAggregateEvent Inheritance object Fixture.MyAggregateEvent Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAtMostOnceCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAtMostOnceCommand.html",
    "title": "Class Fixture.MyAtMostOnceCommand | Composable",
    "keywords": "Class Fixture.MyAtMostOnceCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyAtMostOnceCommand : MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Fixture.MyCommandResult>, IAtMostOnceCommand<Fixture.MyCommandResult>, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<Fixture.MyCommandResult>, IRemotableCommand, IRemotableMessage, ICommand<Fixture.MyCommandResult>, ICommand, IHasReturnValue<Fixture.MyCommandResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Fixture.MyCommandResult> Fixture.MyAtMostOnceCommand Implements IAtMostOnceCommand<Fixture.MyCommandResult> IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand<Fixture.MyCommandResult> IRemotableCommand IRemotableMessage ICommand<Fixture.MyCommandResult> ICommand IHasReturnValue<Fixture.MyCommandResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors MyAtMostOnceCommand() protected MyAtMostOnceCommand()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAtMostOnceCommandWithResult.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyAtMostOnceCommandWithResult.html",
    "title": "Class Fixture.MyAtMostOnceCommandWithResult | Composable",
    "keywords": "Class Fixture.MyAtMostOnceCommandWithResult Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyAtMostOnceCommandWithResult : MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Fixture.MyCommandResult>, IAtMostOnceCommand<Fixture.MyCommandResult>, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<Fixture.MyCommandResult>, IRemotableCommand, IRemotableMessage, ICommand<Fixture.MyCommandResult>, ICommand, IHasReturnValue<Fixture.MyCommandResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Fixture.MyCommandResult> Fixture.MyAtMostOnceCommandWithResult Implements IAtMostOnceCommand<Fixture.MyCommandResult> IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand<Fixture.MyCommandResult> IRemotableCommand IRemotableMessage ICommand<Fixture.MyCommandResult> ICommand IHasReturnValue<Fixture.MyCommandResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyCommandResult.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyCommandResult.html",
    "title": "Class Fixture.MyCommandResult | Composable",
    "keywords": "Class Fixture.MyCommandResult Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyCommandResult Inheritance object Fixture.MyCommandResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyCreateAggregateCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyCreateAggregateCommand.html",
    "title": "Class Fixture.MyCreateAggregateCommand | Composable",
    "keywords": "Class Fixture.MyCreateAggregateCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyCreateAggregateCommand : MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand, ICommand, IRemotableMessage, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand Fixture.MyCreateAggregateCommand Implements IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand ICommand IRemotableMessage IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties AggregateId public Guid AggregateId { get; set; } Property Value Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyExactlyOnceCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyExactlyOnceCommand.html",
    "title": "Class Fixture.MyExactlyOnceCommand | Composable",
    "keywords": "Class Fixture.MyExactlyOnceCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyExactlyOnceCommand : MessageTypes.Remotable.ExactlyOnce.Command, IEquatable<MessageTypes.Remotable.ExactlyOnce.Command>, IExactlyOnceCommand, IRemotableCommand, ICommand, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<MessageTypes.Remotable.ExactlyOnce.Command> MessageTypes.Remotable.ExactlyOnce.Command Fixture.MyExactlyOnceCommand Implements IEquatable<MessageTypes.Remotable.ExactlyOnce.Command> IExactlyOnceCommand IRemotableCommand ICommand IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members MessageTypes.Remotable.ExactlyOnce.Command.MessageId ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.Equals(object) ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.GetHashCode() ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.Equals(MessageTypes.Remotable.ExactlyOnce.Command) ValueObject<MessageTypes.Remotable.ExactlyOnce.Command>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyExactlyOnceEvent.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyExactlyOnceEvent.html",
    "title": "Class Fixture.MyExactlyOnceEvent | Composable",
    "keywords": "Class Fixture.MyExactlyOnceEvent Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyExactlyOnceEvent : AggregateEvent, IEquatable<AggregateEvent>, Fixture.IMyExactlyOnceEvent, IAggregateEvent, IExactlyOnceEvent, IRemotableEvent, IEvent, IExactlyOnceMessage, IMustBeSentAndHandledTransactionally, IMustBeSentTransactionally, IAtMostOnceMessage, IRemotableMessage, IMustBeHandledTransactionally, IMessage Inheritance object ValueObject<AggregateEvent> AggregateEvent Fixture.MyExactlyOnceEvent Implements IEquatable<AggregateEvent> Fixture.IMyExactlyOnceEvent IAggregateEvent IExactlyOnceEvent IRemotableEvent IEvent IExactlyOnceMessage IMustBeSentAndHandledTransactionally IMustBeSentTransactionally IAtMostOnceMessage IRemotableMessage IMustBeHandledTransactionally IMessage Inherited Members AggregateEvent.MessageId AggregateEvent.AggregateVersion AggregateEvent.AggregateId AggregateEvent.UtcTimeStamp ValueObject<AggregateEvent>.Equals(object) ValueObject<AggregateEvent>.GetHashCode() ValueObject<AggregateEvent>.Equals(AggregateEvent) ValueObject<AggregateEvent>.ToString() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyQuery.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyQuery.html",
    "title": "Class Fixture.MyQuery | Composable",
    "keywords": "Class Fixture.MyQuery Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyQuery : MessageTypes.Remotable.NonTransactional.Queries.Query<Fixture.MyQueryResult>, IRemotableQuery<Fixture.MyQueryResult>, IRemotableMessage, IQuery<Fixture.MyQueryResult>, IHasReturnValue<Fixture.MyQueryResult>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<Fixture.MyQueryResult> Fixture.MyQuery Implements IRemotableQuery<Fixture.MyQueryResult> IRemotableMessage IQuery<Fixture.MyQueryResult> IHasReturnValue<Fixture.MyQueryResult> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyQueryResult.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyQueryResult.html",
    "title": "Class Fixture.MyQueryResult | Composable",
    "keywords": "Class Fixture.MyQueryResult Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyQueryResult Inheritance object Fixture.MyQueryResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyUpdateAggregateCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.MyUpdateAggregateCommand.html",
    "title": "Class Fixture.MyUpdateAggregateCommand | Composable",
    "keywords": "Class Fixture.MyUpdateAggregateCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll protected class Fixture.MyUpdateAggregateCommand : MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand, ICommand, IRemotableMessage, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand Fixture.MyUpdateAggregateCommand Implements IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand ICommand IRemotableMessage IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors MyUpdateAggregateCommand(Guid) public MyUpdateAggregateCommand(Guid aggregateId) Parameters aggregateId Guid Properties AggregateId public Guid AggregateId { get; } Property Value Guid"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture.html",
    "title": "Class Fixture | Composable",
    "keywords": "Class Fixture Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Fixture : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Derived Async_behavior_test Exacly_once_guarantee_tests Failure_tests Fixture_tests Parallelism_policies Query_policies Retry_policies_AtMostOnceCommand_when_command_handler_fails Transaction_policies Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Fixture(string) public Fixture(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Properties ClientEndpoint protected IEndpoint ClientEndpoint { get; set; } Property Value IEndpoint RemoteEndpoint protected IEndpoint RemoteEndpoint { get; set; } Property Value IEndpoint RemoteNavigator protected IRemoteHypermediaNavigator RemoteNavigator { get; } Property Value IRemoteHypermediaNavigator TaskRunner protected TestingTaskRunner TaskRunner { get; } Property Value TestingTaskRunner Methods CloseGates() protected void CloseGates() OpenGates() protected void OpenGates() Setup() [SetUp] public Task Setup() Returns Task TearDownAsync() [TearDown] public virtual Task TearDownAsync() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Fixture_tests.html",
    "title": "Class Fixture_tests | Composable",
    "keywords": "Class Fixture_tests Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Fixture_tests : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Fixture_tests Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Fixture_tests(string) public Fixture_tests(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods If_command_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception() [Test] public Task If_command_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception() Returns Task If_command_handler_with_result_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException() [Test] public Task If_command_handler_with_result_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException() Returns Task If_event_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception() [Test] public Task If_event_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception() Returns Task If_query_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException() [Test] public Task If_query_handler_throws_disposing_host_throws_AggregateException_containing_a_single_exception_that_is_the_thrown_exception_and_SendAsync_throws_MessageDispatchingFailedException() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Parallelism_policies.html",
    "title": "Class Parallelism_policies | Composable",
    "keywords": "Class Parallelism_policies Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Parallelism_policies : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Parallelism_policies Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Parallelism_policies(string) public Parallelism_policies(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Five_query_handlers_can_execute_in_parallel_when_using_Query() [Test] public void Five_query_handlers_can_execute_in_parallel_when_using_Query() Five_query_handlers_can_execute_in_parallel_when_using_QueryAsync() [Test] public Task Five_query_handlers_can_execute_in_parallel_when_using_QueryAsync() Returns Task Two_AtMostOnce_command_handlers_from_the_same_session_cannot_execute_in_parallel() [Test] public void Two_AtMostOnce_command_handlers_from_the_same_session_cannot_execute_in_parallel() Two_event_handlers_cannot_execute_in_parallel() [Test] public void Two_event_handlers_cannot_execute_in_parallel() Two_exactly_once_command_handlers_cannot_execute_in_parallel() [Test] public void Two_exactly_once_command_handlers_cannot_execute_in_parallel()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Query_policies.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Query_policies.html",
    "title": "Class Query_policies | Composable",
    "keywords": "Class Query_policies Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Query_policies : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Query_policies Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Query_policies(string) public Query_policies(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods The_same_query_can_be_reused_in_parallel_without_issues() [Test] public Task The_same_query_can_be_reused_in_parallel_without_issues() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Retry_policies_AtMostOnceCommand_when_command_handler_fails.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Retry_policies_AtMostOnceCommand_when_command_handler_fails.html",
    "title": "Class Retry_policies_AtMostOnceCommand_when_command_handler_fails | Composable",
    "keywords": "Class Retry_policies_AtMostOnceCommand_when_command_handler_fails Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Retry_policies_AtMostOnceCommand_when_command_handler_fails : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Retry_policies_AtMostOnceCommand_when_command_handler_fails Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Retry_policies_AtMostOnceCommand_when_command_handler_fails(string) public Retry_policies_AtMostOnceCommand_when_command_handler_fails(string _) Parameters _ string Methods Command_handler_is_tried_5_times() [Test] public void Command_handler_is_tried_5_times() ExactlyOnce_Event_raised_in_handler_does_not_reach_remote_handler() [Test] public void ExactlyOnce_Event_raised_in_handler_does_not_reach_remote_handler() ExactlyOnce_Event_raised_in_handler_reaches_local_handler_5_times() [Test] public void ExactlyOnce_Event_raised_in_handler_reaches_local_handler_5_times() SendCommandThatFails() [SetUp] public void SendCommandThatFails()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.Transaction_policies.html",
    "title": "Class Transaction_policies | Composable",
    "keywords": "Class Transaction_policies Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Assembly Composable.CQRS.Tests.dll public class Transaction_policies : Fixture Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Fixture Transaction_policies Inherited Members Fixture.TaskRunner Fixture.ClientEndpoint Fixture.RemoteEndpoint Fixture.RemoteNavigator Fixture.Setup() Fixture.TearDownAsync() Fixture.CloseGates() Fixture.OpenGates() UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Transaction_policies(string) public Transaction_policies(string _) Parameters _ string Methods Calling_GetRemoteAsync_within_a_transaction_with_Query_throws_TransactionPolicyViolationException() [Test] public void Calling_GetRemoteAsync_within_a_transaction_with_Query_throws_TransactionPolicyViolationException() Calling_GetRemote_within_a_transaction_with_Query_throws_TransactionPolicyViolationException() [Test] public void Calling_GetRemote_within_a_transaction_with_Query_throws_TransactionPolicyViolationException() Calling_PostRemoteAsync_within_a_transaction_AtLeastOnceCommand_throws_TransactionPolicyViolationException() [Test] public void Calling_PostRemoteAsync_within_a_transaction_AtLeastOnceCommand_throws_TransactionPolicyViolationException() Calling_PostRemoteAsync_within_a_transaction_with_AtLeastOnceCommand_throws_TransactionPolicyViolationException() [Test] public void Calling_PostRemoteAsync_within_a_transaction_with_AtLeastOnceCommand_throws_TransactionPolicyViolationException() Calling_PostRemoteAsync_without_a_transaction_with_ExactlyOnceCommand_throws_TransactionPolicyViolationException() [Test] public void Calling_PostRemoteAsync_without_a_transaction_with_ExactlyOnceCommand_throws_TransactionPolicyViolationException() Command_handler_runs_in_transaction_with_isolation_level_Serializable() [Test] public void Command_handler_runs_in_transaction_with_isolation_level_Serializable() Command_handler_with_result_runs_in_transaction_with_isolation_level_Serializable() [Test] public void Command_handler_with_result_runs_in_transaction_with_isolation_level_Serializable() Event_handler_runs_in_transaction_with_isolation_level_Serializable() [Test] public void Event_handler_runs_in_transaction_with_isolation_level_Serializable() Query_handler_does_not_run_in_transaction() [Test] public void Query_handler_does_not_run_in_transaction()"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler.html",
    "title": "Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler | Composable",
    "keywords": "Namespace Composable.Tests.Messaging.ServiceBusSpecification.Given_a_backend_endpoint_with_a_command_event_and_query_handler Classes Async_behavior_test Exacly_once_guarantee_tests Experiment_with_unifying_events_and_commands_test Experiment_with_unifying_events_and_commands_test.GetUserQuery Experiment_with_unifying_events_and_commands_test.RegisterUserResult Experiment_with_unifying_events_and_commands_test.UserAggregate Experiment_with_unifying_events_and_commands_test.UserEvent Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.Root Experiment_with_unifying_events_and_commands_test.UserEvent.Implementation.UserRegisteredEvent Experiment_with_unifying_events_and_commands_test.UserRegistrarAggregate Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand Experiment_with_unifying_events_and_commands_test.UserRegistrarCommand.RegisterUserCommand Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Created Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.Implementation.Root Experiment_with_unifying_events_and_commands_test.UserResource Failure_tests Fixture Fixture.MyAggregate Fixture.MyAggregateEvent Fixture.MyAggregateEvent.Implementation Fixture.MyAggregateEvent.Implementation.Created Fixture.MyAggregateEvent.Implementation.Root Fixture.MyAggregateEvent.Implementation.Updated Fixture.MyAtMostOnceCommand Fixture.MyAtMostOnceCommandWithResult Fixture.MyCommandResult Fixture.MyCreateAggregateCommand Fixture.MyExactlyOnceCommand Fixture.MyExactlyOnceEvent Fixture.MyQuery Fixture.MyQueryResult Fixture.MyUpdateAggregateCommand Fixture_tests Parallelism_policies Query_policies Retry_policies_AtMostOnceCommand_when_command_handler_fails Transaction_policies Interfaces Experiment_with_unifying_events_and_commands_test.UserEvent.IRoot Experiment_with_unifying_events_and_commands_test.UserEvent.IUserRegistered Experiment_with_unifying_events_and_commands_test.UserRegistrarEvent.IRoot Fixture.IMyExactlyOnceEvent Fixture.MyAggregateEvent.Created Fixture.MyAggregateEvent.IRoot Fixture.MyAggregateEvent.Updated"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.GetUserQuery.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.GetUserQuery.html",
    "title": "Class Navigator_specification.GetUserQuery | Composable",
    "keywords": "Class Navigator_specification.GetUserQuery Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll protected class Navigator_specification.GetUserQuery : MessageTypes.Remotable.NonTransactional.Queries.Query<Navigator_specification.UserResource>, IRemotableQuery<Navigator_specification.UserResource>, IRemotableMessage, IQuery<Navigator_specification.UserResource>, IHasReturnValue<Navigator_specification.UserResource>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.NonTransactional.Queries.Query<Navigator_specification.UserResource> Navigator_specification.GetUserQuery Implements IRemotableQuery<Navigator_specification.UserResource> IRemotableMessage IQuery<Navigator_specification.UserResource> IHasReturnValue<Navigator_specification.UserResource> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors GetUserQuery(string) public GetUserQuery(string name) Parameters name string Properties Name public string Name { get; } Property Value string"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.RegisterUserCommand.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.RegisterUserCommand.html",
    "title": "Class Navigator_specification.RegisterUserCommand | Composable",
    "keywords": "Class Navigator_specification.RegisterUserCommand Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll protected class Navigator_specification.RegisterUserCommand : MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Navigator_specification.UserRegisteredConfirmationResource>, IAtMostOnceCommand<Navigator_specification.UserRegisteredConfirmationResource>, IAtMostOnceHypermediaCommand, IAtMostOnceMessage, IMustBeHandledTransactionally, IRemotableCommand<Navigator_specification.UserRegisteredConfirmationResource>, IRemotableCommand, IRemotableMessage, ICommand<Navigator_specification.UserRegisteredConfirmationResource>, ICommand, IHasReturnValue<Navigator_specification.UserRegisteredConfirmationResource>, IHypermediaMessage, IRequireAResponse, ICannotBeSentRemotelyFromWithinTransaction, IMessage Inheritance object MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand MessageTypes.Remotable.AtMostOnce.AtMostOnceCommand<Navigator_specification.UserRegisteredConfirmationResource> Navigator_specification.RegisterUserCommand Implements IAtMostOnceCommand<Navigator_specification.UserRegisteredConfirmationResource> IAtMostOnceHypermediaCommand IAtMostOnceMessage IMustBeHandledTransactionally IRemotableCommand<Navigator_specification.UserRegisteredConfirmationResource> IRemotableCommand IRemotableMessage ICommand<Navigator_specification.UserRegisteredConfirmationResource> ICommand IHasReturnValue<Navigator_specification.UserRegisteredConfirmationResource> IHypermediaMessage IRequireAResponse ICannotBeSentRemotelyFromWithinTransaction IMessage Inherited Members MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.MessageId MessageTypes.Remotable.AtMostOnce.AtMostOnceHypermediaCommand.ReplaceDeduplicationId() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Properties Name public string Name { get; } Property Value string Methods Create(string) public static Navigator_specification.RegisterUserCommand Create(string name) Parameters name string Returns Navigator_specification.RegisterUserCommand"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.UserRegisteredConfirmationResource.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.UserRegisteredConfirmationResource.html",
    "title": "Class Navigator_specification.UserRegisteredConfirmationResource | Composable",
    "keywords": "Class Navigator_specification.UserRegisteredConfirmationResource Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll protected class Navigator_specification.UserRegisteredConfirmationResource Inheritance object Navigator_specification.UserRegisteredConfirmationResource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors UserRegisteredConfirmationResource(string) public UserRegisteredConfirmationResource(string name) Parameters name string Properties Name public string Name { get; } Property Value string User public Navigator_specification.GetUserQuery User { get; } Property Value Navigator_specification.GetUserQuery"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.UserResource.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.UserResource.html",
    "title": "Class Navigator_specification.UserResource | Composable",
    "keywords": "Class Navigator_specification.UserResource Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll protected class Navigator_specification.UserResource Inheritance object Navigator_specification.UserResource Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors UserResource(string) public UserResource(string name) Parameters name string Properties Name public string Name { get; } Property Value string"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.Navigator_specification.html",
    "title": "Class Navigator_specification | Composable",
    "keywords": "Class Navigator_specification Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll public class Navigator_specification : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest Navigator_specification Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors Navigator_specification(string) public Navigator_specification(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Can_get_command_result() [Test] public void Can_get_command_result() Can_navigate_async_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource() [Test] public Task Can_navigate_async_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource() Returns Task Can_navigate_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource() [Test] public void Can_navigate_to_startpage_execute_command_and_follow_command_result_link_to_the_created_resource() Setup() [SetUp] public Task Setup() Returns Task TearDown() [TearDown] public Task TearDown() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.When_scheduling_commands_to_be_sent_in_the_future.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.When_scheduling_commands_to_be_sent_in_the_future.html",
    "title": "Class When_scheduling_commands_to_be_sent_in_the_future | Composable",
    "keywords": "Class When_scheduling_commands_to_be_sent_in_the_future Namespace Composable.Tests.Messaging.ServiceBusSpecification Assembly Composable.CQRS.Tests.dll public class When_scheduling_commands_to_be_sent_in_the_future : DuplicateByPluggableComponentTest Inheritance object UniversalTestBase DuplicateByPluggableComponentTest When_scheduling_commands_to_be_sent_in_the_future Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors When_scheduling_commands_to_be_sent_in_the_future(string) public When_scheduling_commands_to_be_sent_in_the_future(string pluggableComponentsCombination) Parameters pluggableComponentsCombination string Methods Messages_whose_due_time_has_passed_are_delivered() [Test] public void Messages_whose_due_time_has_passed_are_delivered() Messages_whose_due_time_have_not_passed_are_not_delivered() [Test] public void Messages_whose_due_time_have_not_passed_are_not_delivered() Setup() [SetUp] public Task Setup() Returns Task TearDown() [TearDown] public Task TearDown() Returns Task"
  },
  "api/Composable.Tests.Messaging.ServiceBusSpecification.html": {
    "href": "api/Composable.Tests.Messaging.ServiceBusSpecification.html",
    "title": "Namespace Composable.Tests.Messaging.ServiceBusSpecification | Composable",
    "keywords": "Namespace Composable.Tests.Messaging.ServiceBusSpecification Classes Navigator_specification Navigator_specification.GetUserQuery Navigator_specification.RegisterUserCommand Navigator_specification.UserRegisteredConfirmationResource Navigator_specification.UserResource When_scheduling_commands_to_be_sent_in_the_future"
  },
  "api/Composable.Tests.Messaging.html": {
    "href": "api/Composable.Tests.Messaging.html",
    "title": "Namespace Composable.Tests.Messaging | Composable",
    "keywords": "Namespace Composable.Tests.Messaging Classes MessageTypeInspector_throws_MessageTypeDesignViolationException_if_ MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_ MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_sending_and_.Type_implements_Wrapper_event_interface_but_ MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_ MessageTypeInspector_throws_MessageTypeDesignViolationException_if_.Inspecting_type_for_subscription_.Type_implements_Wrapper_event_interface_but_"
  },
  "api/Composable.Tests.ObjectExtensionsTest.html": {
    "href": "api/Composable.Tests.ObjectExtensionsTest.html",
    "title": "Class ObjectExtensionsTest | Composable",
    "keywords": "Class ObjectExtensionsTest Namespace Composable.Tests Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ObjectExtensionsTest : UniversalTestBase Inheritance object UniversalTestBase ObjectExtensionsTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods RepeatShouldCreateSequenceOfLengthEqualToParameter() [Test] public void RepeatShouldCreateSequenceOfLengthEqualToParameter()"
  },
  "api/Composable.Tests.Persistence.EventStore.ReadOrderTests.html": {
    "href": "api/Composable.Tests.Persistence.EventStore.ReadOrderTests.html",
    "title": "Class ReadOrderTests | Composable",
    "keywords": "Class ReadOrderTests Namespace Composable.Tests.Persistence.EventStore Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ReadOrderTests : UniversalTestBase Inheritance object UniversalTestBase ReadOrderTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CreateOrdersForEventsBetween_Fills_Minimum_Gap_Around_Integer_Limit() [Test] public void CreateOrdersForEventsBetween_Fills_Minimum_Gap_Around_Integer_Limit() CreateOrdersForEventsBetween_Fills_Minimum_Gap_in_middle_of_offset() [Test] public void CreateOrdersForEventsBetween_Fills_Minimum_Gap_in_middle_of_offset() CreateOrdersForEventsBetween_Fills_Small_Gap_Around_Integer_Limit() [Test] public void CreateOrdersForEventsBetween_Fills_Small_Gap_Around_Integer_Limit() CreateOrdersForEventsBetween_Fills_Small_Gap_in_middle_of_offset() [Test] public void CreateOrdersForEventsBetween_Fills_Small_Gap_in_middle_of_offset() CreateOrdersForEventsBetween_Throws_InvalidOperationException_if_gap_is_too_small() [Test] public void CreateOrdersForEventsBetween_Throws_InvalidOperationException_if_gap_is_too_small() InsertionIntervals() [Test] public void InsertionIntervals() Parse_followed_by_ToString_always_results_in_identical_string() [Test] public void Parse_followed_by_ToString_always_results_in_identical_string() Parse_requires_exactly_19_decimal_point_numbers() [Test] public void Parse_requires_exactly_19_decimal_point_numbers() Parse_throws_on_negative_numbers() [Test] public void Parse_throws_on_negative_numbers() RoundTripping_SqlDecimal_results_in_same_value() [Test] public void RoundTripping_SqlDecimal_results_in_same_value()"
  },
  "api/Composable.Tests.Persistence.EventStore.html": {
    "href": "api/Composable.Tests.Persistence.EventStore.html",
    "title": "Namespace Composable.Tests.Persistence.EventStore | Composable",
    "keywords": "Namespace Composable.Tests.Persistence.EventStore Classes ReadOrderTests"
  },
  "api/Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerPerformanceTests.html": {
    "href": "api/Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerPerformanceTests.html",
    "title": "Class NewtonSoftEventStoreEventSerializerPerformanceTests | Composable",
    "keywords": "Class NewtonSoftEventStoreEventSerializerPerformanceTests Namespace Composable.Tests.Serialization Assembly Composable.PerformanceTests.dll public class NewtonSoftEventStoreEventSerializerPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase NewtonSoftEventStoreEventSerializerPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods SetupTask() [OneTimeSetUp] public void SetupTask() Should_roundtrip_simple_event_1000_times_in_15_milliseconds() [Test] public void Should_roundtrip_simple_event_1000_times_in_15_milliseconds() Should_roundtrip_simple_event_within_50_percent_of_default_serializer_performance() [Test] public void Should_roundtrip_simple_event_within_50_percent_of_default_serializer_performance()"
  },
  "api/Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerTests.html": {
    "href": "api/Composable.Tests.Serialization.NewtonSoftEventStoreEventSerializerTests.html",
    "title": "Class NewtonSoftEventStoreEventSerializerTests | Composable",
    "keywords": "Class NewtonSoftEventStoreEventSerializerTests Namespace Composable.Tests.Serialization Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class NewtonSoftEventStoreEventSerializerTests : UniversalTestBase Inheritance object UniversalTestBase NewtonSoftEventStoreEventSerializerTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods IgnoresAllIAggregateEventProperties() [Test] public void IgnoresAllIAggregateEventProperties() SetupTask() [OneTimeSetUp] public void SetupTask()"
  },
  "api/Composable.Tests.Serialization.TypeRenamingSerializationTests.html": {
    "href": "api/Composable.Tests.Serialization.TypeRenamingSerializationTests.html",
    "title": "Class TypeRenamingSerializationTests | Composable",
    "keywords": "Class TypeRenamingSerializationTests Namespace Composable.Tests.Serialization Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class TypeRenamingSerializationTests : UniversalTestBase Inheritance object UniversalTestBase TypeRenamingSerializationTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Handles_renaming_of_types() [Test] public void Handles_renaming_of_types() Roundtrips_polymorphic_types() [Test] public void Roundtrips_polymorphic_types() SetupTask() [OneTimeSetUp] public void SetupTask()"
  },
  "api/Composable.Tests.Serialization.html": {
    "href": "api/Composable.Tests.Serialization.html",
    "title": "Namespace Composable.Tests.Serialization | Composable",
    "keywords": "Namespace Composable.Tests.Serialization Classes NewtonSoftEventStoreEventSerializerPerformanceTests NewtonSoftEventStoreEventSerializerTests TypeRenamingSerializationTests"
  },
  "api/Composable.Tests.StrictlyManagedResource.StrictlyManagedResourcePerformanceTests.html": {
    "href": "api/Composable.Tests.StrictlyManagedResource.StrictlyManagedResourcePerformanceTests.html",
    "title": "Class StrictlyManagedResourcePerformanceTests | Composable",
    "keywords": "Class StrictlyManagedResourcePerformanceTests Namespace Composable.Tests.StrictlyManagedResource Assembly Composable.PerformanceTests.dll [TestFixture] public class StrictlyManagedResourcePerformanceTests : UniversalTestBase Inheritance object UniversalTestBase StrictlyManagedResourcePerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Allocated_and_disposes_250_instances_in_40_millisecond_when_actually_collecting_stack_traces() [Test] public void Allocated_and_disposes_250_instances_in_40_millisecond_when_actually_collecting_stack_traces() Allocates_and_disposes_5000_instances_in_10_millisecond_when_not_collecting_stack_traces() [Test] public void Allocates_and_disposes_5000_instances_in_10_millisecond_when_not_collecting_stack_traces()"
  },
  "api/Composable.Tests.StrictlyManagedResource.html": {
    "href": "api/Composable.Tests.StrictlyManagedResource.html",
    "title": "Namespace Composable.Tests.StrictlyManagedResource | Composable",
    "keywords": "Namespace Composable.Tests.StrictlyManagedResource Classes StrictlyManagedResourcePerformanceTests"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present.html",
    "title": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present | Composable",
    "keywords": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present : UniversalTestBase Inheritance object UniversalTestBase DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldAddResultOfConstructor() [Test] public void ShouldAddResultOfConstructor() ShouldReturnResulOfConstructor() [Test] public void ShouldReturnResulOfConstructor()"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present.html",
    "title": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present | Composable",
    "keywords": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present : UniversalTestBase Inheritance object UniversalTestBase DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldLeaveValue() [Test] public void ShouldLeaveValue() ShouldReturnExistingValue() [Test] public void ShouldReturnExistingValue()"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present.html",
    "title": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present | Composable",
    "keywords": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present : UniversalTestBase Inheritance object UniversalTestBase DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldAddResultOfConstructor() [Test] public void ShouldAddResultOfConstructor() ShouldReturnResulOfConstructor() [Test] public void ShouldReturnResulOfConstructor()"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present.html",
    "title": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present | Composable",
    "keywords": "Class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present : UniversalTestBase Inheritance object UniversalTestBase DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ShouldLeaveValue() [Test] public void ShouldLeaveValue() ShouldReturnExistingValue() [Test] public void ShouldReturnExistingValue()"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.DictionaryExtensionsGetOrAddWhenKey.html",
    "title": "Class DictionaryExtensionsGetOrAddWhenKey | Composable",
    "keywords": "Class DictionaryExtensionsGetOrAddWhenKey Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Assembly Composable.CQRS.UnitTests.dll public static class DictionaryExtensionsGetOrAddWhenKey Inheritance object DictionaryExtensionsGetOrAddWhenKey Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString()"
  },
  "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.html": {
    "href": "api/Composable.Tests.SystemCE.CollectionsCE.GenericCE.html",
    "title": "Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.CollectionsCE.GenericCE Classes DictionaryExtensionsGetOrAddWhenKey DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Not_Present DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAddDefault_When_Key_Is_Present DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Not_Present DictionaryExtensionsGetOrAddWhenKey.DictionaryExtensions_GetOrAdd_When_Key_Is_Present"
  },
  "api/Composable.Tests.SystemCE.ConfigurationCE.AppConfigConfigurationParameterProviderTests.html": {
    "href": "api/Composable.Tests.SystemCE.ConfigurationCE.AppConfigConfigurationParameterProviderTests.html",
    "title": "Class AppConfigConfigurationParameterProviderTests | Composable",
    "keywords": "Class AppConfigConfigurationParameterProviderTests Namespace Composable.Tests.SystemCE.ConfigurationCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class AppConfigConfigurationParameterProviderTests : UniversalTestBase Inheritance object UniversalTestBase AppConfigConfigurationParameterProviderTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ParameterProvider_exception_should_contain_parameter_key() [Test] public void ParameterProvider_exception_should_contain_parameter_key() ParameterProvider_should_return_the_value_specified_in_the_configuration_file() [Test] public void ParameterProvider_should_return_the_value_specified_in_the_configuration_file() ParameterProvider_should_throw_ConfigurationErrorsException_when_key_does_not_exist() [Test] public void ParameterProvider_should_throw_ConfigurationErrorsException_when_key_does_not_exist() SetupTask() [SetUp] public void SetupTask()"
  },
  "api/Composable.Tests.SystemCE.ConfigurationCE.html": {
    "href": "api/Composable.Tests.SystemCE.ConfigurationCE.html",
    "title": "Namespace Composable.Tests.SystemCE.ConfigurationCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.ConfigurationCE Classes AppConfigConfigurationParameterProviderTests"
  },
  "api/Composable.Tests.SystemCE.LinqCE.ExpressionUtilTests.html": {
    "href": "api/Composable.Tests.SystemCE.LinqCE.ExpressionUtilTests.html",
    "title": "Class ExpressionUtilTests | Composable",
    "keywords": "Class ExpressionUtilTests Namespace Composable.Tests.SystemCE.LinqCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ExpressionUtilTests : UniversalTestBase Inheritance object UniversalTestBase ExpressionUtilTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods CanExtractFromMemberAccessingLambdaWith2Parameters() [Test] public void CanExtractFromMemberAccessingLambdaWith2Parameters() CanExtractFromMemberAccessingLambdaWithNoParameter() [Test] public void CanExtractFromMemberAccessingLambdaWithNoParameter() CanExtractFromMemberAccessingLambdaWithParameter() [Test] public void CanExtractFromMemberAccessingLambdaWithParameter()"
  },
  "api/Composable.Tests.SystemCE.LinqCE.html": {
    "href": "api/Composable.Tests.SystemCE.LinqCE.html",
    "title": "Namespace Composable.Tests.SystemCE.LinqCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.LinqCE Classes ExpressionUtilTests"
  },
  "api/Composable.Tests.SystemCE.ReflectionCE.Activator_default_constructor_Generic_argument_performance_tests.html": {
    "href": "api/Composable.Tests.SystemCE.ReflectionCE.Activator_default_constructor_Generic_argument_performance_tests.html",
    "title": "Class Activator_default_constructor_Generic_argument_performance_tests | Composable",
    "keywords": "Class Activator_default_constructor_Generic_argument_performance_tests Namespace Composable.Tests.SystemCE.ReflectionCE Assembly Composable.PerformanceTests.dll [TestFixture] public class Activator_default_constructor_Generic_argument_performance_tests : UniversalTestBase Inheritance object UniversalTestBase Activator_default_constructor_Generic_argument_performance_tests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Can_construct_instance() [Test] public void Can_construct_instance() Constructs_1_000_000_instances_50_percent_faster_than_via_new_constraint_constructor_time() [Test] public void Constructs_1_000_000_instances_50_percent_faster_than_via_new_constraint_constructor_time() Constructs_1_000_000_instances_50_percent_times_faster_than_via_activator_CreateInstance() [Test] public void Constructs_1_000_000_instances_50_percent_times_faster_than_via_activator_CreateInstance() Constructs_1_000_000_instances_within_50_percent_of_default_constructor_time() [Test] public void Constructs_1_000_000_instances_within_50_percent_of_default_constructor_time()"
  },
  "api/Composable.Tests.SystemCE.ReflectionCE.Activator_one_argument_constructor_performance_tests.html": {
    "href": "api/Composable.Tests.SystemCE.ReflectionCE.Activator_one_argument_constructor_performance_tests.html",
    "title": "Class Activator_one_argument_constructor_performance_tests | Composable",
    "keywords": "Class Activator_one_argument_constructor_performance_tests Namespace Composable.Tests.SystemCE.ReflectionCE Assembly Composable.PerformanceTests.dll [TestFixture] public class Activator_one_argument_constructor_performance_tests : UniversalTestBase Inheritance object UniversalTestBase Activator_one_argument_constructor_performance_tests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Can_create_instance() [Test] public void Can_create_instance() _005_Constructs_1_00_000_instances_20_times_faster_than_via_activator_createinstance() [Test] public void _005_Constructs_1_00_000_instances_20_times_faster_than_via_activator_createinstance() _005_Constructs_1_00_000_instances_within_60_percent_of_normal_constructor_call() [Test] public void _005_Constructs_1_00_000_instances_within_60_percent_of_normal_constructor_call()"
  },
  "api/Composable.Tests.SystemCE.ReflectionCE.html": {
    "href": "api/Composable.Tests.SystemCE.ReflectionCE.html",
    "title": "Namespace Composable.Tests.SystemCE.ReflectionCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.ReflectionCE Classes Activator_default_constructor_Generic_argument_performance_tests Activator_one_argument_constructor_performance_tests"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.MachineWideSharedObjectPerformanceTests.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.MachineWideSharedObjectPerformanceTests.html",
    "title": "Class MachineWideSharedObjectPerformanceTests | Composable",
    "keywords": "Class MachineWideSharedObjectPerformanceTests Namespace Composable.Tests.SystemCE.ThreadingCE Assembly Composable.PerformanceTests.dll [TestFixture] public class MachineWideSharedObjectPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase MachineWideSharedObjectPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Get_copy_runs_multi_threaded_100_times_in_50_milliseconds() [Test] public void Get_copy_runs_multi_threaded_100_times_in_50_milliseconds() Get_copy_runs_single_threaded_100_times_in_40_milliseconds() [Test] public void Get_copy_runs_single_threaded_100_times_in_40_milliseconds() Update_runs_multi_threaded_100_times_in_80_milliseconds() [Test] public void Update_runs_multi_threaded_100_times_in_80_milliseconds() Update_runs_single_threaded_100_times_in_100_milliseconds() [Test] public void Update_runs_single_threaded_100_times_in_100_milliseconds()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.MachineWideSharedObjectTests.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.MachineWideSharedObjectTests.html",
    "title": "Class MachineWideSharedObjectTests | Composable",
    "keywords": "Class MachineWideSharedObjectTests Namespace Composable.Tests.SystemCE.ThreadingCE Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MachineWideSharedObjectTests : UniversalTestBase Inheritance object UniversalTestBase MachineWideSharedObjectTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Create() [Test] public void Create() Create_update_and_get() [Test] public void Create_update_and_get() Non_persistent_Once_all_instance_are_disposed_data_is_gone() [Test] public void Non_persistent_Once_all_instance_are_disposed_data_is_gone() Persistent_Once_all_instance_are_disposed_data_is_retained() [Test] public void Persistent_Once_all_instance_are_disposed_data_is_retained() Two_instances_with_same_name_share_data() [Test] public void Two_instances_with_same_name_share_data() Update_blocks_GetCopy_and_Update_from_both_same_and_other_instances() [Test] public void Update_blocks_GetCopy_and_Update_from_both_same_and_other_instances()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.MonitorClassApiExploration.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.MonitorClassApiExploration.html",
    "title": "Class MonitorClassApiExploration | Composable",
    "keywords": "Class MonitorClassApiExploration Namespace Composable.Tests.SystemCE.ThreadingCE Assembly Composable.CQRS.UnitTests.dll public class MonitorClassApiExploration Inheritance object MonitorClassApiExploration Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Wait_does_not_hang_on_long_timeout_values() [Fact] public void Wait_does_not_hang_on_long_timeout_values() Wait_does_not_return_return_until_lock_is_available_to_reacquire_after_timeout() [Fact] public void Wait_does_not_return_return_until_lock_is_available_to_reacquire_after_timeout() Wait_returns_after_timeout_even_without_pulse() [Fact] public void Wait_returns_after_timeout_even_without_pulse()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.PersistentMachineWideSharedObjectPerformanceTests.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.PersistentMachineWideSharedObjectPerformanceTests.html",
    "title": "Class PersistentMachineWideSharedObjectPerformanceTests | Composable",
    "keywords": "Class PersistentMachineWideSharedObjectPerformanceTests Namespace Composable.Tests.SystemCE.ThreadingCE Assembly Composable.PerformanceTests.dll [TestFixture] public class PersistentMachineWideSharedObjectPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase PersistentMachineWideSharedObjectPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Get_copy_runs_multi_threaded_100_times_in_50_milliseconds() [Test] public void Get_copy_runs_multi_threaded_100_times_in_50_milliseconds() Get_copy_runs_single_threaded_100_times_in_40_milliseconds() [Test] public void Get_copy_runs_single_threaded_100_times_in_40_milliseconds() SetupTask() [SetUp] public void SetupTask() TearDownTask() [TearDown] public void TearDownTask() Update_runs_multi_threaded_100_times_in_80_milliseconds() [Test] public void Update_runs_multi_threaded_100_times_in_80_milliseconds() Update_runs_single_threaded_100_times_in_80_milliseconds() [Test] public void Update_runs_single_threaded_100_times_in_80_milliseconds()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCEPerformanceTests.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCEPerformanceTests.html",
    "title": "Class MonitorCEPerformanceTests | Composable",
    "keywords": "Class MonitorCEPerformanceTests Namespace Composable.Tests.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.PerformanceTests.dll public class MonitorCEPerformanceTests : UniversalTestBase Inheritance object UniversalTestBase MonitorCEPerformanceTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods TearDownTask() [TearDown] public void TearDownTask() WarmUp() [SetUp] public void WarmUp() _010_Read_Unsafe________________________time_is_less_than_nanoseconds_SingleThreaded_06_MultiThreaded_01() [Test] public void _010_Read_Unsafe________________________time_is_less_than_nanoseconds_SingleThreaded_06_MultiThreaded_01() _020_Read_Locked________________________time_is_less_than_nanoseconds_SingleThreaded_25_MultiThreaded_220() [Test] public void _020_Read_Locked________________________time_is_less_than_nanoseconds_SingleThreaded_25_MultiThreaded_220() _031_Read_MonitorCE_Using_EnterLock______time_is_less_than_nanoseconds_SingleThreaded_50_MultiThreaded_450() [Test] public void _031_Read_MonitorCE_Using_EnterLock______time_is_less_than_nanoseconds_SingleThreaded_50_MultiThreaded_450() _032_Read_MonitorCE_Read________________time_is_less_than_nanoseconds_SingleThreaded_60_MultiThreaded_360() [Test] public void _032_Read_MonitorCE_Read________________time_is_less_than_nanoseconds_SingleThreaded_60_MultiThreaded_360() _050_Increment_Unsafe___________________________________time_is_less_than_nanoseconds_SingleThreaded_06_MultiThreaded_12() [Test] public void _050_Increment_Unsafe___________________________________time_is_less_than_nanoseconds_SingleThreaded_06_MultiThreaded_12() _060_Increment_Locked___________________________________time_is_less_than_nanoseconds_SingleThreaded_35__MultiThreaded_300() [Test] public void _060_Increment_Locked___________________________________time_is_less_than_nanoseconds_SingleThreaded_35__MultiThreaded_300() _070_Increment_MonitorCE_Using_EnterLock_________________time_is_less_than_nanoseconds_SingleThreaded_45__MultiThreaded_330() [Test] public void _070_Increment_MonitorCE_Using_EnterLock_________________time_is_less_than_nanoseconds_SingleThreaded_45__MultiThreaded_330() _071_Increment_MonitorCE_Using_EnterNotifyOneUpdateLock___time_is_less_than_nanoseconds_SingleThreaded_55__MultiThreaded_400() [Test] public void _071_Increment_MonitorCE_Using_EnterNotifyOneUpdateLock___time_is_less_than_nanoseconds_SingleThreaded_55__MultiThreaded_400() _072_Increment_MonitorCE_Using_EnterNotifyAllUpdateLock____time_is_less_than_nanoseconds_SingleThreaded_45__MultiThreaded_320() [Test] public void _072_Increment_MonitorCE_Using_EnterNotifyAllUpdateLock____time_is_less_than_nanoseconds_SingleThreaded_45__MultiThreaded_320() _073_Increment_MonitorCE_Update_________________________time_is_less_than_nanoseconds_SingleThreaded_80__MultiThreaded_340() [Test] public void _073_Increment_MonitorCE_Update_________________________time_is_less_than_nanoseconds_SingleThreaded_80__MultiThreaded_340()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout.html",
    "title": "Class MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout | Composable",
    "keywords": "Class MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout Namespace Composable.Tests.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout : UniversalTestBase Inheritance object UniversalTestBase MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Exception_is_ObjectLockTimedOutException() [Test] [EnableRdi(false)] public void Exception_is_ObjectLockTimedOutException() If_owner_thread_blocks_for_less_than_fetchStackTraceTimeout_Exception_contains_owning_threads_stack_trace() [Test] [EnableRdi(false)] public void If_owner_thread_blocks_for_less_than_fetchStackTraceTimeout_Exception_contains_owning_threads_stack_trace() If_owner_thread_blocks_for_more_than_fetchStackTraceTimeout_Exception_does_not_contain_owning_threads_stack_trace() [Test] public void If_owner_thread_blocks_for_more_than_fetchStackTraceTimeout_Exception_does_not_contain_owning_threads_stack_trace()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCE_specification.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.MonitorCE_specification.html",
    "title": "Class MonitorCE_specification | Composable",
    "keywords": "Class MonitorCE_specification Namespace Composable.Tests.SystemCE.ThreadingCE.ResourceAccess Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class MonitorCE_specification : UniversalTestBase Inheritance object UniversalTestBase MonitorCE_specification Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods When_one_thread_calls_AwaitUpdateLock_twice_an_exception_is_thrown() [Test] public void When_one_thread_calls_AwaitUpdateLock_twice_an_exception_is_thrown() When_one_thread_has_UpdateLock_other_thread_is_blocked_until_first_thread_disposes_lock_() [Test] public void When_one_thread_has_UpdateLock_other_thread_is_blocked_until_first_thread_disposes_lock_()"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.ResourceAccess.html",
    "title": "Namespace Composable.Tests.SystemCE.ThreadingCE.ResourceAccess | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.ThreadingCE.ResourceAccess Classes MonitorCEPerformanceTests MonitorCE_specification MonitorCE_specification.An_exception_is_thrown_by_EnterUpdateLock_if_lock_is_not_acquired_within_timeout"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.TasksCE.TaskCEExceptionsTests.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.TasksCE.TaskCEExceptionsTests.html",
    "title": "Class TaskCEExceptionsTests | Composable",
    "keywords": "Class TaskCEExceptionsTests Namespace Composable.Tests.SystemCE.ThreadingCE.TasksCE Assembly Composable.CQRS.UnitTests.dll public class TaskCEExceptionsTests : UniversalTestBase Inheritance object UniversalTestBase TaskCEExceptionsTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods WithAggregateExceptions_throws_aggregate_exception_containing_all_exceptions() [Test] public Task WithAggregateExceptions_throws_aggregate_exception_containing_all_exceptions() Returns Task"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.TasksCE.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.TasksCE.html",
    "title": "Namespace Composable.Tests.SystemCE.ThreadingCE.TasksCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.ThreadingCE.TasksCE Classes TaskCEExceptionsTests"
  },
  "api/Composable.Tests.SystemCE.ThreadingCE.html": {
    "href": "api/Composable.Tests.SystemCE.ThreadingCE.html",
    "title": "Namespace Composable.Tests.SystemCE.ThreadingCE | Composable",
    "keywords": "Namespace Composable.Tests.SystemCE.ThreadingCE Classes MachineWideSharedObjectPerformanceTests MachineWideSharedObjectTests MonitorClassApiExploration PersistentMachineWideSharedObjectPerformanceTests"
  },
  "api/Composable.Tests.SystemExtensions.ExceptionExtensionsTests.html": {
    "href": "api/Composable.Tests.SystemExtensions.ExceptionExtensionsTests.html",
    "title": "Class ExceptionExtensionsTests | Composable",
    "keywords": "Class ExceptionExtensionsTests Namespace Composable.Tests.SystemExtensions Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class ExceptionExtensionsTests : UniversalTestBase Inheritance object UniversalTestBase ExceptionExtensionsTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods GetAllExceptionsInStackShouldReturnAllNestedExceptionsInOrderFromRootToMostNestedException() [Test] public void GetAllExceptionsInStackShouldReturnAllNestedExceptionsInOrderFromRootToMostNestedException() GetRootCauseExceptionShouldReturnMostNestedException() [Test] public void GetRootCauseExceptionShouldReturnMostNestedException() Setup() [SetUp] public void Setup()"
  },
  "api/Composable.Tests.SystemExtensions.html": {
    "href": "api/Composable.Tests.SystemExtensions.html",
    "title": "Namespace Composable.Tests.SystemExtensions | Composable",
    "keywords": "Namespace Composable.Tests.SystemExtensions Classes ExceptionExtensionsTests"
  },
  "api/Composable.Tests.TestEnvironmentConfigurationTest.html": {
    "href": "api/Composable.Tests.TestEnvironmentConfigurationTest.html",
    "title": "Class TestEnvironmentConfigurationTest | Composable",
    "keywords": "Class TestEnvironmentConfigurationTest Namespace Composable.Tests Assembly Composable.CQRS.Tests.dll [TestFixture] public class TestEnvironmentConfigurationTest : UniversalTestBase Inheritance object UniversalTestBase TestEnvironmentConfigurationTest Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Composable_performance_environment_variable_has_sane_value() [Test] [Ignore(\"todo\")] public void Composable_performance_environment_variable_has_sane_value()"
  },
  "api/Composable.Tests.Testing.Performance.TimeAsserterTests.html": {
    "href": "api/Composable.Tests.Testing.Performance.TimeAsserterTests.html",
    "title": "Class TimeAsserterTests | Composable",
    "keywords": "Class TimeAsserterTests Namespace Composable.Tests.Testing.Performance Assembly Composable.PerformanceTests.dll [TestFixture] public class TimeAsserterTests : UniversalTestBase Inheritance object UniversalTestBase TimeAsserterTests Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods ExecuteThreaded_should_add_at_most_1_milliseconds_to_100_iterations_of_action() [Test] public void ExecuteThreaded_should_add_at_most_1_milliseconds_to_100_iterations_of_action() Execute_should_add_at_most_1_milliseconds_to_1000_iterations_of_action() [Test] public void Execute_should_add_at_most_1_milliseconds_to_1000_iterations_of_action()"
  },
  "api/Composable.Tests.Testing.Performance.html": {
    "href": "api/Composable.Tests.Testing.Performance.html",
    "title": "Namespace Composable.Tests.Testing.Performance | Composable",
    "keywords": "Namespace Composable.Tests.Testing.Performance Classes TimeAsserterTests"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times.html",
    "title": "Class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times | Composable",
    "keywords": "Class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods PassedThrough_is_5() [Test] public void PassedThrough_is_5() QueueLength_is_5() [Test] public void QueueLength_is_5() RequestCount_is_10() [Test] public void RequestCount_is_10() SetupTask() [SetUp] public void SetupTask() TearDownTask() [TearDown] public void TearDownTask() _10_milliseconds_later_five_threads_have_passed_the_gate() [Test] public void _10_milliseconds_later_five_threads_have_passed_the_gate()"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once.html",
    "title": "Class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once | Composable",
    "keywords": "Class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods PassedThrough_is_1() [Test] public void PassedThrough_is_1() QueueLength_is_9() [Test] public void QueueLength_is_9() RequestCount_is_10() [Test] public void RequestCount_is_10() SetupTask() [SetUp] public void SetupTask() TearDownTask() [TearDown] public void TearDownTask() _10_milliseconds_later_one_thread_has_passed_the_gate() [Test] public void _10_milliseconds_later_one_thread_has_passed_the_gate()"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y.html",
    "title": "Class Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y | Composable",
    "keywords": "Class Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll [TestFixture(new object?[] { 3, 1 })] [TestFixture(new object?[] { 7, 2 })] [TestFixture(new object?[] { 12, 3 })] [TestFixture(new object?[] { 10, 4 })] [TestFixture(new object?[] { 5, 5 })] [TestFixture(new object?[] { 10, 6 })] [TestFixture(new object?[] { 10, 7 })] [TestFixture(new object?[] { 10, 8 })] [TestFixture(new object?[] { 10, 9 })] [TestFixture(new object?[] { 10, 10 })] public class Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Constructors After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y(int, int) public After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y(int threads, int timesToCallLetOneThreadPassThrough) Parameters threads int timesToCallLetOneThreadPassThrough int Methods PassedThrough_is_X() [Test] public void PassedThrough_is_X() QueueLength_is_Y_minus_X() [Test] public void QueueLength_is_Y_minus_X() RequestCount_is_Y() [Test] public void RequestCount_is_Y() SetupTask() [SetUp] public void SetupTask() TearDownTask() [TearDown] public void TearDownTask() _100_milliseconds_later_X_threads_have_passed_the_gate() [Test] public void _100_milliseconds_later_X_threads_have_passed_the_gate()"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough.html",
    "title": "Class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough | Composable",
    "keywords": "Class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll public class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods PassedThrough_is_0() [Test] public void PassedThrough_is_0() QueueLength_is_10() [Test] public void QueueLength_is_10() RequestCount_is_10() [Test] public void RequestCount_is_10() Setup() [SetUp] public void Setup() TearDownTask() [TearDown] public void TearDownTask() _10_milliseconds_later_no_thread_has_passed_the_gate() [Test] public void _10_milliseconds_later_no_thread_has_passed_the_gate()"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.html",
    "title": "Class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough | Composable",
    "keywords": "Class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll public class Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Within_50_milliseconds_all_threads_are_blocked_on_Passthrough_and_none_have_passed_the_gate() [Test] public void Within_50_milliseconds_all_threads_are_blocked_on_Passthrough_and_none_have_passed_the_gate()"
  },
  "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.html": {
    "href": "api/Composable.Tests.Testing.Threading.Given_a_locked_ThreadGate.html",
    "title": "Class Given_a_locked_ThreadGate | Composable",
    "keywords": "Class Given_a_locked_ThreadGate Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll [TestFixture] public class Given_a_locked_ThreadGate : UniversalTestBase Inheritance object UniversalTestBase Given_a_locked_ThreadGate Inherited Members UniversalTestBase.SurfaceAnyUncatchableExceptions() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object) Methods Calling_AllowOneThreadToPassThrough_throws_an_AwaitingConditionTimedOutException_since_no_threads_are_waiting_to_pass() [Test] public void Calling_AllowOneThreadToPassThrough_throws_an_AwaitingConditionTimedOutException_since_no_threads_are_waiting_to_pass()"
  },
  "api/Composable.Tests.Testing.Threading.WaitHandleTestingExtensions.html": {
    "href": "api/Composable.Tests.Testing.Threading.WaitHandleTestingExtensions.html",
    "title": "Class WaitHandleTestingExtensions | Composable",
    "keywords": "Class WaitHandleTestingExtensions Namespace Composable.Tests.Testing.Threading Assembly Composable.CQRS.UnitTests.dll public static class WaitHandleTestingExtensions Inheritance object WaitHandleTestingExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AssertWaitOneDoesNotTimeout(WaitHandle, TimeSpan) public static void AssertWaitOneDoesNotTimeout(this WaitHandle @this, TimeSpan timeout) Parameters this WaitHandle timeout TimeSpan"
  },
  "api/Composable.Tests.Testing.Threading.html": {
    "href": "api/Composable.Tests.Testing.Threading.html",
    "title": "Namespace Composable.Tests.Testing.Threading | Composable",
    "keywords": "Namespace Composable.Tests.Testing.Threading Classes Given_a_locked_ThreadGate Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_five_times Given_a_locked_ThreadGate.After_10_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_once Given_a_locked_ThreadGate.After_Y_threads_have_queued_up_at_PassThrough_and_LetOneThreadPassThrough_is_called_X_times_where_X_is_at_most_Y Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough Given_a_locked_ThreadGate.After_starting_10_threads_that_all_call_PassThrough.And_all_have_queued_up_calling_PassThrough WaitHandleTestingExtensions"
  },
  "api/Composable.Tests.UniversalTestFixture.html": {
    "href": "api/Composable.Tests.UniversalTestFixture.html",
    "title": "Class UniversalTestFixture | Composable",
    "keywords": "Class UniversalTestFixture Namespace Composable.Tests Assembly Composable.CQRS.Tests.dll [SetUpFixture] public class UniversalTestFixture : UniversalTestFixture Inheritance object UniversalTestFixture UniversalTestFixture Inherited Members UniversalTestFixture.UniversalSetup() UniversalTestFixture.UniversalTeardown() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods Pipe.mutateAsync<T>(T, Func<T, Task>) Pipe.mutate<T>(T, Action<T>) Pipe.select<TValue, TResult>(TValue, Func<TValue, TResult>) Pipe.then<TValue, TResult>(TValue, Func<TResult>) Pipe.then<TValue, TResult>(TValue, TResult) NullableCE.NotNull<T>(T?) ObjectCE.ToStringNotNull(object)"
  },
  "api/Composable.Tests.html": {
    "href": "api/Composable.Tests.html",
    "title": "Namespace Composable.Tests | Composable",
    "keywords": "Namespace Composable.Tests Classes ObjectExtensionsTest TestEnvironmentConfigurationTest UniversalTestFixture"
  },
  "api/Composable.html": {
    "href": "api/Composable.html",
    "title": "Namespace Composable | Composable",
    "keywords": "Namespace Composable Namespaces Composable.Contracts Composable.DDD Composable.DependencyInjection Composable.Functional Composable.GenericAbstractions Composable.Messaging Composable.Persistence Composable.Refactoring.Naming Composable.SystemCE Composable.Testing Classes ComposableApi"
  },
  "docs/_sections/components/event-store/basics.html": {
    "href": "docs/_sections/components/event-store/basics.html",
    "title": "| Composable",
    "keywords": "Event Store Basics Aggregate Roots The Event Store Session Saving and loading aggregate roots."
  },
  "docs/_sections/components/event-store/refactoring.html": {
    "href": "docs/_sections/components/event-store/refactoring.html",
    "title": "| Composable",
    "keywords": "Refactoring Event Streams"
  },
  "docs/messaging/basics.html": {
    "href": "docs/messaging/basics.html",
    "title": "Messaging Basics | Composable",
    "keywords": "Messaging Basics Note The code blocks in this section contain pseudocode for illustration purposes. It is not compatible with any specific library including Composable. Messaging Any method call can, if you squint, be viewed as one object sending a message to another object. However, this ties the sender tightly to the receiver. Loose coupling benefits can be had by making the message passing explicit. By sending messages to a receiver through some intermediary rather than directly. Doing so is called messaging. Tip Messaging is also known as message passing. Messaging terms Here we define some terms as they are used in the context of this document. Message An object for the purpose of sending data to a receiver. Message Type The System.Type returned by message.GetType(). Message Handler In principle just a function that takes a message as a parameter. void Handle(RegisterAccountCommand command); In practice most message handlers need to have one or more dependencies injected into them. In order to support this handlers are often required to be wrapped inside interfaces. That way instances of implementing classes can be resolved from an IOC container easily. interface IMessageHandler<RegisterAccountCommand> { void Handle(RegisterAccountCommand aMessage); } Routing The mechanism by which messages are delivered to handlers. Service Bus A component which decouples message senders from message handlers. Instead of client code calling handler methods, clients send and receive messages via the bus. The bus is responsible for routing the messages to the appropriate handler(s) and invoking them. .Manual service invocation requires an instance of the service. serviceInstance.RegisterAccount(arguments.... .Client don't even know where the service is when accessing it across a bus bus.Send(new RegisterAccountCommand( Tip The benefits of this decoupling may not be obvious at first, but they are profound. Command A message that instructs the handler to perform an action. class RegisterAccountCommand { AccountId AccountId { get; } Password Password { get; } Email Email { get; } } Event A message that informs handlers about something that has happened. interface IAccountRegisteredEvent { AccountId AccountId { get; } Password Password { get; } Email Email { get; } } Query A message that asks the handler to supply some data. class RecentlyRegisteredAccountsQuery { TimeSpan MaxAge { get; } } Command Handler A message handler for a command. Must ensure that the command is successfully executed or throw an exception. Query Handler A message handler for a query. Must ensure that the query is successfully executed or throw an exception. Event Handler A message handler for an event. Event Listener Synonym of Event Handler. Subscribe The action of registering an Event Handler with a service bus. Subscriber An event handler registered on a service bus. Sending a command or query Asking a service bus to deliver a message to its handler. Publishing an event Delivering an event to all it's subscribers. Raising an event Same as Publishing an event Tip You always publish/Raise events. Keeping Send separate from Publish in your mind is fundamental to understanding."
  },
  "docs/messaging/semantic-routing.html": {
    "href": "docs/messaging/semantic-routing.html",
    "title": "Semantic Routing | Composable",
    "keywords": "Semantic Routing NOTE: Semantic routing is used throughout the toolkit. It is foundational for the Event Store, Service Bus, Query Model updaters and Generators... Definition Events are delivered to every registered handler with a compatible argument type. Commands and query message types must have exactly one handler. Tip The first rule is really just polymorphism. Tip Semantic Routing is also known as \"Polymorphic routing\" or \"Polymorphic dispatching\". Clarifying examples Given these event interfaces and implementing classes interface IA interface IB : IA interface IC : IB class A : IA {} class B : IB {} class C : IC {} And these handler methods registered on our service bus void HandleA(IA ia){} //Handles IA, IB and IC void HandleB(IB ib){} //Handles IB and IC void HandleC(IC ic){} //Handles only IC .Let's publish some events and examine the results. serviceBus.Publish(new A()); //Delivered to HandleA serviceBus.Publish(new B()); //Delivered to HandleA and HandleB serviceBus.Publish(new C()); //Delivered to HandleA, HandleB and HandleC Loose coupling through interfaces Working with events in terms of interfaces maintains flexibility. Here is a partial list of things it is possible to do without having to change any code in any event listener. Refactoring event classes Adding event classes Adding event interfaces Changing event inheritance hierarchy Tip Remember to think about events in terms of interfaces. The event classes are an implementation detail that should only ever be known by the code that publishes the event. Warning Do not subscribe to event classes. You will lose the benefits just discussed."
  },
  "index.html": {
    "href": "index.html",
    "title": "Modern architecture for normal projects | Composable",
    "keywords": "Modern architecture for normal projects Composable provides tooling for normal modern architecture projects. Modern architectures By modern architecture we mean software that tend to use tools or designs with labels such as Event Driven Architecture, Event Driven SOA, CQRS, Microservices, NoSql, Event Sourcing etc. Normal projects By normal projects we mean the vast majority of projects. Projects where reliability, productivity and maintainability are the top priorities. Projects where extreme scalability and availability are not required. Existing tooling and platforms Unfortunately, it seems to us that most modern architecture tooling and platforms do not target normal projects. Instead they sacrifice reliability on the altar of nominal scalability and availability. In our experience this tends to result in a complexity explosion as the developers try to build reliable software with tooling not designed for reliability. Ultimately scalability and availability often disappear along with both productivity and maintainability as the complexity skyrockets. How Composable components are different Composable consistently prioritizes reliability, productivity and maintainability for normal projects. Therefore all our tools fully support the following: Transactions and TransactionScope. High performance black box testing using the real production components. Renaming and moving classes already persisted in production data without breaking production data Renaming properties and fields without breaking production data (using Newtonsoft.Net attributes) Powerful semantic event modelling paradigm Compile time and runtime design validation catching all known common design mistakes. link:about/faq#performance[All the performance and scalability that we can squeeze out] Hypermedia Service Bus A unified messaging platform that gives you Powerful zero configuration routing A service bus with an exactly-once delivery guarantee RPC style communication with optional command deduplication Letting you build Type safe Hypermedia APIs that can be consumed with with full intellisense and type safety in .Net language clients such as ASP.Net or Blazor (Blazor support not yet implemented) Typescript (Not yet implemented) All the features from How Composable components are different Event Store Build complex aggregates nesting entities and components in each other to arbitrary depths with ease by leveraging semantic events. Refactoring of event histories including fully removing obsolete code Performant on-demand generation of query models from events dramatically reduces the need for persisted query models All the features from How Composable components are different Document Database Save or load instances of any class serializable with Newtonsoft.Json with a single line of code. Automatically tracks and persists changes to loaded documents All the features from How Composable components are different Hypermedia API Most APIs consist of a number of service classes and interfaces. Imagine instead an APIs that is a lot like a website. That had a start resource from which you follow links to other resources where you could fill in commands and post them. That is essentially what a Hypermedia API is. Hypermedia API have these advantages among others: You expose zero implementation details about your API. Clients only know about the hypermedia controls such as commands, resources and links. Developers don't need to read a ton of documentation to figure out how to use your API or what functionality is available. Instead they just follow the links using intellisense from your start-resource to explore the functionality. Semantic event modelling paradigm Simply means that you declare how the meaning of one event relates to the meaning of another through .Net interface inheritance. As it turns out this enables very flexible and powerful domain designs with complex aggregates, zero configuration routing and elimination of a ton of duplicated event handler code."
  }
}